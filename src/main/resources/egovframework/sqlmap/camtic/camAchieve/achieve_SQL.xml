<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="achieve">

    <select id="getAllPjtCalc" parameterType="map" resultType="map">
        /*getAllPjtCalc*/
        
    </select>

    <select id="getRndPjtCalc" parameterType="map" resultType="map">
        /*getRndPjtCalc*/
        SELECT A.BUSN_CLASS, A.PJT_AMT, B.TOT_RES_COST AS EXP_AMT, B.STATUS
        FROM
        CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN (
            SELECT PJT_SN, TOT_RES_COST, STATUS
            FROM CAM_PJT_MNG.DJ_PJT_RND
            UNION
            SELECT PJT_SN, TOT_RES_COST, STATUS
            FROM CAM_PJT_MNG.DJ_PJT_UNRND
        ) B
        ON A.PJT_SN = B.PJT_SN
        WHERE
            (A.BUSN_CLASS = 'S' OR A.BUSN_CLASS = 'R') AND substr(A.STR_DT, 1, 4) = #{year}
        <if test='deptSeq != null and deptSeq != ""'>
            AND A.DEPT_SEQ = #{deptSeq}
        </if>
        <if test='busnClass != null and busnClass != ""'>
            AND A.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getEngnPjtCalc" parameterType="map" resultType="map">
        /*getEngnPjtCalc*/
        SELECT
            A.BUSN_CLASS,
            A.PJT_AMT,
            B.EXP_AMT,
            C.STATUS AS DELV_STATUS,
            D.STATUS AS RESULT_STATUS
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN B
        ON A.PJT_SN = B.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV C
        ON A.PJT_SN = C.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT D
        ON A.PJT_SN = D.PJT_SN
        WHERE
            (A.BUSN_CLASS = 'D' OR A.BUSN_CLASS = 'V') AND substr(A.STR_DT, 1, 4) = #{year}
        <if test='deptSeq != null and deptSeq != ""'>
            AND A.DEPT_SEQ = #{deptSeq}
        </if>
        <if test='busnClass != null and busnClass != ""'>
            AND A.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getRndSaleAmt" parameterType="map" resultType="long">
        /*getRndSaleAmt*/
        SELECT RE.TOT_COST FROM
        (
            SELECT
                IFNULL(SUM(B.TOT_COST), 0) AS TOT_COST
            FROM
                CAM_MNG.DJ_EXNP A
            LEFT JOIN
                CAM_MNG.DJ_EXNP_DET B
            ON
                A.EXNP_SN = B.EXNP_SN
            LEFT JOIN
                CAM_PJT_MNG.DJ_PROJECT P
            ON
                A.PJT_CD = P.PJT_CD
            WHERE
                (P.BUSN_CLASS = 'R' OR P.BUSN_CLASS = 'S') AND substr(P.STR_DT, 1, 4) = #{year}
            <if test='deptSeq != null and deptSeq != ""'>
                AND P.DEPT_SEQ = #{deptSeq}
            </if>
            <if test='busnClass != null and busnClass != ""'>
                AND P.BUSN_CLASS = #{busnClass}
            </if>
            AND
                DOC_STATUS IN (100, 101)
            AND B.BUDGET_SN IS NOT NULL
        ) RE
    </select>

    <select id="getPurcRndAmt" parameterType="map" resultType="long">
        /*getPurcRndAmt*/
        SELECT IFNULL(SUM(SUBSTRING_INDEX(PURC_ITEM_AMT_SUM, '.', 1)), 0) AS PURC_EXNP_AMT
        FROM
            (SELECT
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) AS BUSN_CLASS,
                 IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
        WHERE
            (SELECT LEFT(PJT_CD, 1) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) in ('R', 'S')
        AND
            (SELECT LEFT(STR_DT, 4) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{year}
            <if test='deptSeq != null and deptSeq != ""'>
                AND (SELECT DEPT_SEQ FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{deptSeq}
            </if>
        ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getPurcEngnAmt" parameterType="map" resultType="long">
        /*getPurcEngnAmt*/
        SELECT IFNULL(SUM(SUBSTRING_INDEX(PURC_ITEM_AMT_SUM, '.', 1)), 0) AS PURC_EXNP_AMT
        FROM
            (SELECT
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) AS BUSN_CLASS,
                 IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM
             FROM
                 CAM_MNG.DJ_PURC_CLAIM A
             WHERE
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) IN ('D', 'V')
            AND
                (SELECT LEFT(STR_DT, 4) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{year}
            <if test='deptSeq != null and !"".equals(deptSeq)'>
                AND (SELECT DEPT_SEQ FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{deptSeq}
            </if>
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND A.CLAIM_DE BETWEEN #{startDt} AND #{endDt}
            </if>
            ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getBustripRndAmt" parameterType="map" resultType="long">
        /*getBustripRndAmt*/
        SELECT IFNULL(SUM(SUBSTRING_INDEX(RES_EXNP_SUM, '.', 1)), 0) AS BUSTRIP_EXNP_AMT
        FROM
            (SELECT
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) AS BUSN_CLASS,
                 IFNULL((
                            SELECT
                                SUM(REPLACE(TOT_COST, ',', '')) AS BUSTRIP_EXNP_SUM
                            FROM
                                CAM_INSIDE.DJ_HR_BIZ_EXNP BE
                            WHERE
                                BE.HR_BIZ_REQ_RESULT_ID = B.HR_BIZ_REQ_RESULT_ID
                        ), 0) AS RES_EXNP_SUM
            FROM
                CAM_INSIDE.DJ_HR_BIZ_REQ A
            LEFT JOIN
                CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B
            ON
                A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
            WHERE
                (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) IN ('R', 'S')
            AND
                (SELECT LEFT(STR_DT, 4) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{year}
            <if test='deptSeq != null and deptSeq != ""'>
                AND (SELECT DEPT_SEQ FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{deptSeq}
            </if>
        ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getBustripEngnAmt" parameterType="map" resultType="long">
        /*getBustripEngnAmt*/
        SELECT IFNULL(SUM(SUBSTRING_INDEX(RES_EXNP_SUM, '.', 1)), 0) AS BUSTRIP_EXNP_AMT
        FROM
            (SELECT
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) AS BUSN_CLASS,
                 IFNULL((
                            SELECT
                                SUM(REPLACE(TOT_COST, ',', '')) AS BUSTRIP_EXNP_SUM
                            FROM
                                CAM_INSIDE.DJ_HR_BIZ_EXNP BE
                            WHERE
                                BE.HR_BIZ_REQ_RESULT_ID = B.HR_BIZ_REQ_RESULT_ID
                        ), 0) AS RES_EXNP_SUM
             FROM
                 CAM_INSIDE.DJ_HR_BIZ_REQ A
                     LEFT JOIN
                 CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B
                 ON
                     A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
             WHERE
                 (SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) IN ('D', 'V')
             AND
                (SELECT LEFT(STR_DT, 4) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{year}
            <if test='deptSeq != null and !"".equals(deptSeq)'>
                AND (SELECT DEPT_SEQ FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) = #{deptSeq}
            </if>
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND ((A.TRIP_DAY_FR BETWEEN #{startDt} AND #{endDt}) OR (A.TRIP_DAY_TO BETWEEN #{startDt} AND #{endDt}))
            </if>
            ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getEstEngnAmt" parameterType="map" resultType="long">
        /*getEstEngnAmt*/
        SELECT IFNULL(SUM(EST_TOT_AMT),0) AS EST_TOT_AMT
        FROM
        (
            SELECT
                BUSN_CLASS,
                IFNULL(EST_TOT_AMT,0) AS EST_TOT_AMT
            FROM
                CAM_PJT_MNG.DJ_PROJECT A
            LEFT JOIN
                    CAM_PJT_MNG.DJ_PJT_DEV B ON A.PJT_SN = B.PJT_SN
            LEFT JOIN
                    CAM_PJT_MNG.DJ_PJT_INV C ON B.DEV_SN = C.DEV_SN
            WHERE A.BUSN_CLASS IN ('D', 'V') AND LEFT(A.STR_DT, 4) = #{year}
            <if test='deptSeq != null and deptSeq != ""'>
                AND A.DEPT_SEQ = #{deptSeq}
            </if>
        ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getExnpRndAmt" parameterType="map" resultType="long">
        /*getExnpRndAmt*/
        SELECT IFNULL(SUM(TOT_COST), 0) AS EXNP_AMT
        FROM
            (SELECT
                 D.BUSN_CLASS,
                 IFNULL(TOT_COST, 0) AS TOT_COST
             FROM
                 CAM_MNG.DJ_PAY_APP_DET PAD
             LEFT JOIN
                 CAM_MNG.DJ_PAY_APP PA ON PAD.PAY_APP_SN = PA.PAY_APP_SN
             LEFT JOIN
                 CAM_PJT_MNG.DJ_PROJECT D ON PA.PJT_CD = D.PJT_CD
             WHERE
                 D.BUSN_CLASS IN ('R', 'S') AND LEFT(D.STR_DT, 4) = #{year} AND PAD.COST_STAT = 'Y'
            <if test='deptSeq != null and deptSeq != ""'>
                AND D.DEPT_SEQ = #{deptSeq}
            </if>
            ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
    </select>

    <select id="getExnpRndAmtList" parameterType="map" resultType="map">
        /*getExnpRndAmtList*/
        SELECT BUSN_CLASS, PAY_APP_TYPE, IFNULL(SUM(TOT_COST), 0) AS TOT_COST
        FROM
        (
            SELECT
                C.BUSN_CLASS,
                A.PAY_APP_TYPE,
                IFNULL(TOT_COST, 0) AS TOT_COST
            FROM
                CAM_MNG.DJ_EXNP A
            LEFT JOIN
                CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
            LEFT JOIN
                CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_CD = C.PJT_CD
            WHERE
                C.BUSN_CLASS IN ('R', 'S')
            AND LEFT(C.STR_DT, 4) = #{year}
            AND A.DOC_STATUS IN (100, 101)
            AND B.BUDGET_SN IS NOT NULL
            <if test='deptSeq != null and !"".equals(deptSeq)'>
                AND C.DEPT_SEQ = #{deptSeq}
            </if>
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
            </if>
        ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
        GROUP BY PAY_APP_TYPE, BUSN_CLASS
    </select>

    <select id="getIncpRndAmtList" parameterType="map" resultType="map">
        /*getIncpRndAmtList*/
        SELECT BUSN_CLASS, PAY_APP_TYPE, IFNULL(SUM(TOT_COST), 0) AS TOT_COST
        FROM
        (
            SELECT
            C.BUSN_CLASS,
            A.PAY_APP_TYPE,
            IFNULL(TOT_COST, 0) AS TOT_COST
            FROM
                CAM_MNG.DJ_EXNP A
            LEFT JOIN
                CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
            LEFT JOIN
                CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_CD = C.PJT_CD
            LEFT JOIN
                CAM_MNG.DJ_PROJECT_BUDGET_MNG D ON C.PJT_CD = D.PJT_CD AND B.BUDGET_SN = D.BGT_CD AND D.ACTIVE = 'Y'
            WHERE
                C.BUSN_CLASS IN ('R', 'S')
            AND LEFT(C.STR_DT, 4) = #{year}
            AND A.DOC_STATUS IN (100, 101)
            AND B.BUDGET_SN IS NOT NULL
            AND D.BGT_CD IS NOT NULL
            AND D.BGT_AT = 1
            <if test='deptSeq != null and !"".equals(deptSeq)'>
                AND C.DEPT_SEQ = #{deptSeq}
            </if>
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
            </if>
        ) RE
        WHERE 1=1
        <if test='busnClass != null and busnClass != ""'>
            AND RE.BUSN_CLASS = #{busnClass}
        </if>
        GROUP BY PAY_APP_TYPE, BUSN_CLASS
    </select>

    <select id="getEngnList" parameterType="map" resultType="map">
        /*getEngnList*/
        SELECT
            A.PJT_NM,
            CASE
                WHEN A.TEAM_STAT = 'Y' THEN '협업'
                WHEN C.STATUS = '100' OR RND.STATUS = '100' OR UNRND.STATUS = '100' THEN '수주'
                ELSE '예상'
            END AS STAT_A,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND RND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND UNRND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') AND C.STATUS = '100' THEN DATE_FORMAT(C.DELV_EST_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_STR_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND RND.STATUS = '100' THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND UNRND.STATUS = '100' THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') AND C.STATUS = '100' THEN DATE_FORMAT(C.DELV_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_END_EX_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R', 'S', 'D', 'V') AND D.STATUS = '100' THEN DATE_FORMAT(D.RS_END_DT, '%Y-%m-%d')
            ELSE ''
            END AS LIST_END_DE,
            A.TEAM_STAT,
            C.DELV_EST_DE,
            A.DELV_DE,
            E.CRM_NM,
            IFNULL(F.PURC_TOT_AMT, 0) AS PURC_TOT_AMT,
            IFNULL(G.RES_EXNP_SUM, 0) AS RES_EXNP_SUM,
            A.PJT_AMT,
            B.EXP_AMT,
            C.STATUS AS DELV_STATUS,
            D.STATUS AS RESULT_STATUS
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN B
        ON A.PJT_SN = B.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV C
        ON A.PJT_SN = C.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT D
        ON A.PJT_SN = D.PJT_SN
        LEFT JOIN CAM_CRM.DJ_CRM_INFO E
        ON A.CRM_SN = E.CRM_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RND RND ON A.PJT_SN = RND.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_UNRND UNRND ON A.PJT_SN = UNRND.PJT_SN
        LEFT JOIN
            (SELECT
                SUM(AB.ITEM_AMT) AS PURC_TOT_AMT, AA.PJT_SN
            FROM
                CAM_MNG.DJ_PURC_CLAIM AA
            LEFT JOIN
                CAM_MNG.DJ_PURC_CLAIM_ITEM AB
            ON
                AA.CLAIM_SN = AB.CLAIM_SN
            GROUP BY AB.CLAIM_SN) F
        ON
            A.PJT_SN = F.PJT_SN
        LEFT JOIN
            (SELECT
                SUM(REPLACE(TOT_COST, ',', '')) AS RES_EXNP_SUM,
                A.PJT_SN
            FROM
                CAM_INSIDE.DJ_HR_BIZ_REQ A
            LEFT JOIN
                CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B
            ON
                A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
            LEFT JOIN
                CAM_INSIDE.DJ_HR_BIZ_EXNP BE
            ON
                B.HR_BIZ_REQ_RESULT_ID = BE.HR_BIZ_REQ_RESULT_ID
            GROUP BY A.PJT_SN) G
        ON
            A.PJT_SN = G.PJT_SN
        WHERE
            1=1
        <if test='busnClass != null and busnClass != ""'>
            AND A.BUSN_CLASS = #{busnClass}
        </if>
            AND substr(A.STR_DT, 1, 4) = 2024
        AND A.PARENT_PJT_SN IS NULL
        <choose>
            <when test='parentDeptSeq != null and parentDeptSeq != ""'>
                AND (
                    A.DEPT_SEQ = #{deptSeq}
                    OR
                    A.DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE PARENT_DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = #{parentDeptSeq}))
                )
            </when>
            <when test='deptSeq != null and deptSeq != ""'>
                AND A.DEPT_SEQ = #{deptSeq}
            </when>
        </choose>
        <choose>
            <when test='"delv".equals(stat)'>
                <if test='"R".equals(busnClass)'>
                    AND (RND.STATUS != '100' OR RND.STATUS IS NULL)
                </if>
                <if test='"S".equals(busnClass)'>
                    AND (UNRND.STATUS != '100' OR RND.STATUS IS NULL)
                </if>
                <if test='"D".equals(busnClass)'>
                    AND (C.STATUS != '100' OR C.STATUS IS NULL)
                </if>
                <if test='"V".equals(busnClass)'>
                    AND (C.STATUS != '100' OR C.STATUS IS NULL)
                </if>
            </when>
            <when test='"dev".equals(stat)'>
                <if test='"R".equals(busnClass)'>
                    AND RND.STATUS = '100'
                </if>
                <if test='"S".equals(busnClass)'>
                    AND UNRND.STATUS = '100'
                </if>
                <if test='"D".equals(busnClass)'>
                    AND C.STATUS = '100'
                </if>
                <if test='"V".equals(busnClass)'>
                    AND C.STATUS = '100'
                </if>
            </when>
        </choose>
    </select>

    <select id="getEngnDeptData" parameterType="map" resultType="map">
        /*getEngnDeptData*/
        SELECT SUM(PJT_AMT) AS PJT_AMT, SUM(EXP_AMT) AS EXP_AMT, SUM(EXP_AMT2) AS EXP_AMT2, DEPT_SEQ
        FROM (
             SELECT
                 A.PJT_AMT, B.TOT_RES_COST AS EXP_AMT, C.EXP_AMT AS EXP_AMT2,
                 IF((SELECT DEPT_LEVEL FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1, DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ)) AS DEPT_SEQ
             FROM
                 CAM_PJT_MNG.DJ_PROJECT A
             LEFT JOIN CAM_PJT_MNG.DJ_PJT_RND B
             ON A.PJT_SN = B.PJT_SN
             LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN C
             ON A.PJT_SN = C.PJT_SN
             WHERE SUBSTR(A.STR_DT, 1, 4) = #{year}
        ) AA
        GROUP BY DEPT_SEQ
    </select>

    <select id="getEngnSaleList" parameterType="map" resultType="map">
        /*getEngnSaleList*/
        SELECT SUM(SUBSTRING_INDEX(PJT_AMT, '.', 1)) AS PJT_AMT, SUM(SUBSTRING_INDEX(EXP_AMT, '.', 1)) AS EXP_AMT, DEPT_SEQ
        FROM
            (
                SELECT
                    A.PJT_AMT,
                    B.EXP_AMT,
                    C.STATUS AS DELV_STATUS,
                    D.STATUS AS RESULT_STATUS,
                    IF((SELECT DEPT_LEVEL FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1, DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ)) AS DEPT_SEQ
                FROM
                    CAM_PJT_MNG.DJ_PROJECT A
                LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN B
                  ON A.PJT_SN = B.PJT_SN
                LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV C
                  ON A.PJT_SN = C.PJT_SN
                LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT D
                  ON A.PJT_SN = D.PJT_SN
                WHERE
                    (A.BUSN_CLASS = 'D' OR A.BUSN_CLASS = 'V') AND substr(A.STR_DT, 1, 4) = #{year} AND D.STATUS = 100
            ) AA
        GROUP BY DEPT_SEQ
    </select>

    <select id="getRndSaleList" parameterType="map" resultType="map">
        /*getRndSaleList*/
        SELECT SUM(SUBSTRING_INDEX(TOT_COST, '.', 1)) AS PJT_AMT, DEPT_SEQ
        FROM
            (
                SELECT
                    B.TOT_COST AS TOT_COST,
                    IF((SELECT DEPT_LEVEL FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = P.DEPT_SEQ) = 1, DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = P.DEPT_SEQ)) AS DEPT_SEQ
                FROM
                    CAM_MNG.DJ_EXNP A
                LEFT JOIN
                    CAM_MNG.DJ_EXNP_DET B
                ON
                    A.EXNP_SN = B.EXNP_SN
                LEFT JOIN
                    CAM_PJT_MNG.DJ_PROJECT P
                ON
                    A.PJT_CD = P.PJT_CD
                WHERE
                    (substr(A.PJT_CD, 1, 1) = 'R' OR substr(A.PJT_CD, 1, 1) = 'S') AND substr(P.STR_DT, 1, 4) = #{year}
                  AND
                    DOC_STATUS IN (100, 101)
                  AND B.BUDGET_SN IS NOT NULL
                <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                    AND A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
                </if>
            ) AA
        GROUP BY DEPT_SEQ
    </select>

    <select id="getEngnEstList" parameterType="map" resultType="map">
        /*getEngnEstList*/
        SELECT DEPT_SEQ, DEPT_NAME, IFNULL(SUM(EST_TOT_AMT),0) AS EST_TOT_AMT
        FROM
            (
                SELECT
                    IF(D.DEPT_LEVEL = 1, D.DEPT_SEQ, E.DEPT_SEQ) as DEPT_SEQ,
                    IF(D.DEPT_LEVEL = 1, D.DEPT_NAME, E.DEPT_NAME) as DEPT_NAME,
                    IFNULL(EST_TOT_AMT,0) AS EST_TOT_AMT
                FROM
                    CAM_PJT_MNG.DJ_PROJECT A
                LEFT JOIN
                    CAM_PJT_MNG.DJ_PJT_DEV B ON A.PJT_SN = B.PJT_SN
                LEFT JOIN
                    CAM_PJT_MNG.DJ_PJT_INV C ON B.DEV_SN = C.DEV_SN
                LEFT JOIN
                    CAM_HR.DJ_DEPT_INFO D ON A.DEPT_SEQ = D.DEPT_SEQ
                LEFT JOIN
                    CAM_HR.DJ_DEPT_INFO E ON D.PARENT_DEPT_SEQ = E.DEPT_SEQ
                WHERE A.BUSN_CLASS IN ('D', 'V') AND LEFT(A.STR_DT, 4) = #{year}
            ) RE
        WHERE 1=1
        GROUP BY DEPT_SEQ
    </select>

    <select id="getEngnPurcList" parameterType="map" resultType="map">
        /*getEngnPurcList*/
        SELECT DEPT_SEQ, DEPT_NAME, IFNULL(SUM(SUBSTRING_INDEX(PURC_ITEM_AMT_SUM, '.', 1)), 0) AS PURC_EXNP_AMT
        FROM
        (
            SELECT
                B.DEPT_SEQ,
                B.DEPT_NAME,
                IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                    CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
            WHERE
                B.BUSN_CLASS IN ('D', 'V')
            AND LEFT(B.STR_DT, 4) = #{year}
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND A.CLAIM_DE BETWEEN #{startDt} AND #{endDt}
            </if>
        ) RE
        WHERE 1=1
        GROUP BY DEPT_SEQ
    </select>

    <select id="getEngnBustripList" parameterType="map" resultType="map">
        /*getEngnBustripList*/
        SELECT DEPT_SEQ, DEPT_NAME, IFNULL(SUM(SUBSTRING_INDEX(RES_EXNP_SUM, '.', 1)), 0) AS BUSTRIP_EXNP_AMT
        FROM
        (
            SELECT
                C.DEPT_SEQ,
                C.DEPT_NAME,
                IFNULL((
                    SELECT
                        SUM(REPLACE(TOT_COST, ',', '')) AS BUSTRIP_EXNP_SUM
                    FROM
                        CAM_INSIDE.DJ_HR_BIZ_EXNP BE
                    WHERE
                        BE.HR_BIZ_REQ_RESULT_ID = B.HR_BIZ_REQ_RESULT_ID
                ), 0) AS RES_EXNP_SUM
            FROM
                CAM_INSIDE.DJ_HR_BIZ_REQ A
            LEFT JOIN
                CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B ON A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
            LEFT JOIN
                CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_SN = C.PJT_SN
            WHERE
                C.BUSN_CLASS  IN ('D', 'V')
            AND LEFT(C.STR_DT, 4) = #{year}
            <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                AND ((A.TRIP_DAY_FR BETWEEN #{startDt} AND #{endDt}) OR (A.TRIP_DAY_TO BETWEEN #{startDt} AND #{endDt}))
            </if>
        ) RE
        WHERE 1=1
        GROUP BY DEPT_SEQ
    </select>

    <select id="getRndIncpList" parameterType="map" resultType="map">
        /*getRndIncpList*/
        SELECT DEPT_SEQ, PAY_APP_TYPE, IFNULL(SUM(TOT_COST), 0) AS TOT_COST
        FROM
            (
                SELECT
                    (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = E.PARENT_DEPT_SEQ) AS DEPT_SEQ,
                    A.PAY_APP_TYPE,
                    IFNULL(TOT_COST, 0) AS TOT_COST
                FROM
                    CAM_MNG.DJ_EXNP A
                LEFT JOIN
                    CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                LEFT JOIN
                    CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_CD = C.PJT_CD
                LEFT JOIN
                    CAM_MNG.DJ_PROJECT_BUDGET_MNG D ON C.PJT_CD = D.PJT_CD AND B.BUDGET_SN = D.BGT_CD AND D.ACTIVE = 'Y'
                LEFT JOIN
                    CAM_HR.DJ_DEPT_INFO E ON C.DEPT_SEQ = E.DEPT_SEQ
                WHERE
                    C.BUSN_CLASS IN ('S', 'R')
                  AND LEFT(C.STR_DT, 4) = #{year}
                  AND A.DOC_STATUS IN (100, 101)
                  AND B.BUDGET_SN IS NOT NULL
                  AND D.BGT_CD IS NOT NULL
                  AND D.BGT_AT = 1
                <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
                    AND A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
                </if>
            ) RE
        WHERE 1=1
        GROUP BY PAY_APP_TYPE, DEPT_SEQ
    </select>

    <insert id="insDeptObjSetting" parameterType="map">
        /*insDeptObjSetting*/
        INSERT INTO CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING
        (
            BASE_YEAR,
            DEPT_SEQ,
            DEPT_LEVEL,
            OBJ_TYPE,
            DELV_OBJ,
            SALE_OBJ,
            INCP_OBJ,
            PAYROLL_OBJ,
            EXNP_OBJ,
            COMM_OBJ,
            REG_EMP_SEQ,
            REG_DT
        )
        VALUES
        (
            #{baseYear},
            #{deptSeq},
            #{deptLevel},
            #{objType},
            #{delvObj},
            #{saleObj},
            #{incpObj},
            #{payrollObj},
            #{exnpObj},
            #{commObj},
            #{empSeq},
            NOW()
        )
    </insert>

    <update id="updDeptObjSetting" parameterType="map">
        /*updDeptObjSetting*/
        UPDATE CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING
        SET
            DELV_OBJ = #{delvObj},
            SALE_OBJ = #{saleObj},
            INCP_OBJ = #{incpObj},
            PAYROLL_OBJ = #{payrollObj},
            EXNP_OBJ = #{exnpObj},
            COMM_OBJ = #{commObj},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DT = NOW()
        WHERE
            BASE_YEAR = #{baseYear}
        AND
            DEPT_SEQ = #{deptSeq}
        AND
            OBJ_TYPE = #{objType}
    </update>

    <select id="getDeptObjList" parameterType="map" resultType="map">
        /*getDeptObjList*/
        SELECT
            A.OBJ_SN,
            A.BASE_YEAR,
            A.DEPT_SEQ as dept_seq,
            B.DEPT_NAME as dept_name,
            FORMAT(A.DELV_OBJ, 0) AS DELV_OBJ,
            FORMAT(A.SALE_OBJ, 0) AS SALE_OBJ,
            FORMAT(A.INCP_OBJ, 0) AS INCP_OBJ,
            FORMAT(A.PAYROLL_OBJ, 0) AS PAYROLL_OBJ,
            FORMAT(A.EXNP_OBJ, 0) AS EXNP_OBJ,
            FORMAT(A.COMM_OBJ, 0) AS COMM_OBJ
        FROM
            CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING A
        LEFT JOIN CAM_HR.DJ_DEPT_INFO B
          ON A.DEPT_SEQ = B.DEPT_SEQ
        WHERE A.BASE_YEAR = #{year}
        AND A.DEPT_LEVEL = #{deptLevel}
        AND A.OBJ_TYPE = #{objType}
        <if test='deptSeq != null and !"".equals(deptSeq)'>
            AND A.DEPT_SEQ = #{deptSeq}
        </if>
    </select>

    <select id="getObjByDeptList" parameterType="map" resultType="map">
        /*getObjByDeptList*/
        SELECT
            A.OBJ_SN,
            A.BASE_YEAR,
            B.PARENT_DEPT_SEQ as dept_seq,
            C.DEPT_NAME as dept_name,
            IFNULL(SUM(A.DELV_OBJ),0) AS DELV_OBJ,
            IFNULL(SUM(A.SALE_OBJ),0) AS SALE_OBJ,
            IFNULL(SUM(A.INCP_OBJ),0) AS INCP_OBJ
        FROM
            CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING A
        LEFT JOIN CAM_HR.DJ_DEPT_INFO B
          ON A.DEPT_SEQ = B.DEPT_SEQ
        LEFT JOIN CAM_HR.DJ_DEPT_INFO C
          ON B.PARENT_DEPT_SEQ = C.DEPT_SEQ
        WHERE A.BASE_YEAR = #{year}
          AND A.DEPT_LEVEL = '2'
        GROUP BY B.PARENT_DEPT_SEQ
    </select>

    <select id="getExnpCompAmt" parameterType="map" resultType="map">
        /*getExnpCompAmt*/
        SELECT IFNULL(SUM(R.TOT_COST), 0) AS TOT_COST FROM (
               SELECT
                    A.PJT_CD,
                    A.JANG_SN,
                    A.GWAN_SN,
                    A.BUDGET_SN,
                    SUM(A.RE_COMPLETE_AMT) AS TOT_COST
               FROM (
                    SELECT A.PJT_CD,
                           SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                           SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                           B.BUDGET_SN,
                           CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'Y'
                                    THEN B.TOT_COST
                                ELSE 0
                          END AS RE_COMPLETE_AMT,
                          CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'N'
                                    THEN B.TOT_COST
                               ELSE 0
                          END AS EXNP_COMPLETE_AMT,
                          0 AS PAY_APP_APPROVAL_AMT,
                          0 AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                        INNER JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN ('100', '101')
                        AND A.PAY_APP_TYPE = '1'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>
                        AND YEAR(A.EXNP_DE) = #{reqYear}

                    UNION ALL

                    SELECT A.PJT_CD,
                           SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                           SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                           B.BUDGET_SN,
                           0 AS RE_COMPLETE_AMT,
                           0 AS EXNP_COMPLETE_AMT,
                           CASE WHEN A.DOC_STATUS IN ('100', '101')
                                    THEN B.TOT_COST
                                ELSE 0
                           END AS PAY_APP_APPROVAL_AMT,
                           CASE WHEN A.DOC_STATUS <![CDATA[<>]]> '0'
                                    THEN B.TOT_COST
                                ELSE 0
                           END AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_PAY_APP A
                        INNER JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                    WHERE A.PAY_APP_TYPE = '1'
                        AND B.EXNP_STAT = 'Y'
                        AND A.DOC_STATUS NOT IN ('30', '40', '60', '999', '102')
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>
                        AND YEAR(A.APP_DE) = #{reqYear}

                    UNION ALL

                    SELECT A.PJT_CD,
                           SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                           SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                           B.BUDGET_SN,
                           -B.TOT_COST AS RE_COMPLETE_AMT,
                           0 AS EXNP_COMPLETE_AMT,
                           0 AS PAY_APP_APPROVAL_AMT,
                           -B.TOT_COST AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                        LEFT JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN (100, 101)
                        AND A.PAY_APP_TYPE = '2'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>
                        AND YEAR(A.EXNP_DE) = #{reqYear}
               ) A
               GROUP BY A.PJT_CD,
               A.JANG_SN,
               A.GWAN_SN,
               A.BUDGET_SN
        ) R
    </select>

    <select id="getExnpCompAmtAll" parameterType="map" resultType="map">
        /*getExnpCompAmtAll*/
        SELECT IFNULL(SUM(R.TOT_COST), 0) AS TOT_COST FROM (
               SELECT
                   A.PJT_CD,
                   A.JANG_SN,
                   A.GWAN_SN,
                   A.BUDGET_SN,
                   SUM(A.RE_COMPLETE_AMT) AS TOT_COST
               FROM (
                        SELECT A.PJT_CD,
                               SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                               SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                               B.BUDGET_SN,
                               CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'Y'
                                        THEN B.TOT_COST
                                    ELSE 0
                                   END AS RE_COMPLETE_AMT,
                               CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'N'
                                        THEN B.TOT_COST
                                    ELSE 0
                                   END AS EXNP_COMPLETE_AMT,
                               0 AS PAY_APP_APPROVAL_AMT,
                               0 AS PAY_APP_TOTAL_AMT
                        FROM CAM_MNG.DJ_EXNP A
                                 INNER JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                        WHERE A.DOC_STATUS IN ('100', '101')
                          AND A.PAY_APP_TYPE = '1'
                        <choose>
                            <when test='sbjSep == null or "".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </when>
                            <otherwise>
                                <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                    AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                                </if>
                                <if test='sbjSep != null and "N".equals(sbjSep)'>
                                    AND A.PJT_CD = #{pjtCd}
                                </if>
                            </otherwise>
                        </choose>

                        UNION ALL

                        SELECT A.PJT_CD,
                            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                            B.BUDGET_SN,
                            0 AS RE_COMPLETE_AMT,
                            0 AS EXNP_COMPLETE_AMT,
                            CASE WHEN A.DOC_STATUS IN ('100', '101')
                            THEN B.TOT_COST
                            ELSE 0
                            END AS PAY_APP_APPROVAL_AMT,
                            CASE WHEN A.DOC_STATUS <![CDATA[<>]]> '0'
                            THEN B.TOT_COST
                            ELSE 0
                            END AS PAY_APP_TOTAL_AMT
                        FROM CAM_MNG.DJ_PAY_APP A
                            INNER JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                        WHERE A.PAY_APP_TYPE = '1'
                          AND B.EXNP_STAT = 'Y'
                          AND A.DOC_STATUS NOT IN ('30', '40', '60', '999', '102')
                        <choose>
                            <when test='sbjSep == null or "".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </when>
                            <otherwise>
                                <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                    AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                                </if>
                                <if test='sbjSep != null and "N".equals(sbjSep)'>
                                    AND A.PJT_CD = #{pjtCd}
                                </if>
                            </otherwise>
                        </choose>

                        UNION ALL

                        SELECT A.PJT_CD,
                            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                            B.BUDGET_SN,
                            -B.TOT_COST AS RE_COMPLETE_AMT,
                            0 AS EXNP_COMPLETE_AMT,
                            0 AS PAY_APP_APPROVAL_AMT,
                            -B.TOT_COST AS PAY_APP_TOTAL_AMT
                        FROM CAM_MNG.DJ_EXNP A
                            LEFT JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                        WHERE A.DOC_STATUS IN (100, 101)
                          AND A.PAY_APP_TYPE = '2'
                        <choose>
                            <when test='sbjSep == null or "".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </when>
                            <otherwise>
                                <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                    AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                                </if>
                                <if test='sbjSep != null and "N".equals(sbjSep)'>
                                    AND A.PJT_CD = #{pjtCd}
                                </if>
                            </otherwise>
                        </choose>
                    ) A
               GROUP BY A.PJT_CD,
                        A.JANG_SN,
                        A.GWAN_SN,
                        A.BUDGET_SN
           ) R
    </select>

    <select id="getIncpCompAmt" parameterType="map" resultType="map">
        /*getIncpCompAmt*/
        SELECT IFNULL(SUM(R.TOT_COST), 0) AS TOT_COST FROM (
           SELECT
               A.PJT_CD,
               A.JANG_SN,
               A.GWAN_SN,
               A.BUDGET_SN,
               SUM(A.RE_COMPLETE_AMT) AS TOT_COST
           FROM (
                    SELECT A.PJT_CD,
                           SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                           SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                           B.BUDGET_SN,
                           CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'Y'
                                    THEN B.TOT_COST
                                ELSE 0
                               END AS RE_COMPLETE_AMT,
                           CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'N'
                                    THEN B.TOT_COST
                                ELSE 0
                               END AS EXNP_COMPLETE_AMT,
                           0 AS PAY_APP_APPROVAL_AMT,
                           0 AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                             INNER JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN ('100', '101')
                      AND A.PAY_APP_TYPE = '1'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>

                    UNION ALL

                    SELECT A.PJT_CD,
                        SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                        SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                        B.BUDGET_SN,
                        0 AS RE_COMPLETE_AMT,
                        0 AS EXNP_COMPLETE_AMT,
                        CASE WHEN A.DOC_STATUS IN ('100', '101')
                        THEN B.TOT_COST
                        ELSE 0
                        END AS PAY_APP_APPROVAL_AMT,
                        CASE WHEN A.DOC_STATUS <![CDATA[<>]]> '0'
                        THEN B.TOT_COST
                        ELSE 0
                        END AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_PAY_APP A
                        INNER JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                    WHERE A.PAY_APP_TYPE = '1'
                      AND B.EXNP_STAT = 'Y'
                      AND A.DOC_STATUS NOT IN ('30', '40', '60', '999', '102')
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>

                    UNION ALL

                    SELECT A.PJT_CD,
                        SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                        SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                        B.BUDGET_SN,
                        -B.TOT_COST AS RE_COMPLETE_AMT,
                        0 AS EXNP_COMPLETE_AMT,
                        0 AS PAY_APP_APPROVAL_AMT,
                        -B.TOT_COST AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                        LEFT JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN (100, 101)
                      AND A.PAY_APP_TYPE = '2'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>
                ) A
           WHERE A.BUDGET_SN IN (SELECT S.BGT_CD FROM CAM_MNG.DJ_PROJECT_BUDGET_MNG S WHERE LEFT(A.PJT_CD, 9) = LEFT(S.PJT_CD, 9) AND BGT_AT = '1' AND S.ACTIVE = 'Y')
           GROUP BY A.PJT_CD,
                    A.JANG_SN,
                    A.GWAN_SN,
                    A.BUDGET_SN
       ) R
    </select>

    <select id="getIncpCompAmt2" parameterType="map" resultType="map">
        /*getIncpCompAmt2*/
        SELECT IFNULL(SUM(R.TOT_COST), 0) AS TOT_COST FROM (
           SELECT
               A.PJT_CD,
               A.JANG_SN,
               A.GWAN_SN,
               A.BUDGET_SN,
               SUM(A.RE_COMPLETE_AMT) AS TOT_COST
           FROM (
                    SELECT A.PJT_CD,
                           SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                           SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                           B.BUDGET_SN,
                           CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'Y'
                                    THEN B.TOT_COST
                                ELSE 0
                               END AS RE_COMPLETE_AMT,
                           CASE WHEN A.DOC_STATUS IN ('100', '101') AND A.RE_STAT = 'N'
                                    THEN B.TOT_COST
                                ELSE 0
                               END AS EXNP_COMPLETE_AMT,
                           0 AS PAY_APP_APPROVAL_AMT,
                           0 AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                             INNER JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN ('100', '101')
                      AND A.PAY_APP_TYPE = '1'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>

                    UNION ALL

                    SELECT A.PJT_CD,
                        SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                        SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                        B.BUDGET_SN,
                        0 AS RE_COMPLETE_AMT,
                        0 AS EXNP_COMPLETE_AMT,
                        CASE WHEN A.DOC_STATUS IN ('100', '101')
                        THEN B.TOT_COST
                        ELSE 0
                        END AS PAY_APP_APPROVAL_AMT,
                        CASE WHEN A.DOC_STATUS <![CDATA[<>]]> '0'
                        THEN B.TOT_COST
                        ELSE 0
                        END AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_PAY_APP A
                        INNER JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                    WHERE A.PAY_APP_TYPE = '1'
                      AND B.EXNP_STAT = 'Y'
                      AND A.DOC_STATUS NOT IN ('30', '40', '60', '999', '102')
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>

                    UNION ALL

                    SELECT A.PJT_CD,
                        SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
                        SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
                        B.BUDGET_SN,
                        -B.TOT_COST AS RE_COMPLETE_AMT,
                        0 AS EXNP_COMPLETE_AMT,
                        0 AS PAY_APP_APPROVAL_AMT,
                        -B.TOT_COST AS PAY_APP_TOTAL_AMT
                    FROM CAM_MNG.DJ_EXNP A
                        LEFT JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
                    WHERE A.DOC_STATUS IN (100, 101)
                      AND A.PAY_APP_TYPE = '2'
                    <choose>
                        <when test='sbjSep == null or "".equals(sbjSep)'>
                            AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                        </when>
                        <otherwise>
                            <if test='sbjSep != null and "Y".equals(sbjSep)'>
                                AND LEFT(A.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                            </if>
                            <if test='sbjSep != null and "N".equals(sbjSep)'>
                                AND A.PJT_CD = #{pjtCd}
                            </if>
                        </otherwise>
                    </choose>
                ) A
           WHERE A.BUDGET_SN IN (SELECT S.BGT_CD FROM CAM_MNG.DJ_PROJECT_BUDGET_MNG S WHERE LEFT(A.PJT_CD, 9) = LEFT(S.PJT_CD, 9) AND BGT_AT = '2' AND S.ACTIVE = 'Y')
           GROUP BY A.PJT_CD,
                    A.JANG_SN,
                    A.GWAN_SN,
                    A.BUDGET_SN
       ) R
    </select>

    <select id="getRealUseExnpAmt" parameterType="map" resultType="map">
        /*getRealUseExnpAmt*/
        SELECT
            IFNULL(SUM((SELECT IFNULL(SUM(TOT_COST), 0) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN AND COST_STAT = 'Y')), 0) AS COST_SUM
        FROM
            CAM_MNG.DJ_PAY_APP PA
        WHERE
        (
            PA.PJT_SN = #{pjtSn}
        <choose>
            <when test='sbjSep == null or "".equals(sbjSep)'>
                OR LEFT(PA.PJT_CD, 9) = (SELECT LEFT(PJT_CD, 9) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
            </when>
            <otherwise>
                <if test='sbjSep != null and "Y".equals(sbjSep)'>
                    OR LEFT(PA.PJT_CD, 9) = (SELECT LEFT(PJT_CD, 9) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
                </if>
                <if test='sbjSep != null and "N".equals(sbjSep)'>
                    OR PA.PJT_CD = (SELECT PJT_CD FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
                </if>
            </otherwise>
        </choose>
        )
        AND PA.DOC_STATUS NOT IN (0, 30, 40)
        AND YEAR(PA.PAY_EXNP_DE) = #{reqYear}
        <if test='costCloseDt != null and !"".equals(costCloseDt)'>
        <![CDATA[
            AND PA.PAY_EXNP_DE <= #{costCloseDt}
        ]]>
        </if>
    </select>

    <select id="getRealUseExnpAmt2" parameterType="map" resultType="map">
        /*getRealUseExnpAmt2*/
        SELECT
            IFNULL(SUM(
                CASE
                    WHEN RE.ORG_YN = 'N' THEN
                        CASE
                            WHEN #{busnClass} IN ('D', 'V') THEN ROUND(RE.PURC_SUP_AMT)
                            ELSE ROUND(RE.PURC_ITEM_AMT_SUM)
                        END
                    ELSE
                        CASE
                            WHEN #{busnClass} IN ('D', 'V') THEN ROUND(RE.PURC_ITEM_AMT_SUM)
                            ELSE
                                CASE
                                    WHEN RE.InTax = '0' THEN ROUND(RE.PURC_ITEM_AMT_SUM) + ROUND(RE.PURC_ITEM_AMT_SUM / 10)
                                    WHEN RE.InTax IN ('1', '2') THEN ROUND(RE.PURC_ITEM_AMT_SUM)
                                END
                        END
                END
            ), 0) AS PURC_SUM
        FROM (
                 SELECT
                     IFNULL(DI.DOC_NO,(SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID)) AS DOC_NO,
                     IFNULL(B.PURC_REQ_DATE, A.CLAIM_DE) as PURC_REQ_DATE,
                     (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) AS EMP_NAME_KR,
                     IFNULL(B.PURC_REQ_PURPOSE, A.PURC_REQ_PURPOSE) AS PURC_REQ_PURPOSE,
                     A.PURC_SN,
                     B.STATUS,
                     B.DOC_STATUS,
                     '' AS InTax,
                     IFNULL((SELECT SUM(PURC_SUP_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_SUP_AMT,
                     IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM,
                     IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
                     'CAYSY' AS CLAIM_STATUS,
                     A.CLAIM_SN,
                     A.STATUS AS CLAIM_DOC_STATUS,
                     A.DOC_ID AS CLAIM_DOC_ID,
                     (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS APPRO_KEY,
                     IFNULL(B.INSPECT_YN, A.INSPECT_YN) AS INSPECT_YN,
                     A.INSPECT_STATUS,
                     IFNULL(B.PAYMENT_METHOD, A.PAYMENT_METHOD) AS PAYMENT_METHOD,
                     A.ORDER_DT,
                     B.REG_DATE,
                     A.CRM_NM,
                     'N' AS ORG_YN,
                     (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                CAM_MNG.DJ_MNG_PURC B ON A.PURC_SN = B.PURC_SN
            LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON B.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
          AND YEAR(A.CLAIM_DE) = #{reqYear}
        <if test='costCloseDt != null and !"".equals(costCloseDt)'>
        <![CDATA[
            AND A.CLAIM_DE <= #{costCloseDt}
        ]]>
        </if>

        UNION ALL

        SELECT
            A.JDocNo AS DOC_NO,
            DATE_FORMAT(A.JReqDate, '%Y-%m-%d') AS PURC_REQ_DATE,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.ReqUserID) AS EMP_NAME_KR,
            A.JReason AS PURC_REQ_PURPOSE,
            '' as PURC_SN,
            '' as STATUS,
            '' as DOC_STATUS,
            A.InTax,
            '' AS PURC_SUP_AMT,
            (SELECT SUM(JSUM) FROM DJ_CAMTIC.JPRICEITEM WHERE JPRICENO = A.JPRICENO) AS PURC_ITEM_AMT_SUM,
            '' AS APPROVE_STAT_CODE,
            'CAYSY' AS CLAIM_STATUS,
            '' AS CLAIM_SN,
            '' AS CLAIM_DOC_STATUS,
            '' AS CLAIM_DOC_ID,
            '' AS APPRO_KEY,
            '' as INSPECT_YN,
            '' as INSPECT_STATUS,
            '' as PAYMENT_METHOD,
            '' as ORDER_DT,
            DATE_FORMAT(A.JReqDate, '%Y-%m-%d') as REG_DATE,
            '' AS CRM_NM,
            'Y' AS ORG_YN,
            ''
        FROM
            DJ_CAMTIC.JPRICEINFO A
        LEFT JOIN
            DJ_CAMTIC.PROJECTACCEPTINFO B ON A.JCode = B.ProjectCode
        WHERE
            A.JState != 1
            AND B.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
          AND YEAR(A.JReqDate) = #{reqYear}
        <if test='costCloseDt != null and !"".equals(costCloseDt)'>
        <![CDATA[
            AND A.JReqDate <= #{costCloseDt}
        ]]>
        </if>
        ) RE
        ORDER BY RE.PURC_REQ_DATE DESC
    </select>

    <select id="getRealUseExnpAmt3" parameterType="map" resultType="map">
        /*getRealUseExnpAmt3*/
        SELECT
            IFNULL(SUM(
                CASE
                    WHEN RE.TRIP_CODE != '4' THEN
                        CAST(RE.RES_EXNP_SUM AS DECIMAL)
                    ELSE
                        CAST(RE.OVER_TOT_COST AS DECIMAL)
                END
            ), 0) AS BUST_SUM
        FROM (
                 SELECT
                     A.HR_BIZ_REQ_ID,
                     B.HR_BIZ_REQ_RESULT_ID,
                     IFNULL(B.TRIP_CODE, A.TRIP_CODE) AS TRIP_CODE,
                     IFNULL(B.BUSN_NAME, A.BUSN_NAME) AS BUSN_NAME,
                     A.EMP_NAME,
                     IFNULL(B.VISIT_CRM, A.VISIT_CRM) AS VISIT_CRM,
                     IFNULL(B.VISIT_LOC, A.VISIT_LOC) AS VISIT_LOC,
                     IFNULL(B.VISIT_LOC_SUB, A.VISIT_LOC_SUB) AS VISIT_LOC_SUB,
                     IFNULL(B.TRIP_DAY_FR, A.TRIP_DAY_FR) AS TRIP_DAY_FR,
                     IFNULL(B.TRIP_TIME_FR, A.TRIP_TIME_FR) AS TRIP_TIME_FR,
                     IFNULL(B.TRIP_DAY_TO, A.TRIP_DAY_TO) AS TRIP_DAY_TO,
                     IFNULL(B.TRIP_TIME_TO, A.TRIP_TIME_TO) AS TRIP_TIME_TO,
                     IFNULL(B.USE_TRSPT, A.USE_TRSPT) AS USE_TRSPT,
                     IFNULL(B.USE_TRSPT_RMK, A.USE_TRSPT_RMK) AS USE_TRSPT_RMK,
                     IFNULL((SELECT SUM(REPLACE(TOT_COST, ',', '')) FROM CAM_INSIDE.DJ_HR_BIZ_OVER_EXNP WHERE HR_BIZ_REQ_ID = A.HR_BIZ_REQ_ID), 0 ) AS OVER_TOT_COST,
                     IFNULL((SELECT SUM(REPLACE(TOT_COST, ',', '')) FROM CAM_INSIDE.DJ_HR_BIZ_OVER_EXNP WHERE HR_BIZ_REQ_ID = A.HR_BIZ_REQ_ID AND HR_BIZ_REQ_RESULT_ID IS NULL), 0) AS BF_OVER_TOT_COST,
                     A.STATUS,
                     A.BF_PAY_APP_SN,
                     B.STATUS AS RS_STATUS,
                     A.PJT_SN,
                     A.BF_EXP_STAT,
                     B.EXP_STAT,
                     B.PAY_APP_SN,
                     IFNULL((
                                SELECT
                                    SUM(REPLACE(TOT_COST, ',', '')) AS BUSTRIP_EXNP_SUM
                                FROM
                                    CAM_INSIDE.DJ_HR_BIZ_EXNP BE
                                WHERE
                                    BE.HR_BIZ_REQ_RESULT_ID = B.HR_BIZ_REQ_RESULT_ID
                            ), 0) AS RES_EXNP_SUM,
                     IFNULL((SELECT COUNT(EMP_NAME) FROM CAM_INSIDE.DJ_HR_BIZ_COMPANION SHBC WHERE A.HR_BIZ_REQ_ID = SHBC.HR_BIZ_REQ_ID AND SHBC.HR_BIZ_REQ_RESULT_ID IS NULL), 0) AS COMPANION,
                     IFNULL((SELECT COUNT(EMP_NAME) FROM CAM_INSIDE.DJ_HR_BIZ_COMPANION SHBC WHERE B.HR_BIZ_REQ_RESULT_ID = SHBC.HR_BIZ_REQ_RESULT_ID), 0) AS COMPANION2,
                     (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = B.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
                     (SELECT DOC_STATUS FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" LIMIT 1) AS EXNP_DOC_STATUS,
             (SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS EXNP_RE_STAT,
             (SELECT DT3 FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS DT3,
             C.PAY_EXNP_DE,
             C.DOC_STATUS,
             IFNULL(D.DOC_STATUS, 0) AS BF_DOC_STATUS,
             DATE_FORMAT(C.APPROVAL_DATE, '%Y-%m-%d') AS APPROVAL_DATE,
            'N' as ORG_YN
        FROM
            CAM_INSIDE.DJ_HR_BIZ_REQ A
            LEFT JOIN
            CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B
        ON
            A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
            LEFT JOIN
            CAM_MNG.DJ_PAY_APP C
            ON
            B.PAY_APP_SN = C.PAY_APP_SN
            LEFT JOIN
            CAM_MNG.DJ_PAY_APP D
            ON
            A.BF_PAY_APP_SN = D.PAY_APP_SN
        WHERE A.PJT_SN = #{pjtSn}
          AND YEAR(IFNULL(B.TRIP_DAY_TO, A.TRIP_DAY_TO)) = #{reqYear}
        UNION
        SELECT
            bb.SeqNo AS HR_BIZ_REQ_ID,
            '' AS HR_BIZ_REQ_RESULT_ID,
            bb.IsType AS TRIP_CODE,
            '' as BUSN_NAME,
            (SELECT userName FROM DJ_CAMTIC.TripInfo a LEFT JOIN DJ_CAMTIC.tripuser b ON a.SeqNo = b.TripNum WHERE a.SeqNo = bb.SeqNo LIMIT 1) AS EMP_NAME,
            bb.LocationEx AS VISIT_CRM,
            bb.Location AS VISIT_LOC,
            bb.LocationPass AS VISIT_LOC_SUB,
            ifnull(bb.SDate, bb.ResultSDate) AS TRIP_DAY_FR,
            concat(bb.STimeY,':',bb.STimeM) AS TRIP_TIME_FR,
            ifnull(bb.EDate, bb.ResultEDate) AS TRIP_DAY_TO,
            concat(bb.ETimeY,':',bb.ETimeM) AS TRIP_TIME_TO,
            bb.IsCar AS USE_TRSPT,
            bb.IsCarText AS USE_TRSPT_RMK,
            bb.IsPayMoney AS OVER_TOT_COST,
            '' AS BF_OVER_TOT_COST,
            '' AS STATUS,
            '' AS BF_PAY_APP_SN,
            '100' AS RS_STATUS,
            aa.ProjectCode AS PJT_SN,
            '' AS BF_EXP_STAT,
            '' AS EXNP_STAT,
            '' AS PAY_APP_SN,
            bb.IsPayMoney AS RES_EXNP_SUM,
            (SELECT COUNT(*) FROM DJ_CAMTIC.TripInfo a LEFT JOIN DJ_CAMTIC.tripuser b ON a.SeqNo = b.TripNum WHERE a.SeqNo = bb.SeqNo) - 1 AS COMPANION,
            '' AS COMPANION2,
            '' AS EXNP_STATUS,
            '' AS EXNP_DOC_STATUS,
            '' AS EXNP_RE_STAT,
            '' AS DT3,
            '' as PAY_EXNP_DE,
            '' as DOC_STATUS,
            '' AS BF_DOC_STATUS,
            '' AS APPROVAL_DATE,
            'Y' as ORG_YN
        FROM
            DJ_CAMTIC.ProjectAcceptInfo aa
            LEFT JOIN
            DJ_CAMTIC.TripInfo bb ON aa.IntraCode = bb.ObjectCode
        WHERE bb.ObjectCode IS NOT NULL
          AND bb.State IN ('5','6') AND aa.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
          AND YEAR(ifnull(bb.EDate, bb.ResultEDate)) = #{reqYear}
        <if test='costCloseDt != null and !"".equals(costCloseDt)'>
        <![CDATA[
            AND ifnull(bb.EDate, bb.ResultEDate) <= #{costCloseDt}
        ]]>
        </if>
        ) RE
    </select>

    <select id="getRealUseExnpAllAmt" parameterType="map" resultType="map">
        /*getRealUseExnpAmt*/
        SELECT
            IFNULL(SUM((SELECT IFNULL(SUM(TOT_COST), 0) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN AND COST_STAT = 'Y')), 0) AS COST_SUM
        FROM
            CAM_MNG.DJ_PAY_APP PA
        WHERE
            (
                PA.PJT_SN = #{pjtSn}
                    OR LEFT(PA.PJT_CD, 9) = (SELECT LEFT(PJT_CD, 9) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
                )
                AND PA.DOC_STATUS NOT IN (0, 30, 40)
    </select>

    <select id="getRealUseExnpAllAmt2" parameterType="map" resultType="map">
        /*getPurcReqClaimList2*/
        SELECT
            IFNULL(SUM(
                           CASE
                               WHEN RE.ORG_YN = 'N' THEN
                                   CASE
                                       WHEN #{busnClass} IN ('D', 'V') THEN ROUND(RE.PURC_SUP_AMT)
                                       ELSE ROUND(RE.PURC_ITEM_AMT_SUM)
                                       END
                               ELSE
                                   CASE
                                       WHEN #{busnClass} IN ('D', 'V') THEN ROUND(RE.PURC_ITEM_AMT_SUM)
                                       ELSE
                                           CASE
                                               WHEN RE.InTax = '0' THEN ROUND(RE.PURC_ITEM_AMT_SUM) + ROUND(RE.PURC_ITEM_AMT_SUM / 10)
                                               WHEN RE.InTax IN ('1', '2') THEN ROUND(RE.PURC_ITEM_AMT_SUM)
                                               END
                                       END
                               END
                   ), 0) AS PURC_SUM
        FROM (
                 SELECT
                     IFNULL(DI.DOC_NO,(SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID)) AS DOC_NO,
                     IFNULL(B.PURC_REQ_DATE, A.CLAIM_DE) as PURC_REQ_DATE,
                     (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) AS EMP_NAME_KR,
                     IFNULL(B.PURC_REQ_PURPOSE, A.PURC_REQ_PURPOSE) AS PURC_REQ_PURPOSE,
                     A.PURC_SN,
                     B.STATUS,
                     B.DOC_STATUS,
                     '' AS InTax,
                     IFNULL((SELECT SUM(PURC_SUP_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_SUP_AMT,
                     IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM,
                     IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
                     'CAYSY' AS CLAIM_STATUS,
                     A.CLAIM_SN,
                     A.STATUS AS CLAIM_DOC_STATUS,
                     A.DOC_ID AS CLAIM_DOC_ID,
                     (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS APPRO_KEY,
                     IFNULL(B.INSPECT_YN, A.INSPECT_YN) AS INSPECT_YN,
                     A.INSPECT_STATUS,
                     IFNULL(B.PAYMENT_METHOD, A.PAYMENT_METHOD) AS PAYMENT_METHOD,
                     A.ORDER_DT,
                     B.REG_DATE,
                     A.CRM_NM,
                     'N' AS ORG_YN,
                     (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                CAM_MNG.DJ_MNG_PURC B ON A.PURC_SN = B.PURC_SN
            LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON B.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}

        UNION ALL

        SELECT
            A.JDocNo AS DOC_NO,
            DATE_FORMAT(A.JReqDate, '%Y-%m-%d') AS PURC_REQ_DATE,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.ReqUserID) AS EMP_NAME_KR,
            A.JReason AS PURC_REQ_PURPOSE,
            '' as PURC_SN,
            '' as STATUS,
            '' as DOC_STATUS,
            A.InTax,
            '' AS PURC_SUP_AMT,
            (SELECT SUM(JSUM) FROM DJ_CAMTIC.JPRICEITEM WHERE JPRICENO = A.JPRICENO) AS PURC_ITEM_AMT_SUM,
            '' AS APPROVE_STAT_CODE,
            'CAYSY' AS CLAIM_STATUS,
            '' AS CLAIM_SN,
            '' AS CLAIM_DOC_STATUS,
            '' AS CLAIM_DOC_ID,
            '' AS APPRO_KEY,
            '' as INSPECT_YN,
            '' as INSPECT_STATUS,
            '' as PAYMENT_METHOD,
            '' as ORDER_DT,
            DATE_FORMAT(A.JReqDate, '%Y-%m-%d') as REG_DATE,
            '' AS CRM_NM,
            'Y' AS ORG_YN,
            ''
        FROM
            DJ_CAMTIC.JPRICEINFO A
                LEFT JOIN
            DJ_CAMTIC.PROJECTACCEPTINFO B ON A.JCode = B.ProjectCode
        WHERE
            A.JState != 1
            AND B.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
            ) RE
        ORDER BY RE.PURC_REQ_DATE DESC
    </select>

    <select id="getRealUseExnpAllAmt3" parameterType="map" resultType="map">
        /*getRealUseExnpAllAmt3*/
        SELECT
            IFNULL(SUM(
                           CASE
                               WHEN RE.TRIP_CODE != '4' THEN
                                   CAST(RE.RES_EXNP_SUM AS DECIMAL)
                               ELSE
                                   CAST(RE.OVER_TOT_COST AS DECIMAL)
                               END
                   ), 0) AS BUST_SUM
        FROM (
                 SELECT
                     A.HR_BIZ_REQ_ID,
                     B.HR_BIZ_REQ_RESULT_ID,
                     IFNULL(B.TRIP_CODE, A.TRIP_CODE) AS TRIP_CODE,
                     IFNULL(B.BUSN_NAME, A.BUSN_NAME) AS BUSN_NAME,
                     A.EMP_NAME,
                     IFNULL(B.VISIT_CRM, A.VISIT_CRM) AS VISIT_CRM,
                     IFNULL(B.VISIT_LOC, A.VISIT_LOC) AS VISIT_LOC,
                     IFNULL(B.VISIT_LOC_SUB, A.VISIT_LOC_SUB) AS VISIT_LOC_SUB,
                     IFNULL(B.TRIP_DAY_FR, A.TRIP_DAY_FR) AS TRIP_DAY_FR,
                     IFNULL(B.TRIP_TIME_FR, A.TRIP_TIME_FR) AS TRIP_TIME_FR,
                     IFNULL(B.TRIP_DAY_TO, A.TRIP_DAY_TO) AS TRIP_DAY_TO,
                     IFNULL(B.TRIP_TIME_TO, A.TRIP_TIME_TO) AS TRIP_TIME_TO,
                     IFNULL(B.USE_TRSPT, A.USE_TRSPT) AS USE_TRSPT,
                     IFNULL(B.USE_TRSPT_RMK, A.USE_TRSPT_RMK) AS USE_TRSPT_RMK,
                     IFNULL((SELECT SUM(REPLACE(TOT_COST, ',', '')) FROM CAM_INSIDE.DJ_HR_BIZ_OVER_EXNP WHERE HR_BIZ_REQ_ID = A.HR_BIZ_REQ_ID), 0 ) AS OVER_TOT_COST,
                     IFNULL((SELECT SUM(REPLACE(TOT_COST, ',', '')) FROM CAM_INSIDE.DJ_HR_BIZ_OVER_EXNP WHERE HR_BIZ_REQ_ID = A.HR_BIZ_REQ_ID AND HR_BIZ_REQ_RESULT_ID IS NULL), 0) AS BF_OVER_TOT_COST,
                     A.STATUS,
                     A.BF_PAY_APP_SN,
                     B.STATUS AS RS_STATUS,
                     A.PJT_SN,
                     A.BF_EXP_STAT,
                     B.EXP_STAT,
                     B.PAY_APP_SN,
                     IFNULL((
                                SELECT
                                    SUM(REPLACE(TOT_COST, ',', '')) AS BUSTRIP_EXNP_SUM
                                FROM
                                    CAM_INSIDE.DJ_HR_BIZ_EXNP BE
                                WHERE
                                    BE.HR_BIZ_REQ_RESULT_ID = B.HR_BIZ_REQ_RESULT_ID
                            ), 0) AS RES_EXNP_SUM,
                     IFNULL((SELECT COUNT(EMP_NAME) FROM CAM_INSIDE.DJ_HR_BIZ_COMPANION SHBC WHERE A.HR_BIZ_REQ_ID = SHBC.HR_BIZ_REQ_ID AND SHBC.HR_BIZ_REQ_RESULT_ID IS NULL), 0) AS COMPANION,
                     IFNULL((SELECT COUNT(EMP_NAME) FROM CAM_INSIDE.DJ_HR_BIZ_COMPANION SHBC WHERE B.HR_BIZ_REQ_RESULT_ID = SHBC.HR_BIZ_REQ_RESULT_ID), 0) AS COMPANION2,
                     (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = B.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
                     (SELECT DOC_STATUS FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" LIMIT 1) AS EXNP_DOC_STATUS,
             (SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS EXNP_RE_STAT,
             (SELECT DT3 FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS DT3,
             C.PAY_EXNP_DE,
             C.DOC_STATUS,
             IFNULL(D.DOC_STATUS, 0) AS BF_DOC_STATUS,
             DATE_FORMAT(C.APPROVAL_DATE, '%Y-%m-%d') AS APPROVAL_DATE,
            'N' as ORG_YN
        FROM
            CAM_INSIDE.DJ_HR_BIZ_REQ A
            LEFT JOIN
            CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT B
        ON
            A.HR_BIZ_REQ_ID = B.HR_BIZ_REQ_ID
            LEFT JOIN
            CAM_MNG.DJ_PAY_APP C
            ON
            B.PAY_APP_SN = C.PAY_APP_SN
            LEFT JOIN
            CAM_MNG.DJ_PAY_APP D
            ON
            A.BF_PAY_APP_SN = D.PAY_APP_SN
        WHERE A.PJT_SN = #{pjtSn}
        UNION
        SELECT
            bb.SeqNo AS HR_BIZ_REQ_ID,
            '' AS HR_BIZ_REQ_RESULT_ID,
            bb.IsType AS TRIP_CODE,
            '' as BUSN_NAME,
            (SELECT userName FROM DJ_CAMTIC.TripInfo a LEFT JOIN DJ_CAMTIC.tripuser b ON a.SeqNo = b.TripNum WHERE a.SeqNo = bb.SeqNo LIMIT 1) AS EMP_NAME,
            bb.LocationEx AS VISIT_CRM,
            bb.Location AS VISIT_LOC,
            bb.LocationPass AS VISIT_LOC_SUB,
            ifnull(bb.SDate, bb.ResultSDate) AS TRIP_DAY_FR,
            concat(bb.STimeY,':',bb.STimeM) AS TRIP_TIME_FR,
            ifnull(bb.EDate, bb.ResultEDate) AS TRIP_DAY_TO,
            concat(bb.ETimeY,':',bb.ETimeM) AS TRIP_TIME_TO,
            bb.IsCar AS USE_TRSPT,
            bb.IsCarText AS USE_TRSPT_RMK,
            bb.IsPayMoney AS OVER_TOT_COST,
            '' AS BF_OVER_TOT_COST,
            '' AS STATUS,
            '' AS BF_PAY_APP_SN,
            '100' AS RS_STATUS,
            aa.ProjectCode AS PJT_SN,
            '' AS BF_EXP_STAT,
            '' AS EXNP_STAT,
            '' AS PAY_APP_SN,
            bb.IsPayMoney AS RES_EXNP_SUM,
            (SELECT COUNT(*) FROM DJ_CAMTIC.TripInfo a LEFT JOIN DJ_CAMTIC.tripuser b ON a.SeqNo = b.TripNum WHERE a.SeqNo = bb.SeqNo) - 1 AS COMPANION,
            '' AS COMPANION2,
            '' AS EXNP_STATUS,
            '' AS EXNP_DOC_STATUS,
            '' AS EXNP_RE_STAT,
            '' AS DT3,
            '' as PAY_EXNP_DE,
            '' as DOC_STATUS,
            '' AS BF_DOC_STATUS,
            '' AS APPROVAL_DATE,
            'Y' as ORG_YN
        FROM
            DJ_CAMTIC.ProjectAcceptInfo aa
            LEFT JOIN
            DJ_CAMTIC.TripInfo bb ON aa.IntraCode = bb.ObjectCode
        WHERE bb.ObjectCode IS NOT NULL
          AND bb.State IN ('5','6') AND aa.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
            ) RE
    </select>

    <select id="getPlanExnpAmt" parameterType="map" resultType="map">
        /*getPlanExnpAmt*/
        SELECT
            IFNULL(SUM(CALC_AM), 0) AS TOT_COST
        FROM CAM_MNG.DJ_PROJECT_BUDGET_MNG S
        WHERE
            1=1
            <choose>
                <when test='sbjSep == null or "".equals(sbjSep)'>
                    AND LEFT(S.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                </when>
                <otherwise>
                    <if test='sbjSep != null and "Y".equals(sbjSep)'>
                        AND LEFT(S.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                    </if>
                    <if test='sbjSep != null and "N".equals(sbjSep)'>
                        AND S.PJT_CD = #{pjtCd}
                    </if>
                </otherwise>
            </choose>
            AND S.BGT_AT = '1'
            AND S.ACTIVE = 'Y'
    </select>

    <select id="getUseExnpAmt" parameterType="map" resultType="map">
        /*getUseExnpAmt*/
        SELECT
            IFNULL(SUM(CALC_AM), 0) AS TOT_COST
        FROM CAM_MNG.DJ_PROJECT_BUDGET_MNG S
        WHERE
            1=1
            <choose>
                <when test='sbjSep == null or "".equals(sbjSep)'>
                    AND LEFT(S.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                </when>
                <otherwise>
                    <if test='sbjSep != null and "Y".equals(sbjSep)'>
                        AND LEFT(S.PJT_CD, 9) = LEFT(#{pjtCd}, 9)
                    </if>
                    <if test='sbjSep != null and "N".equals(sbjSep)'>
                        AND S.PJT_CD = #{pjtCd}
                    </if>
                </otherwise>
            </choose>
            AND S.BGT_AT = '2'
            AND S.ACTIVE = 'Y'
    </select>

    <select id="getGoodsAmt" parameterType="map" resultType="map">
        /*getGoodsAmt*/
        SELECT
            IFNULL(SUM(GOODS_TOT_AMT), 0) AS GOODS_TOT_SUM,
            IFNULL((SELECT VAT FROM CAM_PJT_MNG.DJ_PJT_EST WHERE A.PJT_SN = PJT_SN ORDER BY EST_SN DESC LIMIT 1),'') AS GOODS_VAT,
            IFNULL((SELECT EST_TOT_AMT FROM CAM_PJT_MNG.DJ_PJT_EST WHERE A.PJT_SN = PJT_SN ORDER BY EST_SN DESC LIMIT 1),0) AS EST_AMT_SUM
        FROM
            CAM_PJT_MNG.DJ_PJT_GOODS A
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getGoodsLastInfo" parameterType="map" resultType="map">
        /*getGoodsLastInfo*/
        SELECT * FROM CAM_PJT_MNG.DJ_PJT_GOODS WHERE PJT_SN = #{pjtSn} ORDER BY GOODS_SN DESC LIMIT 1
    </select>

    <select id="getProjectListByAchieve" parameterType="map" resultType="map">
        /*getProjectListByAchieve*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.V_PJT_ACHIEVE V
        WHERE
            1=1
        <if test='pjtSn != null and pjtSn != ""'>
            <choose>
                <when test='"group".equals(typeCk)'>
                    AND (V.PJT_SN IN (
                        SELECT
                            PJT_SN
                        FROM
                            CAM_PJT_MNG.DJ_PROJECT A
                        WHERE
                            ACTIVE = 'Y'
                        AND (
                            CASE
                                WHEN A.PARENT_PJT_SN IS NULL THEN A.PJT_SN
                                ELSE A.PARENT_PJT_SN
                            END
                        ) = (
                            SELECT
                            CASE
                                WHEN B.PARENT_PJT_SN IS NULL THEN B.PJT_SN
                                ELSE B.PARENT_PJT_SN
                            END
                        FROM
                            CAM_PJT_MNG.DJ_PROJECT B
                        WHERE
                            B.PJT_SN = #{pjtSn}
                        )
                    )
                    OR V.PJT_SN IN (
                        SELECT
                            PJT_SN
                        FROM
                            CAM_PJT_MNG.DJ_PROJECT A
                        WHERE
                            ACTIVE = 'Y'
                        AND PNT_PJT_SN = #{pjtSn}
                    ))
                </when>
                <when test='"team".equals(typeCk)'>
                    AND V.PJT_SN IN (
                        SELECT
                            PJT_SN
                        FROM
                            CAM_PJT_MNG.DJ_PROJECT A
                        WHERE
                            ACTIVE = 'Y'
                        AND PNT_PJT_SN = #{pjtSn}
                    )
                </when>
                <otherwise>
                    AND V.PJT_SN = #{pjtSn}
                </otherwise>
            </choose>
        </if>
        <if test='pjtYear != null and pjtYear != ""'>
            AND V.YEAR = #{pjtYear}
        </if>
        <if test='busnClass != null and busnClass != ""'>
            AND V.BUSN_CLASS = #{busnClass}
        </if>
        <if test='empName != null and empName != ""'>
            AND V.PM LIKE CONCAT('%', #{empName}, '%')
        </if>
        <if test='busnSubClass != null and busnSubClass != "" and !"Y".equals(busnSubClass) and !"res".equals(busnSubClass)'>
            AND V.PJT_STEP in (${busnSubClass})
            AND V.PJT_STOP = 'N'
            AND (V.RES_STATUS != '100' OR V.RES_STATUS IS NULL)
        </if>
        <if test='busnSubClass == "Y" or "Y".equals(busnSubClass)'>
            AND V.PJT_STOP = 'Y'
        </if>
        <if test='"res".equals(busnSubClass)'>
            AND V.RES_STATUS = '100'
        </if>
        <if test='deptSeq != null and deptSeq != ""'>
            AND (
                V.DEPT_SEQ IN (${deptSeq})
                OR V.DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE PARENT_DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ IN (${deptSeq})))
            )
        </if>
        <if test='"1".equals(searchValue)'>
            AND (V.REG_EMP_SEQ = #{regEmpSeq} OR V.PM_EMP_SEQ = #{regEmpSeq} OR V.EMP_SEQ = #{regEmpSeq})
            AND V.PJT_STEP in ('E1','E2','E3','E4','E5','R','R2','S','S2')
            AND V.PJT_STOP != "Y"
        </if>
        <if test='"2".equals(searchValue)'>
            AND (V.REG_EMP_SEQ = #{regEmpSeq} OR V.PM_EMP_SEQ = #{regEmpSeq} OR V.EMP_SEQ = #{regEmpSeq})
        </if>
        <if test='"3".equals(searchValue)'>
            AND V.PJT_STEP in ('E1','E2','E3','E4','E5','R','R2','S','S2')
        </if>
        <if test='"".equals(searchValue) and "".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND (V.PJT_NM LIKE CONCAT('%', #{searchText}, '%') OR V.BS_TITLE LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"1".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND V.PJT_CD LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"2".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND V.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"4".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND V.PM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='!"".equals(pjtNm) and pjtNm != null'>
            AND V.PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
        <if test='type != null and !"".equals(type)'>
            AND V.BUSN_CLASS IN ('R', 'S') AND V.PJT_CD IS NOT NULL
        </if>
        ORDER BY V.PJT_SN, V.YEAR
    </select>

    <select id="getResultProject" parameterType="map" resultType="map">
        /*getResultProject*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_RESULT B ON A.PJT_SN = B.PJT_SN
        WHERE
            A.PJT_SN = #{pjtSn} AND B.STATUS IN (100, 101)
    </select>

    <select id="getPjtDevSn" parameterType="map" resultType="map">
        /*getPjtDevSn*/
        SELECT
            PD.*,
            IFNULL((SELECT SUM(EST_TOT_AMT) FROM CAM_PJT_MNG.DJ_PJT_INV WHERE PD.DEV_SN = DEV_SN), 0) AS INV_TOT_SUM
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV PD
        LEFT JOIN CAM_PJT_MNG.DJ_PROJECT P ON PD.PJT_SN = P.PJT_SN
        WHERE
            PD.PJT_SN = #{pjtSn}
        AND
            (PD.STATUS IN (100, 101) OR (P.TEAM_STAT = 'Y') AND P.DEV_TEAM_CK = 'Y')
        ORDER BY PD.DEV_SN DESC
        LIMIT 1
    </select>

    <insert id="insProjectPaySet" parameterType="map">
        /*insProjectPaySet*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PAY_SET
        (
            PJT_SN,
            YEAR,
            BEF_EXP_SALE_AMT,
            BEF_EXP_PROFIT_AMT,
            AFT_SALE_AMT,
            AFT_PROFIT_AMT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{year},
            #{befExpSaleAmt},
            #{befExpProfitAmt},
            #{aftSaleAmt},
            #{aftProfitAmt},
            #{regEmpSeq}
        )
    </insert>

    <update id="updProjectPaySet" parameterType="map">
        /*updProjectPaySet*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PAY_SET
        SET
            YEAR = #{year},
            BEF_EXP_SALE_AMT = #{befExpSaleAmt},
            BEF_EXP_PROFIT_AMT = #{befExpProfitAmt},
            AFT_SALE_AMT = #{aftSaleAmt},
            AFT_PROFIT_AMT = #{aftProfitAmt},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{year}
    </update>

    <select id="getProjectPaySet" parameterType="map" resultType="map">
        /*getProjectPaySet*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{year}
        LIMIT 1
    </select>

    <select id="getProjectPayBef" parameterType="map" resultType="map">
        /*getProjectPayBef*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{reqYear} - 1
        LIMIT 1
    </select>

    <select id="getProjectPayNow" parameterType="map" resultType="map">
        /*getProjectPayNow*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{reqYear}
        LIMIT 1
    </select>

    <select id="getProjectPayAft" parameterType="map" resultType="map">
        /*getProjectPayAft*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{reqYear} + 1
    </select>

    <select id="getProjectPayBefMul" parameterType="map" resultType="map">
        /*getProjectPayBefMul*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            (PJT_SN = #{pjtSn} OR PJT_SN IN (SELECT PARENT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn}) OR PJT_SN IN (SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PARENT_PJT_SN = #{pjtSn}))
        AND YEAR = #{reqYear} - 1
        LIMIT 1
    </select>

    <select id="getProjectPayNowMul" parameterType="map" resultType="map">
        /*getProjectPayNowMul*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            (PJT_SN = #{pjtSn} OR PJT_SN IN (SELECT PARENT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn}) OR PJT_SN IN (SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PARENT_PJT_SN = #{pjtSn}))
        AND YEAR = #{reqYear}
        LIMIT 1
    </select>

    <select id="getDeptObjAmt" parameterType="map" resultType="map">
        /*getDeptObjAmt*/
        SELECT
            IFNULL(SUM(DELV_OBJ),0) AS DELV_OBJ,
            IFNULL(SUM(SALE_OBJ),0) AS SALE_OBJ,
            IFNULL(SUM(INCP_OBJ),0) AS INCP_OBJ,
            IFNULL(SUM(PAYROLL_OBJ),0) AS PAYROLL_OBJ,
            IFNULL(SUM(EXNP_OBJ),0) AS EXNP_OBJ,
            IFNULL(SUM(COMM_OBJ),0) AS COMM_OBJ
        FROM
            CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING
        WHERE BASE_YEAR = #{baseYear}
          AND DEPT_LEVEL = #{deptLevel}
          AND OBJ_TYPE = #{objType}
        <if test='deptSeq != null and deptSeq != ""'>
            AND DEPT_SEQ = #{deptSeq}
        </if>
    </select>

    <select id="getDeptPayrollData" resultType="map" parameterType="map">
        /*getDeptPayrollData*/
        SELECT
            DEPT_SEQ,
            IFNULL(SUM(SUP_PAY),0) AS TOT_PAY
        FROM
        (
            SELECT
                A.*,
                (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE ERP_EMP_SEQ = A.ERP_EMP_CD) AS DEPT_SEQ
            FROM CAM_INSIDE.DJ_PAY_ROLL_LEGER A
            WHERE 1=1
                AND BASE_YEAR_MONTH = #{month}
            <if test='deptSeq != null and deptSeq != ""'>
                AND (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE ERP_EMP_SEQ = A.ERP_EMP_CD) = #{deptSeq}
            </if>
        ) RE
    </select>

    <select id="getDeptPayrollList" parameterType="map" resultType="map">
        /*getDeptPayrollList*/
        SELECT
            BASE_YEAR_MONTH,
            PRAENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.PRAENT_DEPT_SEQ) AS PARENT_DEPT_NAME,
            DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS DEPT_NAME,
            SUM(SUP_PAY) AS TOT_PAY,
            SUM(INS_TOT_PAY) AS INS_TOT_PAY,
            SUM(RETIRE_PAY) AS RETIRE_PAY
        FROM
            (
                SELECT
                    A.*,
                    C.DEPT_SEQ,
                    IF(
                        C.DEPT_LEVEL = 1,
                        C.DEPT_SEQ,
                        (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = C.DEPT_SEQ)
                    ) AS PRAENT_DEPT_SEQ,
                    (SELECT RETIRE_PAY FROM CAM_INSIDE.DJ_PAY_ROLL_COMP WHERE ERP_EMP_CD = A.ERP_EMP_CD AND BASE_YEAR_MONTH = A.BASE_YEAR_MONTH) AS RETIRE_PAY
                FROM CAM_INSIDE.DJ_PAY_ROLL_LEGER A
                LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
                LEFT JOIN CAM_HR.DJ_DEPT_INFO C ON B.DEPT_SEQ = C.DEPT_SEQ
                WHERE BASE_YEAR_MONTH LIKE CONCAT(#{baseYear}, '%') AND A.EMP_TYPE LIKE '%전담%'
            ) B
        GROUP BY DEPT_SEQ, BASE_YEAR_MONTH
    </select>

    <select id="getDeptPayrollDutyList" parameterType="map" resultType="map">
        /*getDeptPayrollDutyList*/
        SELECT
            PRAENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.PRAENT_DEPT_SEQ) AS PARENT_DEPT_NAME,
            DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS DEPT_NAME,
            SUM(SUP_PAY) AS TOT_PAY,
            DUTY_TYPE,
            DUTY_NAME
        FROM
            (
                SELECT
                    A.*,
                    C.DEPT_SEQ,
                    B.DUTY_NAME,
                    IF(B.DUTY_CODE != '', 'MNG', 'USER') AS DUTY_TYPE,
                    IF(
                            C.DEPT_LEVEL = 1,
                            C.DEPT_SEQ,
                            (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = C.DEPT_SEQ)
                    ) AS PRAENT_DEPT_SEQ
                FROM CAM_INSIDE.DJ_PAY_ROLL_LEGER A
                         LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
                         LEFT JOIN CAM_HR.DJ_DEPT_INFO C ON B.DEPT_SEQ = C.DEPT_SEQ
                WHERE BASE_YEAR_MONTH LIKE CONCAT(#{baseYear}, '%') AND A.EMP_TYPE LIKE '%전담%'
            ) B
        GROUP BY DEPT_SEQ, DUTY_TYPE
    </select>

    <select id="getExnpList" parameterType="map" resultType="map">
        /*getExnpList*/
        SELECT
            A.*,
            (SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS DOC_NO,
            B.TOT_COST,
            B.BUDGET_NM,
            B.EVID_TYPE,
            B.CRM_NM
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN (SELECT SUM(TOT_COST) AS TOT_COST, EXNP_SN, BUDGET_NM, EVID_TYPE, CRM_NM FROM CAM_MNG.DJ_EXNP_DET GROUP BY EXNP_SN) B
        ON A.EXNP_SN = B.EXNP_SN
        WHERE
            A.RE_STAT = 'Y' AND A.DOC_STATUS = 100 AND LEFT(A.PJT_CD, 1) IN ('E', 'V', 'M')
        AND
            A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
        <if test='busnCd != null and !"".equals(busnCd)'>
            AND A.BUSN_CD = #{busnCd}
        </if>
        <if test='searchValue != null and !"".equals(searchValue)'>
            AND A.${searchValue} LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='searchValue == null or "".equals(searchValue)'>
            AND (
                    A.EXNP_BRIEFS LIKE CONCAT('%', #{searchText}, '%')
                )
        </if>
        <if test='teamSeq != null and !"".equals(teamSeq)'>
            AND B.TEAM_SEQ = #{teamSeq}
        </if>
        <if test='rmStat != null and !"".equals(rmStat)'>
            AND B.RM_Y = #{rmStat}
        </if>
        ORDER BY EXNP_DE DESC
    </select>

    <select id="getExnpDetailList" parameterType="map" resultType="map">
        /*getExnpDetailList*/
        SELECT
            *,
            (SELECT EXNP_DE FROM CAM_MNG.DJ_EXNP WHERE EXNP_SN = #{exnpSn}) AS EXNP_DE
        FROM
            CAM_MNG.DJ_EXNP_DET
        WHERE
            EXNP_SN = #{exnpSn}
    </select>

    <select id="getDeptExnpList" parameterType="map" resultType="map">
        /*getDeptExnpList*/
        SELECT
            SUM(B.TOT_COST) AS TOT_COST,
            A.EXNP_SN,
            DATE_FORMAT(A.EXNP_DE,'%Y-%m') AS EXNP_DE,
            B.TEAM_SEQ,
            B.TEAM_NAME,
            (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT IF(DEPT_LEVEL=1, DEPT_SEQ, PARENT_DEPT_SEQ) FROM CAM_HR.DJ_DEPT_INFO WHERE B.TEAM_SEQ = DEPT_SEQ)) AS PARENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT IF(DEPT_LEVEL=1, DEPT_SEQ, PARENT_DEPT_SEQ) FROM CAM_HR.DJ_DEPT_INFO WHERE B.TEAM_SEQ = DEPT_SEQ)) AS PARENT_DEPT_NAME
        FROM CAM_MNG.DJ_EXNP A
        LEFT JOIN (
            SELECT
                TOT_COST, EXNP_SN, BUDGET_NM,
                IF(TEAM_SEQ = '' OR TEAM_SEQ IS NULL, '1219', TEAM_SEQ) AS TEAM_SEQ,
                IF(TEAM_NAME = '팀 선택' OR TEAM_NAME IS NULL, '공통운영비', TEAM_NAME) AS TEAM_NAME,
                RM_Y, EXCEPT_PAY
            FROM CAM_MNG.DJ_EXNP_DET
        ) B ON A.EXNP_SN = B.EXNP_SN
        WHERE
            A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
          AND A.RE_STAT = 'Y'
          AND A.DOC_STATUS = 100
          AND LEFT(A.PJT_CD, 1) IN ('E', 'V', 'M')
          AND B.RM_Y = 'Y'
        GROUP BY DATE_FORMAT(A.EXNP_DE,'%Y-%m'), B.TEAM_SEQ
    </select>

    <select id="getDeptPayrollListForTotRate" parameterType="map" resultType="map">
        /*getDeptPayrollListForTotRate*/
        SELECT
            BASE_YEAR_MONTH,
            PRAENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.PRAENT_DEPT_SEQ) AS PARENT_DEPT_NAME,
            DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS DEPT_NAME,
            SUM(SUP_PAY) AS TOT_PAY,
            SUM(INS_TOT_PAY) AS INS_TOT_PAY,
            SUM(RETIRE_PAY) AS RETIRE_PAY
        FROM
            (
                SELECT
                    A.*,
                    C.DEPT_SEQ,
                    IF(
                        C.DEPT_LEVEL = 1,
                        C.DEPT_SEQ,
                        (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = C.DEPT_SEQ)
                    ) AS PRAENT_DEPT_SEQ,
                    (SELECT RETIRE_PAY FROM CAM_INSIDE.DJ_PAY_ROLL_COMP WHERE ERP_EMP_CD = A.ERP_EMP_CD AND BASE_YEAR_MONTH = A.BASE_YEAR_MONTH) AS RETIRE_PAY
                FROM CAM_INSIDE.DJ_PAY_ROLL_LEGER A
                         LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
                         LEFT JOIN CAM_HR.DJ_DEPT_INFO C ON B.DEPT_SEQ = C.DEPT_SEQ
                WHERE DATE_FORMAT(CONCAT(BASE_YEAR_MONTH,'-01'),'%Y%m%d') BETWEEN DATE_FORMAT(#{startDt},'%Y%m%d') AND DATE_FORMAT(#{endDt},'%Y%m%d')
                AND A.EMP_TYPE LIKE '%전담%'
            ) B
        GROUP BY DEPT_SEQ
    </select>

    <select id="getExnpListForTotRate" parameterType="map" resultType="map">
        /*getExnpListForTotRate*/
        SELECT
            A.*,
            (SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS DOC_NO,
            B.TOT_COST,
            B.BUDGET_NM,
            B.EVID_TYPE,
            B.CRM_NM,
            B.TEAM_SEQ,
            B.TEAM_NAME,
            (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT IF(DEPT_LEVEL=1, DEPT_SEQ, PARENT_DEPT_SEQ) FROM CAM_HR.DJ_DEPT_INFO WHERE B.TEAM_SEQ = DEPT_SEQ)) AS PARENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT IF(DEPT_LEVEL=1, DEPT_SEQ, PARENT_DEPT_SEQ) FROM CAM_HR.DJ_DEPT_INFO WHERE B.TEAM_SEQ = DEPT_SEQ)) AS PARENT_DEPT_NAME,
            B.EXCEPT_PAY
        FROM
        CAM_MNG.DJ_EXNP A
        LEFT JOIN (SELECT SUM(TOT_COST) AS TOT_COST, EXNP_SN, BUDGET_NM, EVID_TYPE, CRM_NM, TEAM_SEQ, TEAM_NAME, EXCEPT_PAY FROM CAM_MNG.DJ_EXNP_DET GROUP BY EXNP_SN, TEAM_SEQ) B
        ON A.EXNP_SN = B.EXNP_SN
        WHERE
            A.RE_STAT = 'Y' AND A.DOC_STATUS = 100 AND LEFT(A.PJT_CD, 1) IN ('E', 'V', 'M')
        AND
            A.EXNP_DE BETWEEN #{startDt} AND #{endDt}
        <if test='deptSeq != null and !"".equals(deptSeq)'>
            AND B.TEAM_SEQ = #{deptSeq}
        </if>
        ORDER BY EXNP_DE DESC
    </select>

    <update id="updateExnpStatus" parameterType="map">
        /*updateExnpStatus*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            RM_Y = #{rmY}
        WHERE
            EXNP_DET_SN = #{exnpDetSn}
    </update>

    <update id="updChangeTeam" parameterType="map">
        /*updChangeTeam*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            TEAM_SEQ = #{teamSeq},
            TEAM_NAME = #{teamName}
        WHERE
            EXNP_DET_SN = #{exnpDetSn}
    </update>

    <update id="updateExnpExceptPay" parameterType="map">
        /*updateExnpExceptPay*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            EXCEPT_PAY = #{exceptPay}
        WHERE
            EXNP_DET_SN = #{exnpDetSn}
    </update>

    <select id="getEmpRateValue" parameterType="map" resultType="map">
        /*getEmpRateValue*/
        SELECT
            A.*,
            COUNT(*) AS CNT
        FROM
            (
                SELECT
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
                    DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
                    IFNULL(CASE WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END, "") AS SPOT,
                    CASE WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
                         WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
                         ELSE 999 END SORT
                FROM
                    CAM_HR.DJ_EMP_INFO      AS HEI
                LEFT JOIN
                    CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
                WHERE
                    HEI.ACTIVE = 'Y'
                  AND HEI.WORK_STATUS_CODE = 'Y'
                  AND
                    DATE_FORMAT(#{endDt}, '%Y%m%d') >= DATE_FORMAT(HEI.JOIN_DAY, '%Y%m%d')
                  AND
                    EMP_NAME_KR like concat('%', '' ,'%')
                  AND
                    (
                        (DIVISION IN(0))
                            OR
                        (DIVISION IN(4) AND DIVISION_SUB IN(1,2))
                        )
                  AND
                    TEMP_DIVISION = "N"
                ORDER BY EMP_NAME_KR
            ) A
        GROUP BY TEAM_SEQ, DEPT_SEQ
    </select>

    <insert id="insDeptExpenseRateValue" parameterType="map">
        /*insDeptExpenseRateValue*/
        INSERT INTO CAM_MNG.DJ_DEPT_EXPENSE_RATE
        (
            BASE_YEAR,
            DEPT_SEQ,
            PERSONNEL_IN_CHARGE,
            COMMON_RATE,
            PERSONNEL_EXPENSES,
            FOUR_INSURANCE,
            RETIREMENT_PENSION,
            PERSONNEL_TOTAL,
            DIRECT_PAY,
            EXCEPT_PAY,
            SELF_PAY_TOTAL,
            COMMON_EXPENSES,
            EXPENSES_TOTAL
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
        (
            #{item.baseYear},
            #{item.deptSeq},
            #{item.personnelInCharge},
            #{item.commonRate},
            #{item.personnelExpenses},
            #{item.fourInsurance},
            #{item.retirementPension},
            #{item.personnelTotal},
            #{item.directPay},
            #{item.exceptPay},
            #{item.selfPayTotal},
            #{item.commonExpenses},
            #{item.personnelExpensesTotal}
        )
        </foreach>
    </insert>

    <update id="updDeptExpenseRateStatus" parameterType="map">
        /*updDeptExpenseRateStatus*/
        UPDATE CAM_MNG.DJ_DEPT_EXPENSE_RATE
        SET
            STATUS = 'N'
        WHERE
            BASE_YEAR = #{baseYear}
    </update>

    <select id="getPayRollCompList" parameterType="map" resultType="map">
        /*getPayRollCompList*/
        SELECT
            A.*,
            B.DUTY_CODE,
            IF(C.DEPT_LEVEL = 1, C.DEPT_NAME, D.DEPT_NAME) AS DEPT_NAME,
            C.DEPT_NAME AS DEPT_TEAM_NAME
        FROM
            CAM_INSIDE.DJ_PAY_ROLL_COMP A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO C ON C.DEPT_SEQ = B.DEPT_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO D ON D.DEPT_SEQ = C.PARENT_DEPT_SEQ
        WHERE
            A.BASE_YEAR_MONTH LIKE CONCAT(#{baseYear}, '%')
        AND A.EMP_TYPE LIKE '%전담%'
        <choose>
            <when test='"empName".equals(searchKeyWord)'>
                AND A.EMP_NAME LIKE CONCAT('%', #{searchValue}, '%')
            </when>
            <when test='"deptName".equals(searchKeyWord)'>
                AND (
                B.DEPT_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                D.DEPT_NAME LIKE CONCAT('%', #{searchValue}, '%')
                )
            </when>
            <otherwise>
                AND (
                A.EMP_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                B.DEPT_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                D.DEPT_NAME LIKE CONCAT('%', #{searchValue}, '%')
                )
            </otherwise>
        </choose>
        ORDER BY BASE_YEAR_MONTH, D.ORDER_SN, C.ORDER_SN
    </select>

    <select id="getDeptPayRollCompList" parameterType="map" resultType="map">
        /*getDeptPayRollCompList*/
        SELECT
            BASE_YEAR_MONTH,
            PRAENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.PRAENT_DEPT_SEQ) AS PARENT_DEPT_NAME,
            DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS DEPT_NAME,
            SUM(C_TOT_PAY) AS C_TOT_PAY,
            SUM(RETIRE_PAY) AS RETIRE_PAY
        FROM
            (
                SELECT
                    A.*,
                    C.DEPT_SEQ,
                    IF(
                        C.DEPT_LEVEL = 1,
                        C.DEPT_SEQ,
                        (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = C.DEPT_SEQ)
                    ) AS PRAENT_DEPT_SEQ
                FROM CAM_INSIDE.DJ_PAY_ROLL_COMP A
                         LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
                         LEFT JOIN CAM_HR.DJ_DEPT_INFO C ON B.DEPT_SEQ = C.DEPT_SEQ
                WHERE BASE_YEAR_MONTH LIKE CONCAT(#{baseYear}, '%') AND A.EMP_TYPE LIKE '%전담%'
            ) B
        GROUP BY DEPT_SEQ, BASE_YEAR_MONTH
    </select>

    <select id="getDeptPayrollCompDutyList" parameterType="map" resultType="map">
        /*getDeptPayrollCompDutyList*/
        SELECT
            PRAENT_DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.PRAENT_DEPT_SEQ) AS PARENT_DEPT_NAME,
            DEPT_SEQ,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS DEPT_NAME,
            SUM(C_TOT_PAY) AS C_TOT_PAY,
            SUM(RETIRE_PAY) AS RETIRE_PAY,
            DUTY_TYPE,
            DUTY_NAME
        FROM
            (
                SELECT
                    A.*,
                    C.DEPT_SEQ,
                    B.DUTY_NAME,
                    IF(B.DUTY_CODE != '', 'MNG', 'USER') AS DUTY_TYPE,
                    IF(
                        C.DEPT_LEVEL = 1,
                        C.DEPT_SEQ,
                        (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = C.DEPT_SEQ)
                    ) AS PRAENT_DEPT_SEQ
                FROM CAM_INSIDE.DJ_PAY_ROLL_COMP A
                LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.ERP_EMP_CD = B.ERP_EMP_SEQ
                LEFT JOIN CAM_HR.DJ_DEPT_INFO C ON B.DEPT_SEQ = C.DEPT_SEQ
                WHERE BASE_YEAR_MONTH LIKE CONCAT(#{baseYear}, '%') AND A.EMP_TYPE LIKE '%전담%'
            ) B
        GROUP BY DEPT_SEQ, DUTY_TYPE
    </select>

    <select id="getObjHistList" parameterType="map" resultType="map">
        /*getObjHistList*/
        SELECT
            A.*,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AS DEPT_NAME,
            DATE_FORMAT(A.REG_DT, '%Y-%m-%d') AS REG_DE
        FROM
            CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING_HISTORY A
        WHERE
            BASE_YEAR = #{baseYear} AND DEPT_LEVEL = 2
        ORDER BY A.REG_DT
    </select>

    <insert id="insDeptObjSettingHistory" parameterType="map">
        /*insDeptObjSettingHistory*/
        INSERT INTO CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING_HISTORY (OBJ_SN, BASE_YEAR, DEPT_SEQ, DEPT_LEVEL, DELV_OBJ, SALE_OBJ, INCP_OBJ, REG_EMP_SEQ, REG_DT, MOD_EMP_SEQ, MOD_DT)
        SELECT OBJ_SN, BASE_YEAR, DEPT_SEQ, DEPT_LEVEL, DELV_OBJ, SALE_OBJ, INCP_OBJ, REG_EMP_SEQ, REG_DT, MOD_EMP_SEQ, MOD_DT FROM CAM_PJT_MNG.DJ_DEPT_OBJ_SETTING
        WHERE BASE_YEAR = #{baseYear} AND DEPT_LEVEL = 2 AND OBJ_TYPE = 'team'
    </insert>

    <select id="getCorpProjectData" parameterType="map" resultType="map">
        /*getCorpProjectData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_CORP_PROJECT
        WHERE
            SUBSTR(CORP_PJT_CD,6,2) = SUBSTR(#{year},3,2)
          AND SUBSTR(CORP_PJT_CD,1,2) = 'Mm'
          AND CORP_PJT_NM LIKE '%법인운영%'
    </select>

    <select id="getIncpPayData" parameterType="map" resultType="map">
        /*getIncpPayData*/
        SELECT
            *,
            DEPO_AMT_MON_1 + DEPO_AMT_MON_2 + DEPO_AMT_MON_3 + DEPO_AMT_MON_4 + DEPO_AMT_MON_5 + DEPO_AMT_MON_6 +
            DEPO_AMT_MON_7 + DEPO_AMT_MON_8 + DEPO_AMT_MON_9 + DEPO_AMT_MON_10 + DEPO_AMT_MON_11 + DEPO_AMT_MON_12 AS DEPO_AMT_TOTAL
        FROM
        (
            SELECT
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-01') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_1,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-02') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_2,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-03') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_3,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-04') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_4,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-05') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_5,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-06') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_6,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-07') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_7,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-08') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_8,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-09') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_9,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-10') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_10,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-11') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_11,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_INCP_DE,'%Y-%m') = CONCAT(#{year},'-12') THEN DEPO_AMT END),0) AS DEPO_AMT_MON_12
            FROM CAM_MNG.DJ_PAY_DEPO A
            LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
            WHERE 1=1
              AND B.BUSN_CLASS IN ('D', 'V')
              AND DATE_FORMAT(A.PAY_INCP_DE,'%Y') = #{year}
              AND A.APPR_STAT='N' AND A.ORG_YN='N'
        ) AA
    </select>

    <select id="getCommPayData" parameterType="map" resultType="long">
        /*getCommPayData*/
        SELECT
            SUM(A.CB_BUDGET) AS CB_BUDGET
        FROM CAM_PJT_MNG.DJ_PJT_CB A
        LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
        WHERE B.BUSN_CLASS IN ('R', 'S') AND A.CB_CODE_NAME_1 = '간접비' AND A.CB_CODE_NAME_3 = '기관공통지원경비' AND LEFT(B.STR_DT, 4) = #{year}
    </select>

    <select id="getCommPayWaitData" parameterType="map" resultType="map">
        /*getCommPayWaitData*/
        SELECT
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-01') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_1,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-02') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_2,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-03') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_3,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-04') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_4,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-05') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_5,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-06') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_6,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-07') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_7,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-08') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_8,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-09') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_9,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-10') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_10,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-11') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_11,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = CONCAT(#{year},'-12') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_12
        FROM
            CAM_MNG.DJ_PAY_APP A
        LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
        LEFT JOIN CAM_MNG.DJ_EXNP C ON C.PAY_APP_SN = B.PAY_APP_SN
        WHERE 1=1
          AND A.DOC_STATUS = 100
          AND ((C.PAY_APP_TYPE IN (4, 5, 6) AND C.DOC_STATUS != 100) OR (C.PAY_APP_TYPE IN (1, 2, 3) AND C.RE_STAT != 'Y') OR C.PAY_APP_TYPE IS NULL)
          AND B.BUDGET_SN = '581826'
          AND DATE_FORMAT(A.PAY_EXNP_DE, '%Y') = #{year}
    </select>

    <select id="getCommPayApprData" parameterType="map" resultType="map">
        /*getCommPayApprData*/
        SELECT
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-01') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_1,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-02') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_2,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-03') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_3,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-04') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_4,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-05') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_5,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-06') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_6,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-07') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_7,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-08') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_8,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-09') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_9,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-10') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_10,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-11') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_11,
            IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXNP_DE,'%Y-%m') = CONCAT(#{year},'-12') THEN IF(A.PAY_APP_TYPE = 2,(B.TOT_COST * -1), B.TOT_COST) END),0) AS EXNP_TOTAL_PAY_12
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN CAM_MNG.DJ_EXNP_DET B ON A.EXNP_SN = B.EXNP_SN
        WHERE 1=1
          AND A.DOC_STATUS = 100
          AND A.RE_STAT = 'Y'
          AND B.BUDGET_SN = '581826'
          AND DATE_FORMAT(A.EXNP_DE, '%Y') = #{year}
    </select>

    <select id="getExnpPersonnelData" resultType="map" parameterType="map">
        /*getExnpPersonnelData*/
        SELECT
            *,
            EXNP_TOTAL_PAY_1 + EXNP_TOTAL_PAY_2 + EXNP_TOTAL_PAY_3 + EXNP_TOTAL_PAY_4 + EXNP_TOTAL_PAY_5 + EXNP_TOTAL_PAY_6 +
            EXNP_TOTAL_PAY_7 + EXNP_TOTAL_PAY_8 + EXNP_TOTAL_PAY_9 + EXNP_TOTAL_PAY_10 + EXNP_TOTAL_PAY_11 + EXNP_TOTAL_PAY_12 AS EXNP_TOTAL_PAY
        FROM
        (
            SELECT
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-01') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_1,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-02') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_2,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-03') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_3,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-04') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_4,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-05') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_5,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-06') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_6,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-07') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_7,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-08') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_8,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-09') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_9,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-10') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_10,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-11') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_11,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-12') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_12
            FROM CAM_MNG.DJ_PAY_APP A
            LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
            LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = A.PJT_CD
            WHERE 1=1
              AND LEFT(C.STR_DT, 4) = #{year}
              AND C.CORP_PJT_NM LIKE '%법인운영%'
              AND B.BUDGET_SN LIKE '1%'
              AND A.DOC_STATUS = 100
              AND DATE_FORMAT(A.PAY_EXNP_DE, '%Y') =  #{year}
        ) AA
    </select>

    <select id="getExnpOperationData" resultType="map" parameterType="map">
        /*getExnpOperationData*/
        SELECT
            *,
            EXNP_TOTAL_PAY_1 + EXNP_TOTAL_PAY_2 + EXNP_TOTAL_PAY_3 + EXNP_TOTAL_PAY_4 + EXNP_TOTAL_PAY_5 + EXNP_TOTAL_PAY_6 +
            EXNP_TOTAL_PAY_7 + EXNP_TOTAL_PAY_8 + EXNP_TOTAL_PAY_9 + EXNP_TOTAL_PAY_10 + EXNP_TOTAL_PAY_11 + EXNP_TOTAL_PAY_12 AS EXNP_TOTAL_PAY
        FROM
            (
                SELECT
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-01') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_1,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-02') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_2,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-03') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_3,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-04') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_4,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-05') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_5,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-06') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_6,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-07') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_7,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-08') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_8,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-09') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_9,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-10') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_10,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-11') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_11,
                    IFNULL(SUM(CASE WHEN DATE_FORMAT(A.PAY_EXNP_DE, '%Y-%m') = CONCAT(#{year}, '-12') THEN IF(A.PAY_APP_TYPE = 2, (B.TOT_COST * -1), B.TOT_COST) END), 0) AS EXNP_TOTAL_PAY_12
                FROM CAM_MNG.DJ_PAY_APP A
                LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = A.PJT_CD
                WHERE 1=1
                  AND LEFT(C.STR_DT, 4) = #{year}
                  AND C.CORP_PJT_NM LIKE '%법인운영%'
                  AND B.BUDGET_SN LIKE '5%'
                  AND A.DOC_STATUS = 100
                  AND DATE_FORMAT(A.PAY_EXNP_DE, '%Y') =  #{year}
        ) AA
    </select>

    <select id="getExnpPurcData" parameterType="map" resultType="map">
        /*getExnpPurcData*/
        SELECT
            *,
            EXNP_TOTAL_PAY_1 + EXNP_TOTAL_PAY_2 + EXNP_TOTAL_PAY_3 + EXNP_TOTAL_PAY_4 + EXNP_TOTAL_PAY_5 + EXNP_TOTAL_PAY_6 +
            EXNP_TOTAL_PAY_7 + EXNP_TOTAL_PAY_8 + EXNP_TOTAL_PAY_9 + EXNP_TOTAL_PAY_10 + EXNP_TOTAL_PAY_11 + EXNP_TOTAL_PAY_12 AS EXNP_TOTAL_PAY
        FROM
        (
            SELECT
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-01') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_1,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-02') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_2,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-03') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_3,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-04') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_4,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-05') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_5,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-06') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_6,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-07') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_7,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-08') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_8,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-09') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_9,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-10') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_10,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-11') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_11,
                IFNULL(SUM(CASE WHEN DATE_FORMAT(A.EXP_DE,'%Y-%m') = CONCAT(#{year},'-12') THEN B.REQ_AMT END),0) AS EXNP_TOTAL_PAY_12
            FROM CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN CAM_MNG.DJ_CLAIM_EXNP B ON A.CLAIM_SN = B.CLAIM_SN
            LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = B.PJT_CD
            WHERE 1=1
              AND LEFT(C.STR_DT, 4) = #{year} AND C.CORP_PJT_NM like '%법인운영%'
              AND DATE_FORMAT(A.EXP_DE,'%Y') = #{year}
              AND B.PAY_APP_SN IS NULL
        ) AA
    </select>

    <select id="getIncpExpList" parameterType="map" resultType="map">
        /*getIncpExpList*/
        SELECT * FROM
        (
            SELECT
                '1' AS ORDER_SN,
                'incp' AS BUDGET_TYPE,
                '민간사업' AS GUBUN,
                B.BUSN_NM AS GUBUN_DETAIL,
                'PAY_INCP_SN' AS F_KEY_TYPE,
                C.PAY_INCP_SN AS F_KEY_SN,
                B.PJT_NM,
                A.CRM_NM,
                A.DEPO_AMT,
                A.PAY_INCP_DE AS EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_MNG.DJ_PAY_DEPO A
            LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
            LEFT JOIN CAM_MNG.DJ_PAY_INCP C ON A.PAY_INCP_SN = C.PAY_INCP_SN
            LEFT JOIN CAM_MNG.DJ_PAY_INCP_DET D ON C.PAY_INCP_SN = D.PAY_INCP_SN
            LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = C.PAY_INCP_SN AND ES.F_KEY_TYPE = 'PAY_INCP_SN' AND ES.BUDGET_TYPE = 'incp'
            WHERE 1=1
                AND B.BUSN_CLASS IN ('D', 'V')
                AND LEFT(B.STR_DT, 4)  = #{year}
                AND DATE_FORMAT(A.PAY_INCP_DE, '%Y-%m') = #{baseYear}
                AND A.ORG_YN = 'N'
                AND C.RE_STAT = 'N'
                AND B.PARENT_PJT_SN IS NULL
                AND B.TEAM_STAT = 'N'
            UNION ALL
            SELECT
                '2' AS ORDER_SN,
                'incp' AS BUDGET_TYPE,
                '정부사업' AS GUBUN,
                '인건비' AS GUBUN_DETAIL,
                'PAY_APP_SN' AS F_KEY_TYPE,
                D.PAY_APP_SN AS F_KEY_SN,
                B.PJT_NM,
                CASE
                    WHEN (SELECT COUNT (CRM_NM) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = D.PAY_APP_SN) > 1
                        THEN CONCAT((SELECT CRM_NM FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = D.PAY_APP_SN LIMIT 1), ' 외 ', (SELECT COUNT (CRM_NM) - 1 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = D.PAY_APP_SN))
                    ELSE (SELECT CRM_NM FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = D.PAY_APP_SN LIMIT 1)
                END AS CRM_NM,
                CASE
                    WHEN '01' = #{month} THEN IFNULL(SUM(A.MON_PAY_1), 0) WHEN '02' = #{month} THEN IFNULL(SUM(A.MON_PAY_2), 0)
                    WHEN '03' = #{month} THEN IFNULL(SUM(A.MON_PAY_3), 0) WHEN '04' = #{month} THEN IFNULL(SUM(A.MON_PAY_4), 0)
                    WHEN '05' = #{month} THEN IFNULL(SUM(A.MON_PAY_5), 0) WHEN '06' = #{month} THEN IFNULL(SUM(A.MON_PAY_6), 0)
                    WHEN '07' = #{month} THEN IFNULL(SUM(A.MON_PAY_7), 0) WHEN '08' = #{month} THEN IFNULL(SUM(A.MON_PAY_8), 0)
                    WHEN '09' = #{month} THEN IFNULL(SUM(A.MON_PAY_9), 0) WHEN '10' = #{month} THEN IFNULL(SUM(A.MON_PAY_10), 0)
                    WHEN '11' = #{month} THEN IFNULL(SUM(A.MON_PAY_11), 0) WHEN '12' = #{month} THEN IFNULL(SUM(A.MON_PAY_12), 0)
                END AS DEPO_AMT,
                D.PAY_EXNP_DE AS EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_PJT_MNG.DJ_PART_PAY_MON A
            LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
            LEFT JOIN CAM_MNG.DJ_PAY_APP_BS_YM C ON A.PJT_SN = C.PJT_SN
            LEFT JOIN CAM_MNG.DJ_PAY_APP D ON C.PAY_APP_SN = D.PAY_APP_SN
            LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = D.PAY_APP_SN AND ES.F_KEY_TYPE = 'PAY_APP_SN' AND ES.BUDGET_TYPE = 'incp'
            WHERE 1=1
                AND B.BUSN_CLASS IN ('R', 'S')
                AND LEFT(B.STR_DT, 4) = #{year}
                AND A.BS_YEAR = #{year}
                AND DATE_FORMAT(D.PAY_EXNP_DE, '%Y-%m') = #{baseYear}
                AND B.PARENT_PJT_SN IS NULL
                AND B.TEAM_STAT = 'N'
            GROUP BY A.PJT_SN
            UNION ALL
            SELECT
                '3' AS ORDER_SN,
                'incp' AS BUDGET_TYPE,
                '정부사업' AS GUBUN,
                '간접비' AS GUBUN_DETAIL,
                'EXNP_SN' AS F_KEY_TYPE,
                A.EXNP_SN AS F_KEY_SN,
                A.PJT_NM,
                CASE
                    WHEN COUNT (C.CRM_NM) > 1 THEN CONCAT(C.CRM_NM, ' 외 ', COUNT (CRM_NM) - 1 )
                    ELSE CRM_NM
                END AS CRM_NM,
                SUM(C.TOT_COST) AS DEPO_AMT,
                A.EXNP_DE AS EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_MNG.DJ_EXNP A
            LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_CD = B.PJT_CD
            LEFT JOIN CAM_MNG.DJ_EXNP_DET C ON A.EXNP_SN = C.EXNP_SN
            LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = A.EXNP_SN AND ES.F_KEY_TYPE = 'EXNP_SN' AND ES.BUDGET_TYPE = 'incp'
            WHERE 1=1
                AND B.BUSN_CLASS IN ('R', 'S')
                AND LEFT(B.STR_DT, 4) = #{year}
                AND DATE_FORMAT(A.EXNP_DE, '%Y-%m') = #{baseYear}
                AND C.BUDGET_SN = '581826'
                AND B.PARENT_PJT_SN IS NULL
                AND B.TEAM_STAT = 'N'
            GROUP BY A.EXNP_SN
            UNION ALL
            SELECT
                '4' AS ORDER_SN,
                'incp' AS BUDGET_TYPE,
                A.GUBUN,
                A.GUBUN_DETAIL,
                'EXP_PAY_SN' AS F_KEY_TYPE,
                A.EXP_PAY_SN AS F_KEY_SN,
                A.PJT_NM,
                A.CRM_NM,
                A.EXP_PAY,
                A.EXP_DE AS EXP_DE,
                '' AS EXP_SN,
                A.STATUS AS STATUS
            FROM CAM_MNG.DJ_EXP_PAY_DATA A
            WHERE 1=1
              AND DATE_FORMAT(A.EXP_DE, '%Y-%m') = #{baseYear}
              AND A.BUDGET_TYPE = 'incp'
        ) AA
        ORDER BY AA.ORDER_SN, AA.EXP_DE, AA.F_KEY_SN
    </select>

    <select id="getExnpExpList" parameterType="map" resultType="map">
        /*getExnpExpList*/
        SELECT * FROM
        (
            SELECT
                '1' AS ORDER_SN,
                'exnp' AS BUDGET_TYPE,
                '구매' AS GUBUN,
                '직접비' AS GUBUN_DETAIL,
                'CLAIM_EXNP_SN' AS F_KEY_TYPE,
                B.CLAIM_EXNP_SN AS F_KEY_SN,
                C.CORP_PJT_NM,
                A.CRM_NM,
                B.REQ_AMT,
                A.EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN CAM_MNG.DJ_CLAIM_EXNP B ON A.CLAIM_SN = B.CLAIM_SN
            LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = B.PJT_CD
            LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = B.CLAIM_EXNP_SN AND ES.F_KEY_TYPE = 'CLAIM_EXNP_SN' AND ES.BUDGET_TYPE = 'exnp'
            WHERE 1=1
              AND LEFT(C.STR_DT, 4) = #{year} AND C.CORP_PJT_NM LIKE '%법인운영%'
              AND DATE_FORMAT(A.EXP_DE,'%Y-%m') = #{baseYear}
              AND B.PAY_APP_SN IS NULL
            UNION ALL
            SELECT
                '2' AS ORDER_SN,
                'exnp' AS BUDGET_TYPE,
                '지급신청' AS GUBUN,
                '일반운영비' AS GUBUN_DETAIL,
                'PAY_APP_SN' AS F_KEY_TYPE,
                A.PAY_APP_SN AS F_KEY_SN,
                C.CORP_PJT_NM,
                CASE
                    WHEN COUNT(B.CRM_NM) > 1 THEN CONCAT(B.CRM_NM, ' 외 ', COUNT(B.CRM_NM) - 1 )
                    ELSE CRM_NM
                END AS CRM_NM,
                SUM(B.TOT_COST) AS REQ_AMT,
                A.PAY_EXNP_DE AS EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_MNG.DJ_PAY_APP A
            LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
            LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = A.PJT_CD
            LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = A.PAY_APP_SN AND ES.F_KEY_TYPE = 'PAY_APP_SN' AND ES.BUDGET_TYPE = 'exnp'
            WHERE 1=1
              AND LEFT(C.STR_DT, 4) = #{year} AND C.CORP_PJT_NM LIKE '%법인운영%'
              AND B.BUDGET_SN LIKE '5%'
              AND A.DOC_STATUS = 100
              AND DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = #{baseYear}
            GROUP BY A.PAY_APP_SN
            UNION ALL
            SELECT
                '3' AS ORDER_SN,
                'exnp' AS BUDGET_TYPE,
                '지급신청' AS GUBUN,
                '인건비' AS GUBUN_DETAIL,
                'PAY_APP_SN' AS F_KEY_TYPE,
                A.PAY_APP_SN AS F_KEY_SN,
                C.CORP_PJT_NM,
                CASE
                    WHEN COUNT (B.CRM_NM) > 1 THEN CONCAT(B.CRM_NM, ' 외 ', COUNT (B.CRM_NM) - 1)
                    ELSE CRM_NM
                END AS CRM_NM,
                SUM(B.TOT_COST) AS REQ_AMT,
                A.PAY_EXNP_DE AS EXP_DE,
                ES.EXP_SN,
                IFNULL(ES.STATUS, 'A') AS STATUS
            FROM CAM_MNG.DJ_PAY_APP A
                LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
                LEFT JOIN CAM_PJT_MNG.DJ_CORP_PROJECT C ON C.CORP_PJT_CD = A.PJT_CD
                LEFT JOIN CAM_MNG.DJ_EXP_STATUS ES ON ES.F_KEY_SN = A.PAY_APP_SN AND ES.F_KEY_TYPE = 'PAY_APP_SN' AND ES.BUDGET_TYPE = 'exnp'
            WHERE 1=1
              AND LEFT(C.STR_DT, 4) = #{year} AND C.CORP_PJT_NM LIKE '%법인운영%'
              AND B.BUDGET_SN LIKE '1%'
              AND A.DOC_STATUS = 100
              AND DATE_FORMAT(A.PAY_EXNP_DE,'%Y-%m') = #{baseYear}
            GROUP BY A.PAY_APP_SN
            UNION ALL
            SELECT
                '4' AS ORDER_SN,
                'exnp' AS BUDGET_TYPE,
                A.GUBUN,
                A.GUBUN_DETAIL,
                'EXP_PAY_SN' AS F_KEY_TYPE,
                A.EXP_PAY_SN AS F_KEY_SN,
                A.PJT_NM,
                A.CRM_NM,
                A.EXP_PAY,
                A.EXP_DE,
                '' AS EXP_SN,
                A.STATUS AS STATUS
            FROM CAM_MNG.DJ_EXP_PAY_DATA A
            WHERE 1=1
              AND DATE_FORMAT(A.EXP_DE, '%Y-%m') = #{baseYear}
              AND A.BUDGET_TYPE = 'exnp'
        ) AA
        ORDER BY AA.ORDER_SN, AA.EXP_DE, AA.F_KEY_SN
    </select>

    <insert id="insExpStatus" parameterType="map">
        /*insExpStatus*/
        INSERT INTO CAM_MNG.DJ_EXP_STATUS
        (
            BUDGET_TYPE,
            GUBUN,
            F_KEY_TYPE,
            F_KEY_SN,
            STATUS,
            REG_EMP_SEQ,
            REG_DT
        )
        VALUES
        (
            #{budgetType},
            #{gubun},
            #{fKeyType},
            #{fKeySn},
            #{status},
            #{regEmpSeq},
            NOW()
        )
    </insert>

    <update id="updExpStatus" parameterType="map">
        /*updExpStatus*/
        UPDATE CAM_MNG.DJ_EXP_STATUS
        SET
            STATUS = #{status},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            EXP_SN = #{expSn}
    </update>

    <insert id="insExpectPayData" parameterType="map">
        /*insExpectPayData*/
        INSERT INTO CAM_MNG.DJ_EXP_PAY_DATA
        (
            BUDGET_TYPE,
            GUBUN,
            GUBUN_DETAIL,
            PJT_NM,
            CRM_NM,
            EXP_PAY,
            EXP_DE,
            STATUS,
            REG_DT
        )
        VALUES
        (
            #{budgetType},
            #{gubun},
            #{gubunDetail},
            #{pjtNm},
            #{crmNm},
            #{expPay},
            #{expDe},
            #{status},
            NOW()
        )
    </insert>

    <update id="updExpectPayData" parameterType="map">
        /*updExpectPayData*/
        UPDATE CAM_MNG.DJ_EXP_PAY_DATA
        SET
            PJT_NM = #{pjtNm},
            CRM_NM = #{crmNm},
            EXP_PAY = #{expPay},
            EXP_DE = #{expDe},
            STATUS = #{status}
        WHERE
            EXP_PAY_SN = #{expPaySn}
    </update>

    <update id="updExpectPayStatus" parameterType="map">
        /*updExpectPayStatus*/
        UPDATE CAM_MNG.DJ_EXP_PAY_DATA
        SET
            STATUS = #{status}
        WHERE
            EXP_PAY_SN = #{fKeySn}
    </update>

    <select id="getExpertPayData" parameterType="map" resultType="map">
        /*getExpertPayData*/
        SELECT
            EXP_PAY_SN,
            BUDGET_TYPE,
            GUBUN,
            GUBUN_DETAIL,
            PJT_NM,
            CRM_NM,
            EXP_PAY,
            EXP_DE,
            STATUS
        FROM
            CAM_MNG.DJ_EXP_PAY_DATA
        WHERE
            EXP_PAY_SN = #{expPaySn}
    </select>

    <select id="getPurcClaimList" parameterType="map" resultType="map">
        /* getPurcClaimList */
        SELECT
            ABC.*
        FROM (
            SELECT
                A.CLAIM_SN, A.PURC_SN, A.PURC_TYPE, A.CONT_YN, A.CLAIM_DE, A.EXP_DE, A.GOODS_DT, A.ORDER_YN, A.CLAIM_TITLE, A.CRM_NM, A.TOT_AMT, B.EMP_NAME_KR AS CLAIM_EMP_NAME, A.ORDER_DT,
                (SELECT SEI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = CLAIM_EMP_SEQ) AS CLAIM_DEPT_NAME, D.EMP_NAME_KR AS PURC_EMP_NAME,
                (SELECT SEI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = PURC_EMP_SEQ) AS PURC_DEPT_NAME, C.DELV_DE, DI.DOC_NO, A.STATUS,
                A.INSPECT_YN,
                A.INSPECT_STATUS,
                IFNULL((SELECT SUM(SPCI.PURC_ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_PURC_ITEM_AMT,
                IFNULL((SELECT SUM(SPCI.DIF_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_DIF_AMT,
                DI.DOC_NO AS CLAIM_DOC_NO, DI2.DOC_NO AS PURC_DOC_NO, A.PURC_REQ_PURPOSE, PCI.ITEM_NM, A.PAYMENT_METHOD
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
                LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.CLAIM_EMP_SEQ = B.EMP_SEQ
                LEFT JOIN CAM_HR.DJ_EMP_INFO D ON A.PURC_EMP_SEQ = D.EMP_SEQ
                LEFT JOIN CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_SN = C.PJT_SN
                LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
                LEFT JOIN CAM_MNG.DJ_MNG_PURC MP ON A.PURC_SN = MP.PURC_SN
                LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI2 ON DI2.DOC_ID = MP.DOC_ID
                LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
            WHERE 1=1

            UNION

            SELECT
                A.CLAIM_SN, A.PURC_SN, A.PURC_TYPE, A.CONT_YN, A.CLAIM_DE, A.EXP_DE, A.GOODS_DT, A.ORDER_YN, A.CLAIM_TITLE, A.CRM_NM, A.TOT_AMT, B.EMP_NAME_KR AS CLAIM_EMP_NAME, A.ORDER_DT,
                (SELECT SEI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = CLAIM_EMP_SEQ) AS CLAIM_DEPT_NAME, D.EMP_NAME_KR AS PURC_EMP_NAME,
                (SELECT SEI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = PURC_EMP_SEQ) AS PURC_DEPT_NAME, '' AS DELV_DE, DI.DOC_NO, A.STATUS,
                '' AS INSPECT_YN, '' AS INSPECT_STATUS,
                IFNULL((SELECT SUM(SPCI.PURC_ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_PURC_ITEM_AMT,
                IFNULL((SELECT SUM(SPCI.DIF_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_DIF_AMT,
                DI.DOC_NO AS CLAIM_DOC_NO, '' AS PURC_DOC_NO, A.PURC_REQ_PURPOSE, PCI.ITEM_NM, A.PAYMENT_METHOD
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
                LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.CLAIM_EMP_SEQ = B.EMP_SEQ
                LEFT JOIN CAM_HR.DJ_EMP_INFO D ON A.PURC_EMP_SEQ = D.EMP_SEQ
                LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
                LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
        ) ABC

        WHERE 1=1
        AND STATUS = '100'
        AND DATE_FORMAT(CLAIM_DE, '%Y') = #{year}

        GROUP BY CLAIM_SN
        ORDER BY CLAIM_SN DESC
    </select>

    <select id="getPurcClaimDetList" parameterType="map" resultType="map">
        /* getPurcClaimDetList */
        SELECT
            ABC.*
        FROM (
            SELECT
                PCI.CLAIM_ITEM_SN,
                PCI.CLAIM_SN,
                A.CLAIM_DE,
                A.STATUS,
                PCI.PURC_ITEM_TYPE,
                PCI.PRODUCT_A,
                PCI.ITEM_AMT
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
        ) ABC
        WHERE
            1=1
        AND STATUS = '100'
        AND DATE_FORMAT(CLAIM_DE, '%Y') = #{year}

        GROUP BY CLAIM_ITEM_SN
        ORDER BY CLAIM_SN DESC
    </select>

    <select id="getPurcCrmAchieveData" parameterType="map" resultType="map">
        /* getPurcCrmAchieveData */
        <![CDATA[
        SELECT
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 1 AND 1 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A1,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 2 AND 4 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A2,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 5 AND 9 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A3,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 10 AND 19 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A4,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 20 AND 49 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A5,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 50 AND 99 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A6,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) >= 100 AND TOT_AMT BETWEEN 0 AND 999999) S) AS A7,

            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 1 AND 1 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B1,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 2 AND 4 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B2,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 5 AND 9 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B3,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 10 AND 19 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B4,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 20 AND 49 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B5,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 50 AND 99 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B6,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) >= 100 AND TOT_AMT BETWEEN 1000000 AND 9999999) S) AS B7,

            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 1 AND 1 AND TOT_AMT >= 10000000) S) AS C1,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 2 AND 4 AND TOT_AMT >= 10000000) S) AS C2,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 5 AND 9 AND TOT_AMT >= 10000000) S) AS C3,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 10 AND 19 AND TOT_AMT >= 10000000) S) AS C4,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 20 AND 49 AND TOT_AMT >= 10000000) S) AS C5,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) BETWEEN 50 AND 99 AND TOT_AMT >= 10000000) S) AS C6,
            (SELECT COUNT(-1) FROM (SELECT * FROM CAM_MNG.DJ_PURC_CLAIM WHERE DATE_FORMAT(CLAIM_DE, '%Y') = #{year} GROUP BY CRM_SN HAVING COUNT(-1) >= 100 AND TOT_AMT >= 10000000) S) AS C7
        FROM DUAL
        ]]>
    </select>

    <select id="getPurcCrmLocAchieveData" parameterType="map" resultType="map">
        /* getPurcCrmLocAchieveData */
        <![CDATA[
        SELECT
            (SELECT COUNT(-1) FROM (SELECT A.*, SUBSTRING_INDEX(B.CRM_LOC, ' ', 1) FROM CAM_MNG.DJ_PURC_CLAIM A LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN WHERE DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year} AND SUBSTRING_INDEX(B.CRM_LOC, " ", 1) IN ('전북', '전라북도', '전북특별자치도') GROUP BY A.CRM_SN HAVING COUNT(A.CRM_SN) >= 50) S) AS A1,
            (SELECT COUNT(-1) FROM (SELECT A.*, SUBSTRING_INDEX(B.CRM_LOC, ' ', 1) FROM CAM_MNG.DJ_PURC_CLAIM A LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN WHERE DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year} AND SUBSTRING_INDEX(B.CRM_LOC, " ", 1) IN ('전북', '전라북도', '전북특별자치도') GROUP BY A.CRM_SN HAVING SUM(A.TOT_AMT) >= 10000000) S) AS A2,
            (SELECT COUNT(-1) FROM (SELECT A.*, SUBSTRING_INDEX(B.CRM_LOC, ' ', 1) FROM CAM_MNG.DJ_PURC_CLAIM A LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN WHERE DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year} AND SUBSTRING_INDEX(B.CRM_LOC, " ", 1) NOT IN (null, '', '전북', '전라북도', '전북특별자치도') GROUP BY A.CRM_SN HAVING COUNT(A.CRM_SN) >= 50) S) AS B1,
            (SELECT COUNT(-1) FROM (SELECT A.*, SUBSTRING_INDEX(B.CRM_LOC, ' ', 1) FROM CAM_MNG.DJ_PURC_CLAIM A LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN WHERE DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year} AND SUBSTRING_INDEX(B.CRM_LOC, " ", 1) IN (null, '', '전북', '전라북도', '전북특별자치도') GROUP BY A.CRM_SN HAVING SUM(A.TOT_AMT) >= 10000000) S) AS B2,
            '0' AS C1,
            '0' AS C2
        FROM DUAL
        ]]>
    </select>

    <select id="getPurcCrmCKAchieveData" parameterType="map" resultType="map">
        /* getPurcCrmCKAchieveData */
        <![CDATA[
        SELECT
            A.CRM_NM,
            IF(COUNT(A.CRM_SN) >= 50, 'O', 'X') AS A_CK,
            IF(SUM(A.TOT_AMT) >= 100000000, 'O', 'X') AS B_CK
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        WHERE
            DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year}
        GROUP BY A.CRM_SN
        HAVING COUNT(A.CRM_SN) >= 50 OR SUM(A.TOT_AMT) >= 100000000
        ORDER BY A.CRM_NM
        ]]>
    </select>

    <select id="getPurcCrmCKAchieveDataDet" parameterType="map" resultType="map">
        /* getPurcCrmCKAchieveDataDet */
        SELECT
            A.CRM_NM,
            SUM(A.TOT_AMT) AS TOT_AMT,
            B.CRM_EVENT,
            IFNULL(B.CRM_LOC, '') AS CRM_LOC
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        WHERE
            DATE_FORMAT(A.CLAIM_DE, '%Y') = #{year}
        GROUP BY A.CRM_SN
        <if test='"amt".equals(type)'>
            <![CDATA[
            HAVING SUM(A.TOT_AMT) >= 10000000
            ORDER BY SUM(A.TOT_AMT) DESC
            ]]>
        </if>
        <if test='"count".equals(type)'>
            <![CDATA[
            HAVING COUNT(A.CRM_SN) >= 50
            ORDER BY COUNT(A.CRM_SN) DESC
            ]]>
        </if>
        <if test='"new".equals(type)'>
            <![CDATA[
            HAVING COUNT(A.CRM_SN) = 1
            ORDER BY SUM(A.TOT_AMT) DESC
            ]]>
        </if>
        LIMIT 10
    </select>

    <select id="getPurcFundAchieveData" parameterType="map" resultType="map">
        /* getPurcFundAchieveData */
        SELECT
            PURC_TYPE,
            SUM(COUNT) AS COUNT,
            SUM(TOT_AMT) AS TOT_AMT,
            SUM(EXNP_AMT) AS EXNP_AMT,
            SUM(TOT_AMT-EXNP_AMT) AS BALANCE_AMT,
            PURC_ORDER
        FROM (
            SELECT
                A.PURC_TYPE,
                COUNT(-1) AS COUNT,
                A.TOT_AMT,
                IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
                CASE WHEN PURC_TYPE = 'R' THEN 0 WHEN PURC_TYPE = 'S' THEN 1 WHEN PURC_TYPE = 'D' THEN 2 WHEN PURC_TYPE = 'V' THEN 3 ELSE '5' END AS PURC_ORDER
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            WHERE
                A.STATUS = 100 AND YEAR(A.EXP_DE) = #{year} AND A.PURC_TYPE IS NOT NULL
            GROUP BY A.CLAIM_SN
        ) RE
        GROUP BY RE.PURC_TYPE
        ORDER BY RE.PURC_ORDER
    </select>

    <select id="getPurcFund2AchieveData" parameterType="map" resultType="map">
        /* getPurcFund2AchieveData */
        SELECT
            PURC_TYPE,
            EXP_DE,
            SUM(COUNT) AS COUNT,
            SUM(EXNP_AMT) AS EXNP_AMT,
            SUM(TOT_AMT) AS TOT_AMT
        FROM (
            SELECT
                A.PURC_TYPE,
                COUNT(-1) AS COUNT,
                A.TOT_AMT,
                IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
                CASE WHEN PURC_TYPE = 'R' THEN 0 WHEN PURC_TYPE = 'S' THEN 1 WHEN PURC_TYPE = 'D' THEN 2 WHEN PURC_TYPE = 'V' THEN 3 ELSE '5' END AS PURC_ORDER,
                A.EXP_DE
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            WHERE
                A.STATUS = 100 AND YEAR(A.EXP_DE) = #{year} AND A.PURC_TYPE IS NOT NULL
            GROUP BY A.CLAIM_SN
        ) RE
        GROUP BY RE.EXP_DE, RE.PURC_TYPE
        ORDER BY RE.EXP_DE DESC, RE.PURC_ORDER
    </select>

    <select id="getPurcAchieveMngList" parameterType="map" resultType="map">
        /* getPurcAchieveMngList */
        SELECT
            A.*,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS REQ_AMT,
            IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
            REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ)), '|', ' ') AS DEPT_NAME,
            DI.DOC_NO,
            DI2.DOC_NO AS DOC_NO2,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) AS SETTING,
            IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'C') AS RE_STAT,
            PCI.PURC_ITEM_TYPE,
            GROUP_CONCAT(
                DISTINCT
                CASE PCI.PURC_ITEM_TYPE
                    WHEN 'P' THEN '구매'
                    WHEN 'O' THEN '외주'
                    WHEN 'C' THEN '시설/공사'
                    ELSE '리스'
                END SEPARATOR ', '
            ) AS ITEM_TYPE_TEXT,
            HEI.EMP_NAME_KR,
            IFNULL(HEI2.EMP_NAME_KR, '') AS EMP_NAME_KR2
        FROM CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON DI.DOC_ID = A.DOC_ID
        LEFT JOIN CAM_MNG.DJ_MNG_PURC MP ON MP.PURC_SN = A.PURC_SN
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI2 ON DI2.DOC_ID = MP.DOC_ID
        LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
        LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON A.CLAIM_EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN CAM_HR.DJ_EMP_INFO HEI2 ON A.PURC_EMP_SEQ = HEI.EMP_SEQ
        WHERE
            A.STATUS = 100
        AND YEAR(A.EXP_DE) = #{year}
        GROUP BY CLAIM_SN
        ORDER BY CLAIM_SN DESC
    </select>
</mapper>