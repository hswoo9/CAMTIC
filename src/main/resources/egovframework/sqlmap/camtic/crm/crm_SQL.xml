<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="crm">

    <select id="getPopCrmList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            1=1
        <if test="crmName != null and crmName != ''">
            AND CRM_NM LIKE CONCAT('%', #{crmName}, '%')
        </if>
        ORDER BY MOD_DT DESC
    </select>

    <select id="getCrmData" parameterType="map" resultType="map">
        /*getCrmData*/
        SELECT
            A.*,
            B.BANK_NAME,
            B.ACCOUNTING_NUM,
            B.ACCOUNTING_HOLDER
        FROM
            CAM_CRM.DJ_CRM_INFO A
        LEFT JOIN CAM_CRM.DJ_CRM_ACCOUNTING B ON A.CRM_SN = B.CRM_SN
        WHERE
            A.CRM_SN = #{crmSn}
    </select>

    <select id="getCrmList" parameterType="map" resultType="map">
        /* getCrmList */
        SELECT
            CI.*
            , DATE_FORMAT(CI.MOD_DT, '%Y-%m-%d') AS MOD_DATE
            <if test='target != null and !"".equals(target)'>
                <if test='"mfOverView".equals(target)'>
                    , MS.CRM_MG_SCALE_SN
                    , DATE_FORMAT(MO.BASE_DATE, '%Y') AS BASE_DATE
                    , MO.CAPITAL
                    , MO.SALES
                    , MO.EMP_CNT
                </if>
            </if>
        FROM
            CAM_CRM.DJ_CRM_INFO CI
        LEFT JOIN
        (
            SELECT
                A.CRM_SN,
                GROUP_CONCAT(B.EMP_NAME_KR) AS EMP_NAME_KR,
                GROUP_CONCAT(A.CRM_REL_CONT) AS CRM_REL_CONT
            FROM
                CAM_CRM.DJ_CRM_HIST A
            JOIN
                CAM_HR.DJ_EMP_INFO B ON A.REG_EMP_SEQ = B.EMP_SEQ
            GROUP BY A.CRM_SN
        )A
        ON CI.CRM_SN = A.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON CI.CRM_SN = CM.CRM_SN
        <if test='target != null and !"".equals(target)'>
            <if test='"mfOverView".equals(target)'>
                LEFT JOIN
                    CAM_CRM.DJ_CRM_MG_SCALE MS
                ON CI.CRM_SN = MS.CRM_SN
                LEFT JOIN
                    CAM_CRM.DJ_CRM_MF_OVERVIEW MO
                ON REPLACE(CI.CRM_NO, '-', '') = MO.MF_NO
            </if>
        </if>
        WHERE
            1 = 1
        <if test='ctmType != null and !"".equals(ctmType)'>
            AND
                CI.CRM_CLASS = #{ctmType}
        </if>

        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword)'>
                <choose>
                    <when test='"CRM_HIST_REG_EMP".equals(searchKeyword)'>
                        AND
                            A.EMP_NAME_KR LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test='"CRM_HIST_REL_CONT".equals(searchKeyword)'>
                        AND
                            A.CRM_REL_CONT LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test='"CRM_MEM".equals(searchKeyword)'>
                        AND
                            CM.CRM_MEM_NM LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <otherwise>
                        AND
                            ${searchKeyword} LIKE CONCAT('%', #{searchValue}, '%')
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <if test='searchValue != null and !"".equals(searchValue)'>
                    AND (
                        CI.CRM_NM LIKE CONCAT('%', #{searchValue}, '%') OR
                        CI.CRM_NO LIKE CONCAT('%', #{searchValue}, '%') OR
                        CI.TEL_NUM LIKE CONCAT('%', #{searchValue}, '%') OR
                        CI.FAX LIKE CONCAT('%', #{searchValue}, '%') OR
                        CI.CRM_CEO LIKE CONCAT('%', #{searchValue}, '%') OR
                        A.EMP_NAME_KR LIKE CONCAT('%', #{searchValue}, '%') OR
                        A.CRM_REL_CONT LIKE CONCAT('%', #{searchValue}, '%')
                    )
                </if>
            </otherwise>
        </choose>

        GROUP BY CI.CRM_SN
        ORDER BY CI.MOD_DT DESC
    </select>

    <update id="setCrmDel" parameterType="map">
        /* setCrmDel */
        DELETE FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN IN (${crmSn})
    </update>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <update id="updCrmFile" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_FILE = #{crmFile}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updCrmLics" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_LICS = #{crmLics}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updBnCp" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            BN_CP = #{bnCp}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmFileInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT CRM_FILE FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <select id="getCrmLicsInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT CRM_LICS FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <select id="getBnCpInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT BN_CP FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <select id="crmReqCheck" parameterType="map" resultType="int">
        /*crmReqCheck*/
        SELECT COUNT(*) FROM CAM_CRM.DJ_CRM_INFO WHERE REPLACE(CRM_NO,'-','') = REPLACE(#{crmNo},'-','')
    </select>

    <update id="updCrmInfo" parameterType="map">
        /* updCrmInfo -- 부가정보 업데이트 */
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_ATT = #{crmAtt},
            CRM_ATT_NM = #{crmAttNm},
            CRM_CLASS = #{crmClass},
            CRM_CLASS_SUB = #{crmSubClass},
            CRM_CLASS_SUB_TEXT = #{crmSubClassText},
            MI_CL = #{miCl},
            BUY_CL = #{buyCl},
            CRM_PROD = #{crmProd},
            CRM_BN = #{crmBn},
            BN_DEPO = #{bnDepo},
            CRM_STAT = #{crmStat},
            ACNT_NM = #{acntNm},
            CRM_BN_NUM = #{crmBnNum},
            ACNT_EMAIL = #{acntEmail},
            SAVE_STAT = "Y",
            ETC = #{etc},
            HOMEPAGE = #{homepage},
            CRM_LOC = #{crmLoc}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updCrmMainData" parameterType="map">
        /* updCrmMainData */
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_CEO = #{crmCeo},
            CRM_NM = #{crmNm},
            CRM_NO = #{crmNo},
            EMAIL = #{email},
            TEL_NUM = #{telNum},
            PH_NUM = #{phNum},
            FAX = #{fax},
            CRM_EST_NO = #{crmEstNo},
            POST = #{post},
            ADDR = #{addr},
            CRM_OCC = #{crmOcc},
            CRM_EVENT = #{crmEvent},
            MON_CHECK = #{monCheck}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <insert id="insCrmInfo" parameterType="map">
        /* insCrmInfo */
        INSERT INTO CAM_CRM.DJ_CRM_INFO
            (
                CRM_CEO,
                CRM_NM,
                CRM_NO,
                EMAIL,
                TEL_NUM,
                PH_NUM,
                FAX,
                CRM_EST_NO,
                POST,
                ADDR,
                CRM_OCC,
                CRM_EVENT,
                MON_CHECK
            )
        VALUES
            (
                #{crmCeo},
                #{crmNm},
                #{crmNo},
                #{email},
                #{telNum},
                #{phNum},
                #{fax},
                #{crmEstNo},
                #{post},
                #{addr},
                #{crmOcc},
                #{crmEvent},
                #{monCheck}
            )

        <selectKey keyProperty="crmSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_CRM' AND TABLE_NAME = 'DJ_CRM_INFO'
        </selectKey>
    </insert>

    <insert id="insCrmMemInfo" parameterType="map">
        /* insCrmMemInfo */
        INSERT INTO CAM_CRM.DJ_CRM_MEM
            (
                CRM_SN,
                CRM_MEM_NM,
                CRM_MEM_DUTY,
                CRM_MEM_DEPT,
                CRM_MEM_PHN,
                CRM_MEM_EMAIL,
                CRM_MEM_ETC,
                CRM_MEM_CLASS,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{crmSn},
                #{crmMemNm},
                #{crmMemDuty},
                #{crmMemDept},
                #{crmMemPhn},
                #{crmMemEmail},
                #{crmMemEtc},
                #{crmMemClass},
                #{regEmpSeq}
            )

        <selectKey keyProperty="crmMemSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_CRM' AND TABLE_NAME = 'DJ_CRM_MEM'
        </selectKey>
    </insert>

    <update id="updCrmMemInfo" parameterType="map">
        /* updCrmMemInfo */
        UPDATE
            CAM_CRM.DJ_CRM_MEM
        SET
            CRM_MEM_NM = #{crmMemNm},
            CRM_MEM_DUTY = #{crmMemDuty},
            CRM_MEM_DEPT = #{crmMemDept},
            CRM_MEM_PHN = #{crmMemPhn},
            CRM_MEM_EMAIL = #{crmMemEmail},
            CRM_MEM_ETC = #{crmMemEtc},
            CRM_MEM_CLASS = #{crmMemClass},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </update>

    <select id="getCrmMemList" parameterType="map" resultType="map">
        /* getCrmMemList ==> 기업별 담당자 조회 */
        SELECT
            A.*,
            B.EMP_NAME_KR
        FROM
            CAM_CRM.DJ_CRM_MEM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.REG_EMP_SEQ = B.EMP_SEQ
        WHERE
            CRM_SN = #{crmSn}
        <if test='crmMemNm != null and !"".equals(crmMemNm)'>
        AND
            A.CRM_MEM_NM LIKE CONCAT('%', #{crmMemNm}, '%')
        </if>
    </select>

    <delete id="delCrmMemInfo" parameterType="map">
        DELETE FROM CAM_CRM.DJ_CRM_MEM
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </delete>

    <select id="getCrmMemInfo" parameterType="map" resultType="map">
        /* getCrmMemInfo ==> 담당자 정보 불러오기*/
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_MEM
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </select>

    <select id="getCrmHistList" parameterType="map" resultType="map">
        /*getCrmHistList ==> CRM 관리 > 고객 이력관리 데이터 조회 */
        SELECT
            A.*,
            DATE_FORMAT(A.CRM_REL_STR_DT, '%Y-%m-%d %H:%i') AS START_DATETIME,
            CI.*,
            CM.*,
            B.EMP_NAME_KR,
            C.DEPT_NAME
        FROM
            CAM_CRM.DJ_CRM_HIST A
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
        ON A.CRM_SN = CI.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON A.CRM_MEM_SN = CM.CRM_MEM_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.REG_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO C
        ON B.DEPT_SEQ = C.DEPT_SEQ
        WHERE
            1 = 1
        AND
            A.CRM_HIST_TYPE = '1'

            <choose>
                <when test='deptSeq != null and !"".equals(deptSeq) and teamSeq != null and !"".equals(teamSeq)'>
                    AND C.PARENT_DEPT_SEQ = #{deptSeq} AND C.DEPT_SEQ = #{teamSeq}
                </when>
                <when test='teamSeq != null and !"".equals(teamSeq)'>
                    AND B.DEPT_SEQ = #{teamSeq}
                </when>
                <when test='deptSeq != null and !"".equals(deptSeq)'>
                    AND (
                        B.DEPT_SEQ = #{deptSeq} OR
                        C.PARENT_DEPT_SEQ = #{deptSeq}
                    )
                </when>
            </choose>
            <if test='strDate != null and !"".equals(strDate)'>
            AND
                DATE_FORMAT(A.CRM_REL_STR_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{strDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
            <if test='crmNm != null and !"".equals(crmNm)'>
            AND
                CI.CRM_NM LIKE CONCAT('%', #{crmNm}, '%')
            </if>
            <if test='crmSn != null and !"".equals(crmSn)'>
            AND
                CI.CRM_SN = #{crmSn}
            </if>

        ORDER BY A.REG_DT DESC
    </select>

    <select id="getCrmHistDetailList" parameterType="map" resultType="map">
        /*getCrmHistDetailList ==> CRM 관리 > 고객 이력관리 데이터 조회 */
        SELECT * FROM (
        SELECT
            C.DEPT_NAME,
            EMP_NAME_KR,
            CRM_MEM_NM,
            DATE_FORMAT(A.CRM_REL_STR_DT, '%Y-%m-%d %H:%i') AS START_DATETIME,
            CRM_HIST_OBJ,
            CRM_REL_CONT
        FROM
            CAM_CRM.DJ_CRM_HIST A
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON A.CRM_SN = CI.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
            ON A.CRM_MEM_SN = CM.CRM_MEM_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
            ON A.REG_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO C
            ON B.DEPT_SEQ = C.DEPT_SEQ
        WHERE
            1 = 1
          AND
            A.CRM_HIST_TYPE = '1'
          AND
            CI.CRM_SN = #{crmSn}
        <if test='cuid != null and !"".equals(cuid)'>
        UNION ALL

        select
            DeptTeam AS DEPT_NAME
            ,(select EMP_NAME_KR from cam_hr.dj_emp_info where EMP_SEQ = RegID) AS EMP_NAME_KR
            ,IsCharge AS CRM_MEM_NM
            ,(case when STimeH = '' then InDate
            when STimeM = '' then concat(InDate,' ',STimeH,':00',' ~ ',ETimeH,':00')
            else concat(InDate,' ',STimeH,':',STimeM,' ~ ',ETimeH,':',ETimeM)
            end) AS START_DATETIME
            ,(case when InterProjectType1 is null then '출장'
            else 'CRM' end) AS CRM_HIST_OBJ
            ,Contents AS CRM_REL_CONT
        from
            cam_crm.crm_hist
        where
            CUID = #{cuid}
        </if>
        ) R
        ORDER BY START_DATETIME DESC
    </select>

    <select id="getCrmOldHistList" parameterType="map" resultType="map">
        /*getCrmOldHistList*/
        select
            DeptTeam AS DEPT_NAME
             ,(select EMP_NAME_KR from cam_hr.dj_emp_info where EMP_SEQ = RegID) AS EMP_NAME_KR
             ,IsCharge AS CRM_MEM_NM
             ,(case when STimeH = '' then InDate
                    when STimeM = '' then concat(InDate,' ',STimeH,':00',' ~ ',ETimeH,':00')
                    else concat(InDate,' ',STimeH,':',STimeM,' ~ ',ETimeH,':',ETimeM)
            end) AS START_DATETIME
             ,(case when InterProjectType1 is null then '출장'
                else 'CRM' end) AS CRM_HIST_OBJ
             ,Contents AS CRM_REL_CONT
        from cam_crm.crm_hist
        where
            CUID = #{cuid}
    </select>

    <select id="getCUIDOne" parameterType="map" resultType="map">
        /*getCUIDOne*/
        select
            CUID
        from
            CAM_CRM.DJ_CRM_INFO
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <select id="getCrmHistEngnList" parameterType="map" resultType="map">
        /*getCrmHistEngnList ==> CRM 관리 > 고객 이력관리 엔지니어링 데이터 조회 */
        SELECT
            A.*,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d %H:%i') AS START_DATETIME,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d %H:%i') AS END_DATETIME,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS START_DATE,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DATE,
            IFNULL(R.DOC_ID, '') AS DOC_ID,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_CRM.DJ_CRM_HIST A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_RESULT R ON A.CRM_REL_PJT_SN = R.PJT_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON R.DOC_ID = DI.DOC_ID
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B ON A.CRM_REL_PJT_SN = B.PJT_SN
        WHERE
        1 = 1
        <choose>
            <when test='crmHistType != null and !"".equals(crmHistType)'>
                AND A.CRM_HIST_TYPE = #{crmHistType}
            </when>
            <otherwise>
                AND A.CRM_HIST_TYPE = '1'
            </otherwise>
        </choose>
        <if test='crmSn != null and !"".equals(crmSn)'>
            AND
                A.CRM_SN = #{crmSn}
        </if>
        ORDER BY A.REG_DT DESC
    </select>

    <select id="getCrmOldHistEngnList" parameterType="map" resultType="map">
        SELECT
            JSubject AS CRM_REL_PJT_NM
            ,DATE_FORMAT(JWorkDate, '%Y-%m-%d') AS CRM_DATE
            ,JTotal AS CRM_REL_PJT_AMT
            ,UserName AS CRM_SHARE_EMP
        FROM
            CAM_CRM.CRM_HIST_ENGN
        WHERE
            CUID = #{cuid}
        ORDER BY JWorkDate DESC
    </select>

    <select id="getCrmOldHistRndList" parameterType="map" resultType="map">
        SELECT
            Kind AS CRM_HIST_OBJ
            ,Subject AS CRM_REL_PJT_NM
            ,DATE_FORMAT(PSDate, '%Y-%m-%d') AS START_DATE
            ,DATE_FORMAT(PEDate, '%Y-%m-%d') AS END_DATE
            ,TotalMoney AS CRM_REL_PJT_AMT
            ,UserName AS CRM_SHARE_EMP
        FROM
            CAM_CRM.CRM_HIST_RND
        WHERE
            CUID = #{cuid}
    </select>

    <select id="getCrmOldHistNonRndList" parameterType="map" resultType="map">
        SELECT
            Name AS CRM_REL_PJT_NM
            ,DATE_FORMAT(StartDate, '%Y-%m-%d') AS START_DATE
            ,DATE_FORMAT(EndDate, '%Y-%m-%d') AS END_DATE
            ,UserName AS EMP_NAME_KR
            ,Part AS DEPT_NAME
            ,Place AS POSITION_NAME
        FROM
            CAM_CRM.CRM_HIST_NON_RND
        WHERE
            CUID = #{cuid}
        GROUP BY Name
        ORDER BY StartDate DESC
    </select>

    <update id="setCrmHistDel" parameterType="map">
        /* setCrmHistDel */
        DELETE FROM CAM_CRM.DJ_CRM_HIST WHERE CRM_SN IN (${crmSn})
    </update>

    <insert id="insCrmHist" parameterType="map">
        /* insCrmHist */
        INSERT INTO CAM_CRM.DJ_CRM_HIST
            (
                CRM_SN,
                <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                CRM_MEM_SN,
                </if>
                CRM_REL_TP,
                CRM_REL_STR_DT,
                CRM_REL_END_DT,
                CRM_INTER_VAL,
                CRM_INTER_LG,
                CRM_INTER,
                <if test='crmRelPjtSn != null and !"".equals(crmRelPjtSn)'>
                CRM_REL_PJT_SN,
                </if>
                CRM_REL_PJT,
                CRM_REL_PJT_NM,
                CRM_REL_CONT,
                CRM_SHARE_EMP,
                SMS_CHK,
                MAIL_CHK,
                SEC_CHK,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{crmSn},
                <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                #{crmMemSn},
                </if>
                #{crmRelTp},
                #{crmRelStrDt},
                #{crmRelEndDt},
                "",
                #{crmInterLg},
                #{crmInter},
                <if test='crmRelPjtSn != null and !"".equals(crmRelPjtSn)'>
                #{crmRelPjtSn},
                </if>
                #{crmRelPjt},
                #{crmRelPjtNm},
                #{crmRelCont},
                #{crmShareEmp},
                #{smsChk},
                #{mailChk},
                #{secChk},
                #{empSeq}
            )
    </insert>

    <insert id="insCrmBustHist" parameterType="map">
        /* insCrmBustHist */
        INSERT INTO CAM_CRM.DJ_CRM_HIST
            (
                CRM_SN,
                CRM_REL_TP,
                CRM_HIST_OBJ,
                CRM_REL_STR_DT,
                CRM_REL_END_DT,
                CRM_INTER_VAL,
                CRM_INTER_LG,
                CRM_INTER,
                CRM_REL_PJT,
                CRM_REL_PJT_NM,
                CRM_REL_CONT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{CRM_SN},
                "업체방문",
                "출장",
                CONCAT(#{TRIP_DAY_FR}, " ", #{TRIP_TIME_FR}),
                CONCAT(#{TRIP_DAY_TO}, " ", #{TRIP_TIME_TO}),
                "",
                "",
                "",
                #{PJT_SN},
                #{BUSN_NAME},
                #{RESULT},
                #{REG_EMP_SEQ}
            )
    </insert>

    <insert id="insCrmEngnHist" parameterType="map">
        /* insEngnHist */
        INSERT INTO CAM_CRM.DJ_CRM_HIST
        (
            CRM_SN,
            CRM_HIST_TYPE,
            CRM_HIST_OBJ,
            CRM_REL_PJT_SN,
            CRM_REL_PJT_NM,
            CRM_REL_PJT_AMT,
            CRM_REL_STR_DT,
            CRM_REL_END_DT,
            CRM_SHARE_EMP,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{CRM_SN},
            2,
            #{BUSN_NM},
            #{PJT_SN},
            #{PJT_NM},
            #{PJT_AMT},
            #{STR_DT},
            #{END_EXP_DT},
            #{PM},
            #{emlSeq}
        )
    </insert>

    <update id="setMfOverviewDel" parameterType="map">
        /* setMfOverviewDel */
        DELETE FROM CAM_CRM.DJ_CRM_MF_OVERVIEW WHERE CRM_MF_SN IN (${mf})
    </update>

    <update id="setMfOverviewByCrmInfoUpd" parameterType="map">
        /* setMfOverviewByCrmInfoUpd */
        UPDATE
            CAM_CRM.DJ_CRM_INFO A,
            (SELECT * FROM CAM_CRM.DJ_CRM_MF_OVERVIEW WHERE BASE_DATE = (SELECT MAX(BASE_DATE) FROM CAM_CRM.DJ_CRM_MF_OVERVIEW))B
        SET
            A.CRM_NM = B.MF_NAME,
            A.CRM_CEO = B.CEO_NAME,
            A.EMAIL = B.EMAIL,
            A.TEL_NUM = B.TEL_NUM,
            A.PH_NUM = B.CEO_TEL_NUM,
            A.FAX = B.FAX_NUM,
            A.CRM_EST_NO = B.EST_DATE,
            A.ADDR = B.ADDR
        WHERE
            REPLACE(A.CRM_NO, '-', '') = B.MF_NO
    </update>

    <select id="getMfOverviewInfo" parameterType="map" resultType="map">
        /* getMfOverviewInfo */
        SELECT
            CRM_MF_SN,
            MF_AREA,
            IF(ACTIVE = 'Y', '정상', '') AS ACTIVE,
            MF_NAME,
            MF_NO,
            CEO_NAME,
            IF(CEO_GENDER = '1', '남', '여') AS CEO_GENDER,
            ADDR,
            DATE_FORMAT(EST_DATE, '%Y-%m-%d') AS EST_DATE,
            HISTORY,
            LOCATION,
            INDUSTRY,
            INDUSTRY2,
            MAIN_PRODUCT,
            IF(AM_PART = '1', 'O', 'X') AS AM_PART,
            REPLACE(REPLACE(REPLACE(AM_PART_TYPE, '1', '전기차'), '2', '내연차'), '3', '수소차') AS AM_PART_TYPE,
            TEL_NUM,
            FAX_NUM,
            HOME_PAGE,
            EMAIL,
            CAPITAL,
            SALES,
            SALES_AMT,
            SALES_RATIO_PROV,
            SALES_RATIO_OT_PROV,
            EMP_CNT,
            IF(EMP_FOREIGN = '1', 'O', 'X') AS EMP_FOREIGN,
            FOREIGN_CNT,
            IF(EXPORT_YN = '1', 'Y', 'N') AS EXPORT_YN,
            IF(LABORATORY_YN = '1', 'Y', 'N') AS LABORATORY_YN,
            IF(CARBON_YN = '1', 'Y', 'N') AS CARBON_YN,
            IF(RPR_YN = '1', 'Y', 'N') AS RPR_YN,
            IF(NEW_PRODUCT_YN = '1', 'Y', 'N') AS NEW_PRODUCT_YN,
            IF(FACILITY_INVEST_YN = '1', 'Y', 'N') AS FACILITY_INVEST_YN,
            HIGHLY_SAT_FIELD,
            NEED_FIELD,
            IF(AGREE_YN = '1', 'Y', 'N') AS AGREE_YN,
            IF(AGREE2_YN = '1', 'Y', 'N') AS AGREE2_YN,
            CEO_TEL_NUM,
            CHARGE_NAME,
            CHARGE_TEL_NUM
        FROM
            CAM_CRM.DJ_CRM_MF_OVERVIEW
        WHERE 1=1
        <if test='crmMfSn != null and !"".equals(crmMfSn)'>
        AND
            CRM_MF_SN = #{crmMfSn}
        </if>

        <if test='mfNo != null and !"".equals(mfNo)'>
        AND
            MF_NO = #{mfNo}
        </if>

        <if test='searchYear != null and !"".equals(searchYear)'>
        AND
            BASE_DATE LIKE CONCAT('%', #{searchYear}, '%')
        </if>
    </select>

    <select id="getMfOverviewStatInfo" parameterType="map" resultType="map">
        /* getMfOverviewStatInfo */
        SELECT
            ${searchContent}
        FROM
            CAM_CRM.DJ_CRM_MF_OVERVIEW
        WHERE
            MF_NO = #{mfNo}
        AND
            DATE_FORMAT(BASE_DATE, '%Y') = #{year}
    </select>

    <select id="getMfOverviewAreaStat" parameterType="map" resultType="map">
        /* getMfOverviewAreaStat */
        SELECT
            MF_AREA,
            COUNT(*) AS STAT
        FROM
            CAM_CRM.DJ_CRM_MF_OVERVIEW
        WHERE 1=1
        AND
            BASE_DATE LIKE CONCAT('%', #{searchYear}, '%')
        GROUP BY MF_AREA
        ORDER BY STAT DESC
    </select>

    <select id="getMfOverviewList" parameterType="map" resultType="map">
        /* getMfOverviewList */
        SELECT
            CRM_MF_SN,
            MF_AREA,
            IF(ACTIVE = 'Y', '정상', '') AS ACTIVE,
            MF_NAME,
            MF_NO,
            CEO_NAME,
            IF(CEO_GENDER = '1', '남', '여') AS CEO_GENDER,
            ADDR,
            DATE_FORMAT(EST_DATE, '%Y-%m-%d') AS EST_DATE,
            HISTORY,
            LOCATION,
            INDUSTRY,
            INDUSTRY2,
            MAIN_PRODUCT,
            IF(AM_PART = '1', 'O', 'X') AS AM_PART,
            REPLACE(REPLACE(REPLACE(AM_PART_TYPE, '1', '전기차'), '2', '내연차'), '3', '수소차') AS AM_PART_TYPE,
            TEL_NUM,
            FAX_NUM,
            HOME_PAGE,
            EMAIL,
            CAPITAL,
            SALES,
            SALES_AMT,
            SALES_RATIO_PROV,
            SALES_RATIO_OT_PROV,
            EMP_CNT,
            IF(EMP_FOREIGN = '1', 'O', 'X') AS EMP_FOREIGN,
            FOREIGN_CNT,
            IF(EXPORT_YN = '1', 'Y', 'N') AS EXPORT_YN,
            IF(LABORATORY_YN = '1', 'Y', 'N') AS LABORATORY_YN,
            IF(CARBON_YN = '1', 'Y', 'N') AS CARBON_YN,
            IF(RPR_YN = '1', 'Y', 'N') AS RPR_YN,
            IF(NEW_PRODUCT_YN = '1', 'Y', 'N') AS NEW_PRODUCT_YN,
            IF(FACILITY_INVEST_YN = '1', 'Y', 'N') AS FACILITY_INVEST_YN,
            HIGHLY_SAT_FIELD,
            NEED_FIELD,
            IF(AGREE_YN = '1', 'Y', 'N') AS AGREE_YN,
            IF(AGREE2_YN = '1', 'Y', 'N') AS AGREE2_YN,
            CEO_TEL_NUM,
            CHARGE_NAME,
            CHARGE_TEL_NUM
        FROM
            CAM_CRM.DJ_CRM_MF_OVERVIEW
        WHERE 1=1
        <if test='searchYear != null and !"".equals(searchYear)'>
            AND BASE_DATE LIKE CONCAT('%', #{searchYear}, '%')
        </if>
        <choose>
            <when test='!"".equals(searchKeyword)'>
                AND ${searchKeyword} LIKE CONCAT('%', #{searchValue}, '%')
            </when>
            <otherwise>
                AND (
                    MF_AREA LIKE CONCAT('%', #{searchValue}, '%') OR
                    MF_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                    MF_NO LIKE CONCAT('%', #{searchValue}, '%') OR
                    CEO_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                    MAIN_PRODUCT LIKE CONCAT('%', #{searchValue}, '%')
                )
            </otherwise>
        </choose>
        <if test='searchArea != null and !"".equals(searchArea)'>
            AND MF_AREA = #{searchArea}
        </if>
        LIMIT ${skip} , ${pageSize}
    </select>

    <select id="getMfOverviewListCnt" parameterType="map" resultType="int">
        /* getMfOverviewListCnt */
        SELECT
            COUNT(*)
        FROM
            CAM_CRM.DJ_CRM_MF_OVERVIEW
        WHERE 1=1

        <if test='searchYear != null and !"".equals(searchYear)'>
            AND BASE_DATE LIKE CONCAT('%', #{searchYear}, '%')
        </if>

        <choose>
            <when test='!"".equals(searchKeyword)'>
                AND ${searchKeyword} LIKE CONCAT('%', #{searchValue}, '%')
            </when>
            <otherwise>
                AND (
                MF_AREA LIKE CONCAT('%', #{searchValue}, '%') OR
                MF_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                MF_NO LIKE CONCAT('%', #{searchValue}, '%') OR
                CEO_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                MAIN_PRODUCT LIKE CONCAT('%', #{searchValue}, '%')
                )
            </otherwise>
        </choose>

        <if test='searchArea != null and !"".equals(searchArea)'>
            AND MF_AREA = #{searchArea}
        </if>
    </select>

    <insert id="setMfOverview" parameterType="map">
        /* setMfOverview */
        INSERT INTO CAM_CRM.DJ_CRM_MF_OVERVIEW
        (
            BASE_DATE,
            MF_AREA,
            MF_NAME,
            MF_NO,
            CEO_NAME,
            CEO_GENDER,
            ADDR,
            EST_DATE,
            HISTORY,
            LOCATION,
            INDUSTRY,
            INDUSTRY2,
            MAIN_PRODUCT,
            AM_PART,
            AM_PART_TYPE,
            TEL_NUM,
            FAX_NUM,
            HOME_PAGE,
            EMAIL,
            CAPITAL,
            SALES,
            SALES_AMT,
            SALES_RATIO_PROV,
            SALES_RATIO_OT_PROV,
            EMP_CNT,
            EMP_FOREIGN,
            FOREIGN_CNT,
            EXPORT_YN,
            LABORATORY_YN,
            CARBON_YN,
            CARBON_DETAIL,
            RPR_YN,
            NEW_PRODUCT_YN,
            FACILITY_INVEST_YN,
            HIGHLY_SAT_FIELD,
            NEED_FIELD,
            AGREE_YN,
            AGREE2_YN,
            CEO_TEL_NUM,
            CHARGE_NAME,
            CHARGE_TEL_NUM,
            ACTIVE,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{baseDate},
            #{mfArea},
            #{mfName},
            #{mfNo},
            #{ceoName},
            #{ceoGender},
            #{addr},
            #{estDate},
            #{history},
            #{location},
            #{industry},
            #{industry2},
            #{mainProduct},
            #{amPart},
            #{amPartType},
            #{telNum},
            #{faxNum},
            #{homePage},
            #{email},
            #{capital},
            #{sales},
            #{salesAmt},
            #{salesRatioProv},
            #{salesRatioOtProv},
            #{empCnt},
            #{empForeign},
            #{foreignCnt},
            #{exportYn},
            #{laboratoryYn},
            #{carbonYn},
            #{carbonDetail},
            #{rprYn},
            #{newProductYn},
            #{facilityInvestYn},
            #{highlySatField},
            #{needField},
            #{agreeYn},
            #{agree2Yn},
            #{ceoTelNum},
            #{chargeName},
            #{chargeTelNum},
            #{active},
            #{regEmpSeq}
        )
    </insert>

    <select id="groupCodeList" parameterType="map" resultType="map">
        /* groupCodeList */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        GROUP BY GRP_SN
    </select>

    <insert id="insGroupCode" parameterType="map">
        /* insGroupCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm}
            )
    </insert>

    <select id="codeList" resultType="map" parameterType="map">
        /* codeList */
        SELECT
            A.*
        FROM
            CAM_CRM.DJ_CRM_CD A
        WHERE
            LG_CD IS NOT NULL
        AND
            CRM_CD IS NULL
    </select>

    <select id="selLgCode" resultType="map" parameterType="map">
        /* selLgCode */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
        <choose>
            <when test='lgCdArr != null and !"".equals(lgCdArr)'>
                AND
                    LG_CD in(${lgCdArr})
            </when>
            <otherwise>
                AND
                    LG_CD is not null
            </otherwise>
        </choose>
          AND
            CRM_CD is null
    </select>

    <select id="selSmCode" resultType="map" parameterType="map">
        /* selSmCode */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
        AND
            LG_CD is not null
        <choose>
            <when test='lgCdArr != null and !"".equals(lgCdArr)'>
            AND
                LG_CD in(${lgCdArr})
            </when>
            <otherwise>
            AND
                LG_CD = #{lgCd}
            </otherwise>
        </choose>
        AND
            CRM_CD is not null
    </select>

    <insert id="insSetLgCode" parameterType="map">
        /* insSetLgCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCode},
                #{lgCodeNm}
            )
    </insert>

    <select id="smCodeList" parameterType="map" resultType="map">
        /* smCodeList */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD = #{lgCd}
          AND
            CRM_CD IS NOT NULL
    </select>

    <insert id="insCrmCode" parameterType="map">
        /* insCrmCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM,
            CRM_CD,
            CRM_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCd},
                #{lgCdNm},
                #{crmCd},
                #{crmCdNm}
            )
    </insert>

    <select id="getCrmIndustry" parameterType="map" resultType="map">
        /* getCrmIndustry */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INDUSTRY
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmIndustry" parameterType="map">
        /* setCrmIndustry */
        INSERT INTO CAM_CRM.DJ_CRM_INDUSTRY
        (
            CRM_SN,
            MAIN_CODE,
            SUB_CODE,
            COMPLEX_TYPE,
            COMPLEX_NAME,
            LABORATORY,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{mainCode},
            #{subCode},
            #{complexType},
            #{complexName},
            #{laboratory},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmIndustryUpd" parameterType="map">
        /* setCrmIndustryUpd */
        UPDATE
            CAM_CRM.DJ_CRM_INDUSTRY
        SET
            MAIN_CODE = #{mainCode},
            SUB_CODE = #{subCode},
            COMPLEX_TYPE = #{complexType},
            COMPLEX_NAME = #{complexName},
            LABORATORY = #{laboratory},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_INDUSTRY_SN = #{crmIndustrySn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmCert" parameterType="map" resultType="map">
        /* getCrmCert */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CERT
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmCert" parameterType="map">
        /* setCrmCert */
        INSERT INTO CAM_CRM.DJ_CRM_CERT
        (
            CRM_SN,
            VENTURE,
            VENTURE_TXT,
            INNOBIZ,
            INNOBIZ_TXT,
            MAINBIZ,
            MAINBIZ_TXT,
            OTHER_CERT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{venture},
            #{ventureTxt},
            #{innobiz},
            #{innobizTxt},
            #{mainbiz},
            #{mainbizTxt},
            #{otherCert},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmCertUpd" parameterType="map">
        /* setCrmCertUpd */
        UPDATE
            CAM_CRM.DJ_CRM_CERT
        SET
            VENTURE = #{venture},
            VENTURE_TXT = #{ventureTxt},
            INNOBIZ = #{innobiz},
            INNOBIZ_TXT = #{innobizTxt},
            MAINBIZ = #{mainbiz},
            MAINBIZ_TXT = #{mainbizTxt},
            OTHER_CERT = #{otherCert},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_CERT_SN = #{crmCertSn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmAccounting" parameterType="map" resultType="map">
        /* getCrmAccounting */
        SELECT
            CA.*,
            FI.FILE_NO AS FILE1_NO,
            CONCAT(FI.FILE_ORG_NAME, '.', FI.FILE_EXT) AS FILE1_NAME,
            CONCAT(FI.FILE_PATH, FI.FILE_UUID) AS FILE1_PATH,
            FI2.FILE_NO AS FILE2_NO,
            CONCAT(FI2.FILE_ORG_NAME, '.', FI2.FILE_EXT) AS FILE2_NAME,
            CONCAT(FI2.FILE_PATH, FI2.FILE_UUID) AS FILE2_PATH
        FROM
            CAM_CRM.DJ_CRM_ACCOUNTING CA
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI
        ON CA.FILE1 = FI.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI2
        ON CA.FILE2 = FI2.FILE_NO
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmAccounting" parameterType="map">
        /* setCrmAccounting */
        INSERT INTO CAM_CRM.DJ_CRM_ACCOUNTING
        (
            CRM_SN,
            BANK_NAME,
            ACCOUNTING_NUM,
            ACCOUNTING_HOLDER,
            ACCOUNTING_CHARGE_NM,
            ACCOUNTING_CHARGE_EMAIL,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{bankName},
            #{accountNum},
            #{accountHolder},
            #{accountChargeNm},
            #{accountChargeEmail},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmAccountingUpd" parameterType="map">
        /* setCrmAccountingUpd */
        UPDATE
            CAM_CRM.DJ_CRM_ACCOUNTING
        SET
            BANK_NAME = #{bankName},
            ACCOUNTING_NUM = #{accountNum},
            ACCOUNTING_HOLDER = #{accountHolder},
            ACCOUNTING_CHARGE_NM = #{accountChargeNm},
            ACCOUNTING_CHARGE_EMAIL = #{accountChargeEmail},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_ACCOUNTING_SN = #{crmAccountingSn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <update id="setCrmAccountingFileUpd" parameterType="map">
        /* setCrmAccountingFileUpd */
        UPDATE
            CAM_CRM.DJ_CRM_ACCOUNTING
        SET
            ${column} = #{value},
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            CRM_SN = #{crmSn}
        <if test='crmAccountingSn != null and !"".equals(crmAccountingSn)'>
        AND
            CRM_ACCOUNTING_SN = #{crmAccountingSn}
        </if>
    </update>

    <select id="getCrmMgScale" parameterType="map" resultType="map">
        /* getCrmMgScale */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_MG_SCALE
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmMgScale" parameterType="map">
        /* setCrmMgScale */
        INSERT INTO CAM_CRM.DJ_CRM_MG_SCALE
        (
            CRM_SN,
            MG_SCALE_YEAR,
            ASSET,
            LIABILITIES,
            LIABILITIES_RATIO,
            CAPITAL_TOTAL,
            CAPITAL,
            CAPITAL_RATIO,
            SALES,
            NET_INCOME,
            OPERAT_PROFIT,
            OPERAT_PROFIT_RATIO,
            EMP_CNT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{mgScaleYear},
            #{asset},
            #{liabilities},
            #{liabilitiesRatio},
            #{capitalTotal},
            #{capital},
            #{capitalRatio},
            #{sales},
            #{netIncome},
            #{operatProfit},
            #{operatProfitRatio},
            #{empCnt},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmMgScaleUpd" parameterType="map">
        /* setCrmMgScaleUpd */
        UPDATE
            CAM_CRM.DJ_CRM_MG_SCALE
        SET
            MG_SCALE_YEAR = #{mgScaleYear},
            ASSET = #{asset},
            LIABILITIES = #{liabilities},
            LIABILITIES_RATIO = #{liabilitiesRatio},
            CAPITAL_TOTAL = #{capitalTotal},
            CAPITAL = #{capital},
            CAPITAL_RATIO = #{capitalRatio},
            SALES = #{sales},
            NET_INCOME = #{netIncome},
            OPERAT_PROFIT = #{operatProfit},
            OPERAT_PROFIT_RATIO = #{operatProfitRatio},
            EMP_CNT = #{empCnt},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_MG_SCALE_SN = #{crmMgScaleSn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmInterests" parameterType="map" resultType="map">
        /* getCrmInterests */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INTERESTS
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmInterests" parameterType="map">
        /* setCrmInterests */
        INSERT INTO CAM_CRM.DJ_CRM_INTERESTS
        (
            CRM_SN,
            MAIN_DEPTH,
            SUB_DEPTH,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{mainDepth},
            #{subDepth},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmInterestsUpd" parameterType="map">
        /* setCrmInterestsUpd */
        UPDATE
            CAM_CRM.DJ_CRM_INTERESTS
        SET
            MAIN_DEPTH = #{mainDepth},
            SUB_DEPTH = #{subDepth},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_INTERESTS_SN = #{crmInterestsSn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <insert id="setMouAgrInfo" parameterType="map">
        /* setMouAgrInfo */
        INSERT INTO CAM_CRM.DJ_MOU_AGREEMENT_INFO
        (
            MOU_AGR_ST_DT,
            MOU_AGR_EN_DT,
            MOU_AGR_PURPOSE,
            MOU_AGR_CONTENT,
            MOU_AGR_MANAGER,
            REG_EMP_SEQ,
            REG_DATE
        )
        VALUES
        (
            #{mouStdt},
            #{mouEndt},
            #{mouPurpose},
            #{mouContent},
            #{mouManager},
            #{regEmpSeq},
            NOW()
        )

        <selectKey resultType="int" keyProperty="MOU_AGR_SN">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updMouAgrInfo" parameterType="map">
        /* updMouAgrInfo */
        UPDATE
            CAM_CRM.DJ_MOU_AGREEMENT_INFO
        SET
            MOU_AGR_ST_DT = #{mouStdt},
            MOU_AGR_EN_DT = #{mouEndt},
            MOU_AGR_PURPOSE = #{mouPurpose},
            MOU_AGR_CONTENT = #{mouContent},
            MOU_AGR_MANAGER = #{mouManager},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DATE = NOW()
        WHERE
            MOU_AGR_SN = #{MOU_AGR_SN}
    </update>

    <select id="getMouAgrList" parameterType="map" resultType="map">
        /* getMouAgrList */
        SELECT
            M.MOU_AGR_SN,
            M.MOU_AGR_ST_DT,
            M.MOU_AGR_EN_DT,
            M.MOU_AGR_PURPOSE,
            M.MOU_AGR_CONTENT,
            M.MOU_AGR_MANAGER,
            (SELECT COUNT(*) FROM CAM_COMMON.DJ_FILE_INFO F WHERE F.FR_KEY = M.MOU_AGR_SN) AS FILE_CNT
        FROM
            CAM_CRM.DJ_MOU_AGREEMENT_INFO M
        WHERE
            1=1
        AND
            M.ACTIVE = 'Y'
        ORDER BY M.MOU_AGR_ST_DT DESC
    </select>

    <update id="setMouAgrSnDel" parameterType="map">
        /* setMouAgrSnDel */
        UPDATE
            CAM_CRM.DJ_MOU_AGREEMENT_INFO
        SET
            ACTIVE = 'N',
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            MOU_AGR_SN IN (${mouAgrSn})
    </update>

    <select id="getMouCrmList" parameterType="map" resultType="map">
        /* getMouCrmList */
        SELECT
            MOU_CRM_SN,
            MOU_AGR_SN,
            CRM_SN,
            CRM_NM
        FROM
            CAM_CRM.DJ_MOU_AGR_CRM
        WHERE
            1=1
        AND
            ACTIVE = 'Y'
        AND
            MOU_AGR_SN = #{mouAgrSn}
        ORDER BY MOU_CRM_SN DESC
    </select>

    <insert id="setMouAgrCrmInfo" parameterType="map">
        /* setMouAgrCrmInfo */
        INSERT INTO CAM_CRM.DJ_MOU_AGR_CRM
        (
            MOU_AGR_SN,
            CRM_SN,
            CRM_NM,
            REG_EMP_SEQ,
            REG_DATE
        )
        VALUES
        (
            #{mouAgrSn},
            #{crmSn},
            #{crmNm},
            #{empSeq},
            NOW()
        )
    </insert>

    <update id="setMouCrmSnDel" parameterType="map">
        /* setMouCrmSnDel */
        UPDATE
            CAM_CRM.DJ_MOU_AGR_CRM
        SET
            ACTIVE = 'N',
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            MOU_AGR_SN = #{mouAgrSn}
        <if test='mouCrmSn != null and !"".equals(mouCrmSn)'>
        AND
            MOU_CRM_SN IN (${mouCrmSn})
        </if>
    </update>

    <select id="getMouArgInfo" parameterType="map" resultType="map">
        /* getMouArgInfo */
        SELECT
            MOU_AGR_SN,
            MOU_AGR_ST_DT,
            MOU_AGR_EN_DT,
            MOU_AGR_PURPOSE,
            MOU_AGR_CONTENT,
            MOU_AGR_MANAGER
        FROM
            CAM_CRM.DJ_MOU_AGREEMENT_INFO
        WHERE
            1=1
          AND
            MOU_AGR_SN = #{mouArgSn}
    </select>

    <select id="getMouAgrFileInfo" parameterType="map" resultType="map">
        /* getMouAgrFileInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FR_KEY = #{mouArgSn}
        AND file_cd = 'crm'
    </select>

    <select id="getCustomerCondition" parameterType="map" resultType="map">
        /*getCustomerCondition*/
        SELECT AA.*, COUNT(CRM_NATION) AS CNT FROM
            (
                SELECT A.*, SUBSTRING_INDEX(A.CRM_LOC, " ", 1) AS CRM_NATION FROM CAM_CRM.DJ_CRM_INFO A
            ) AA
        GROUP BY CRM_NATION
    </select>

    <select id="getCustomerIndustryCondition" parameterType="map" resultType="map">
        /*getCustomerIndustryCondition*/
        SELECT
            AA.MAIN_CODE, COUNT(AA.MAIN_CODE) AS CNT FROM
            (
                SELECT A.*, IFNULL(B.MAIN_CODE, "") AS MAIN_CODE FROM CAM_CRM.DJ_CRM_INFO A
                LEFT JOIN CAM_CRM.DJ_CRM_INDUSTRY B ON A.CRM_SN = B.CRM_SN
            ) AA
        GROUP BY AA.MAIN_CODE
    </select>

    <select id="getDeptRelationCnt" parameterType="map" resultType="Integer">
        /*getDeptRelationCnt*/
        SELECT
            IFNULL(COUNT(DEPT_SEQ), 0) AS CNT
        FROM (
             SELECT
                 IF((SELECT DEPT_LEVEL FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.EMP_SEQ)) = 1, (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.EMP_SEQ), (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.EMP_SEQ))) AS DEPT_SEQ,
                 DATE_FORMAT(A.REG_DT, '%Y%m%d') AS REG_DT,
                 DATE_FORMAT(A.REG_DT, '%m') AS MON
             FROM
                 CAM_CRM.DJ_CRM_HIST A
                     LEFT JOIN
                 CAM_HR.DJ_EMP_INFO B
                 ON A.REG_EMP_SEQ = B.EMP_SEQ
             UNION ALL

             select
                 IF((SELECT DEPT_LEVEL FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = CUID)) = 1, (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = CUID), (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = CUID))) AS DEPT_SEQ,
                 DATE_FORMAT(RegDate, '%Y%m%d') AS REG_DT,
                 DATE_FORMAT(RegDate, '%m') AS MON
             from
                 cam_crm.crm_hist
             ) R
        WHERE REG_DT like concat(#{year}, '%') AND MON = #{mon} AND DEPT_SEQ = #{deptSeq}
        GROUP BY DEPT_SEQ
    </select>
</mapper>