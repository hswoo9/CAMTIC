<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="crm">

    <select id="getPopCrmList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
    </select>

    <select id="getCrmData" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <select id="getCrmList" parameterType="map" resultType="map">
        /* getCrmList */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            1 = 1
        <if test="searchKeyword != null and searchKeyword != ''">
            AND
                ${searchKeyword} LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="ctmType != null and ctmType != ''">

        </if>
        <if test="ctmGrade != null and ctmGrade != ''">

        </if>
        <if test="ctmCare != null and ctmCare != ''">

        </if>
    </select>

    <update id="setCrmDel" parameterType="map">
        /* setCrmDel */
        DELETE FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN IN (${crmSn})
    </update>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <update id="updCrmFile" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_FILE = #{crmFile}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updCrmLics" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_LICS = #{crmLics}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updBnCp" parameterType="map">
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            BN_CP = #{bnCp}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmFileInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT CRM_FILE FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <select id="getCrmLicsInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT CRM_LICS FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <select id="getBnCpInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT BN_CP FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = #{crmSn})
    </select>

    <update id="updCrmInfo" parameterType="map">
        /* updCrmInfo -- 부가정보 업데이트 */
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_ATT = #{crmAtt},
            CRM_ATT_NM = #{crmAttNm},
            CRM_CLASS = #{crmClass},
            CRM_CLASS_SUB = #{crmSubClass},
            CRM_CLASS_SUB_TEXT = #{crmSubClassText},
            MI_CL = #{miCl},
            BUY_CL = #{buyCl},
            CRM_PROD = #{crmProd},
            CRM_BN = #{crmBn},
            BN_DEPO = #{bnDepo},
            CRM_STAT = #{crmStat},
            ACNT_NM = #{acntNm},
            CRM_BN_NUM = #{crmBnNum},
            ACNT_EMAIL = #{acntEmail},
            SAVE_STAT = "Y",
            ETC = #{etc},
            HOMEPAGE = #{homepage}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <update id="updCrmMainData" parameterType="map">
        /* updCrmMainData */
        UPDATE
            CAM_CRM.DJ_CRM_INFO
        SET
            CRM_CEO = #{crmCeo},
            CRM_NM = #{crmNm},
            CRM_NO = #{crmNo},
            EMAIL = #{email},
            TEL_NUM = #{telNum},
            PH_NUM = #{phNum},
            FAX = #{fax},
            CRM_EST_NO = #{crmEstNo},
            POST = #{post},
            ADDR = #{addr},
            CRM_OCC = #{crmOcc},
            CRM_EVENT = #{crmEvent}
        WHERE
            CRM_SN = #{crmSn}
    </update>

    <insert id="insCrmInfo" parameterType="map">
        /* insCrmInfo */
        INSERT INTO CAM_CRM.DJ_CRM_INFO
            (
                CRM_CEO,
                CRM_NM,
                CRM_NO,
                EMAIL,
                TEL_NUM,
                PH_NUM,
                FAX,
                CRM_EST_NO,
                POST,
                ADDR,
                CRM_OCC,
                CRM_EVENT
            )
        VALUES
            (
                #{crmCeo},
                #{crmNm},
                #{crmNo},
                #{email},
                #{telNum},
                #{phNum},
                #{fax},
                #{crmEstNo},
                #{post},
                #{addr},
                #{crmOcc},
                #{crmEvent}
            )

        <selectKey keyProperty="crmSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_CRM' AND TABLE_NAME = 'DJ_CRM_INFO'
        </selectKey>
    </insert>

    <insert id="insCrmMemInfo" parameterType="map">
        /* insCrmMemInfo */
        INSERT INTO CAM_CRM.DJ_CRM_MEM
            (
                CRM_SN,
                CRM_MEM_NM,
                CRM_MEM_DUTY,
                CRM_MEM_DEPT,
                CRM_MEM_PHN,
                CRM_MEM_EMAIL,
                CRM_MEM_ETC,
                CRM_MEM_CLASS,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{crmSn},
                #{crmMemNm},
                #{crmMemDuty},
                #{crmMemDept},
                #{crmMemPhn},
                #{crmMemEmail},
                #{crmMemEtc},
                #{crmMemClass},
                #{regEmpSeq}
            )

        <selectKey keyProperty="crmMemSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_CRM' AND TABLE_NAME = 'DJ_CRM_MEM'
        </selectKey>
    </insert>

    <update id="updCrmMemInfo" parameterType="map">
        /* updCrmMemInfo */
        UPDATE
            CAM_CRM.DJ_CRM_MEM
        SET
            CRM_MEM_NM = #{crmMemNm},
            CRM_MEM_DUTY = #{crmMemDuty},
            CRM_MEM_DEPT = #{crmMemDept},
            CRM_MEM_PHN = #{crmMemPhn},
            CRM_MEM_EMAIL = #{crmMemEmail},
            CRM_MEM_ETC = #{crmMemEtc},
            CRM_MEM_CLASS = #{crmMemClass},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </update>

    <select id="getCrmMemList" parameterType="map" resultType="map">
        /* getCrmMemList ==> 기업별 담당자 조회 */
        SELECT
            A.*,
            B.EMP_NAME_KR
        FROM
            CAM_CRM.DJ_CRM_MEM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.REG_EMP_SEQ = B.EMP_SEQ
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <delete id="delCrmMemInfo" parameterType="map">
        DELETE FROM CAM_CRM.DJ_CRM_MEM
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </delete>

    <select id="getCrmMemInfo" parameterType="map" resultType="map">
        /* getCrmMemInfo ==> 담당자 정보 불러오기*/
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_MEM
        WHERE
            CRM_MEM_SN = #{crmMemSn}
    </select>

    <select id="getCrmHistList" parameterType="map" resultType="map">
        /*getCrmHistList ==> CRM 관리 > 고객 이력관리 데이터 조회 */
        SELECT
            A.*,
            DATE_FORMAT(A.CRM_REL_STR_DT, '%Y-%m-%d %H:%i') AS START_DATETIME,
            CI.*,
            CM.*,
            B.EMP_NAME_KR,
            C.DEPT_NAME
        FROM
            CAM_CRM.DJ_CRM_HIST A
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
        ON A.CRM_SN = CI.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON A.CRM_MEM_SN = CM.CRM_MEM_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.REG_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO C
        ON B.DEPT_SEQ = C.DEPT_SEQ
        WHERE
            1 = 1
            <choose>
                <when test='deptSeq != null and !"".equals(deptSeq) and teamSeq != null and !"".equals(teamSeq)'>
                    AND C.PARENT_DEPT_SEQ = #{deptSeq} AND C.DEPT_SEQ = #{teamSeq}
                </when>
                <when test='teamSeq != null and !"".equals(teamSeq)'>
                    AND B.DEPT_SEQ = #{teamSeq}
                </when>
                <when test='deptSeq != null and !"".equals(deptSeq)'>
                    AND (
                        B.DEPT_SEQ = #{deptSeq} OR
                        C.PARENT_DEPT_SEQ = #{deptSeq}
                    )
                </when>
            </choose>
            <if test='strDate != null and !"".equals(strDate)'>
            AND
                DATE_FORMAT(A.CRM_REL_STR_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{strDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
            <if test='crmNm != null and !"".equals(crmNm)'>
            AND
                CI.CRM_NM LIKE CONCAT('%', #{crmNm}, '%')
            </if>
        ORDER BY A.REG_DT DESC
    </select>

    <update id="setCrmHistDel" parameterType="map">
        /* setCrmHistDel */
        DELETE FROM CAM_CRM.DJ_CRM_HIST WHERE CRM_SN IN (${crmSn})
    </update>

    <select id="getRegCrmHist" parameterType="map" resultType="map">
        /* getRegCrmHist */
        SELECT
            CH.CRM_HIST_SN,
            CI.CRM_SN,
            CI.CRM_NM,
            CI.CRM_CEO,
            CI.CRM_NO,
            CI.CRM_EST_NO,
            CI.POST,
            CI.ADDR,
            CI.TEL_NUM,
            CI.FAX,
            CH.CRM_REL_TP,
            DATE_FORMAT(CH.CRM_REL_STR_DT, '%Y-%m-%d %H:%s') AS CRM_REL_STR_DT,
            DATE_FORMAT(CH.CRM_REL_END_DT, '%Y-%m-%d %H:%s') AS CRM_REL_END_DT,
            CM.CRM_MEM_NM,
            CM.CRM_MEM_SN,
            CM.CRM_MEM_PHN,
            CH.CRM_REL_PJT,
            CH.CRM_REL_PJT_NM,
            CH.CRM_REL_CONT,
            SE.EMP_NAME_KR,
            SE.EMP_SEQ,
            CH.SMS_CHK,
            CH.MAIL_CHK,
            CH.SEC_CHK
        FROM
            CAM_CRM.DJ_CRM_HIST CH
        JOIN
            CAM_CRM.DJ_CRM_INFO CI
        ON CH.CRM_SN = CI.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON CH.CRM_MEM_SN = CM.CRM_MEM_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO SE
        ON CH.CRM_SHARE_EMP = SE.EMP_SEQ
        WHERE
            CH.CRM_HIST_SN = #{crmHistSn}
    </select>

    <insert id="insCrmHist" parameterType="map">
        /* insCrmHist */
        INSERT INTO CAM_CRM.DJ_CRM_HIST
            (
                CRM_SN,
                <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                CRM_MEM_SN,
                </if>
                CRM_REL_TP,
                CRM_REL_STR_DT,
                CRM_REL_END_DT,
                CRM_INTER_VAL,
                CRM_INTER_LG,
                CRM_INTER,
                CRM_REL_PJT,
                CRM_REL_PJT_NM,
                CRM_REL_CONT,
                CRM_SHARE_EMP,
                SMS_CHK,
                MAIL_CHK,
                SEC_CHK,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{crmSn},
                <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                #{crmMemSn},
                </if>
                #{crmRelTp},
                #{crmRelStrDt},
                #{crmRelEndDt},
                "",
                "",
                "",
                #{crmRelPjt},
                #{crmRelPjtNm},
                #{crmRelCont},
                #{crmShareEmp},
                #{smsChk},
                #{mailChk},
                #{secChk},
                #{empSeq}
            )
    </insert>

    <insert id="insCrmBustHist" parameterType="map">
        /* insCrmBustHist */
        INSERT INTO CAM_CRM.DJ_CRM_HIST
            (
                CRM_SN,
                CRM_REL_TP,
                CRM_HIST_OBJ,
                CRM_REL_STR_DT,
                CRM_REL_END_DT,
                CRM_INTER_VAL,
                CRM_INTER_LG,
                CRM_INTER,
                CRM_REL_PJT,
                CRM_REL_PJT_NM,
                CRM_REL_CONT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{CRM_SN},
                "업체방문",
                "출장",
                CONCAT(#{TRIP_DAY_FR}, " ", #{TRIP_TIME_FR}),
                CONCAT(#{TRIP_DAY_TO}, " ", #{TRIP_TIME_TO}),
                "",
                "",
                "",
                #{PJT_SN},
                NULL,
                #{RESULT},
                #{REG_EMP_SEQ}
            )
    </insert>

    <select id="groupCodeList" parameterType="map" resultType="map">
        /* groupCodeList */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        GROUP BY GRP_SN
    </select>

    <insert id="insGroupCode" parameterType="map">
        /* insGroupCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm}
            )
    </insert>

    <select id="codeList" resultType="map" parameterType="map">
        /* codeList */
        SELECT
            A.*
        FROM
            CAM_CRM.DJ_CRM_CD A
        WHERE
            LG_CD IS NOT NULL
        AND
            CRM_CD IS NULL
    </select>

    <select id="selLgCode" resultType="map" parameterType="map">
        /* selLgCode */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            CRM_CD is null
    </select>

    <select id="selSmCode" resultType="map" parameterType="map">
        /* selSmCode */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            LG_CD = #{lgCd}
          AND
            CRM_CD is not null
    </select>

    <insert id="insSetLgCode" parameterType="map">
        /* insSetLgCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCode},
                #{lgCodeNm}
            )
    </insert>

    <select id="smCodeList" parameterType="map" resultType="map">
        /* smCodeList */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD = #{lgCd}
          AND
            CRM_CD IS NOT NULL
    </select>

    <insert id="insCrmCode" parameterType="map">
        /* insCrmCode */
        INSERT INTO CAM_CRM.DJ_CRM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM,
            CRM_CD,
            CRM_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCd},
                #{lgCdNm},
                #{crmCd},
                #{crmCdNm}
            )
    </insert>

    <select id="getCrmIndustry" parameterType="map" resultType="map">
        /* getCrmIndustry */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INDUSTRY
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmIndustry" parameterType="map">
        /* setCrmIndustry */
        INSERT INTO CAM_CRM.DJ_CRM_INDUSTRY
        (
            CRM_SN,
            MAIN_CODE,
            SUB_CODE,
            COMPLEX_TYPE,
            COMPLEX_NAME,
            LABORATORY,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{mainCode},
            #{subCode},
            #{complexType},
            #{complexName},
            #{laboratory},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmIndustryUpd" parameterType="map">
        /* setCrmIndustryUpd */
        UPDATE
            CAM_CRM.DJ_CRM_INDUSTRY
        SET
            MAIN_CODE = #{mainCode},
            SUB_CODE = #{subCode},
            COMPLEX_TYPE = #{complexType},
            COMPLEX_NAME = #{complexName},
            LABORATORY = #{laboratory},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_INDUSTRY_SN = #{crmIndustrySn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <select id="getCrmCert" parameterType="map" resultType="map">
        /* getCrmCert */
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_CERT
        WHERE
            CRM_SN = #{crmSn}
    </select>

    <insert id="setCrmCert" parameterType="map">
        /* setCrmCert */
        INSERT INTO CAM_CRM.DJ_CRM_CERT
        (
            CRM_SN,
            VENTURE,
            VENTURE_TXT,
            INNOBIZ,
            INNOBIZ_TXT,
            MAINBIZ,
            MAINBIZ_TXT,
            OTHER_CERT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{venture},
            #{ventureTxt},
            #{innobiz},
            #{innobizTxt},
            #{mainbiz},
            #{mainbizTxt},
            #{otherCert},
            #{regEmpSeq}
        )
    </insert>

    <update id="setCrmCertUpd" parameterType="map">
        /* setCrmCertUpd */
        UPDATE
            CAM_CRM.DJ_CRM_CERT
        SET
            VENTURE = #{venture},
            VENTURE_TXT = #{ventureTxt},
            INNOBIZ = #{innobiz},
            INNOBIZ_TXT = #{innobizTxt},
            MAINBIZ = #{mainbiz},
            MAINBIZ_TXT = #{mainbizTxt},
            OTHER_CERT = #{otherCert},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            CRM_CERT_SN = #{crmCertSn}
        AND
            CRM_SN = #{crmSn}
    </update>
</mapper>