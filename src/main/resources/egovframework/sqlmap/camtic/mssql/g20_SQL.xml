<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="g20">

    <select id="getProjectList" resultType="java.util.Map" parameterType="java.util.Map">
        <![CDATA[
        SELECT
            A.PJT_CD    					AS pjtSeq
             , ISNULL(PJT_NM, A.PJT_NMK) 	AS pjtName
             , A.PROG_FG    					AS progFg
             , CASE WHEN A.FR_DT IN ('00000000', '99991231') THEN '' ELSE CONVERT(NVARCHAR(10), CONVERT(DATETIME, A.FR_DT), 120) END AS pjtFromDate
             , CASE WHEN A.TO_DT IN ('00000000', '99991231') THEN '' ELSE CONVERT(NVARCHAR(10), CONVERT(DATETIME, A.TO_DT), 120) END AS pjtToDate
             , ISNULL(ISNULL(B.DEPT_NM, B.DEPT_NMK), 0) AS pjtDeptName
             , ISNULL(ISNULL(C.KOR_NM, C.KOR_NMK), 0)	AS pjtName
             , ISNULL(T.ATTR_NM, 0)			AS atTrName
             , ISNULL(T.BA_NB, 0)   		AS bankNumber
             , ISNULL(T.TR_CD, 0)			AS trSeq
             , (SELECT COUNT(1) FROM DZICUBE.dbo.IT_BUSINESSLINK I WHERE I.CO_CD = '1212' AND A.PJT_CD = I.PJT_CD) AS itBusinessLink,
            A.FR_DT
        FROM DZICUBE.dbo.SPJT A WITH(NOLOCK)
		LEFT OUTER JOIN DZICUBE.dbo.SDEPT B WITH(NOLOCK)
            ON (B.CO_CD = '1212' AND A.DEPT_CD = B.DEPT_CD)
        LEFT OUTER JOIN DZICUBE.dbo.SEMP C WITH(NOLOCK)
            ON (C.CO_CD = '1212' AND A.EMP_CD = C.EMP_CD)
        LEFT OUTER JOIN DZICUBE.dbo.STRADE T WITH(NOLOCK)
            ON (T.CO_CD = '1212' AND A.TR_CD = T.TR_CD)
        WHERE A.CO_CD = '1212'
            AND charindex((CASE '1,0' WHEN '' THEN ' ' ELSE prog_fg END), '1,0') > 0
            AND ISNULL(A.PJT_NM, PJT_NMK) LIKE '%'+ '' +'%'
            AND (
                CASE
                WHEN A.PJT_AUTH ='0' THEN (
                    CASE
                    WHEN '' + '' + '' IN (
                        SELECT	EMP_CD
                        FROM DZICUBE.dbo.SPJT_D
                        WHERE CO_CD = A.CO_CD
                        AND	PJT_CD = A.PJT_CD
                    ) THEN '1'
                    ELSE '0'
                    END
                )
                ELSE '1'
                END
            ) = '1'
        AND ((A.FR_DT BETWEEN #{pjtFromDate} AND #{pjtToDate}) OR (A.TO_DT BETWEEN #{pjtFromDate} AND #{pjtToDate}))
        ]]>
        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword)'>
                AND A.${searchKeyword} LIKE '%' + #{searchValue} + '%'
            </when>
            <otherwise>
                <if test='searchValue != null and !"".equals(searchValue)'>
                    AND (A.PJT_NM LIKE '%' + #{searchValue} + '%'
                    OR A.PJT_CD LIKE '%' + #{searchValue} + '%')
                </if>
            </otherwise>
        </choose>
    </select>

    <select id="getProjectCount" parameterType="map" resultType="int">
        <![CDATA[
        SELECT
            COUNT(*) as cnt
        FROM DZICUBE.dbo.SPJT A WITH(NOLOCK)
		LEFT OUTER JOIN DZICUBE.dbo.SDEPT B WITH(NOLOCK)
        ON (B.CO_CD = '1212' AND A.DEPT_CD = B.DEPT_CD)
            LEFT OUTER JOIN DZICUBE.dbo.SEMP C WITH(NOLOCK)
        ON (C.CO_CD = '1212' AND A.EMP_CD = C.EMP_CD)
            LEFT OUTER JOIN DZICUBE.dbo.STRADE T WITH(NOLOCK)
        ON (T.CO_CD = '1212' AND A.TR_CD = T.TR_CD)
        WHERE A.CO_CD = '1212'
            AND charindex((CASE '1,0' WHEN '' THEN ' ' ELSE prog_fg END), '1,0') > 0
            AND ISNULL(A.PJT_NM, PJT_NMK) LIKE '%'+ '' +'%'
            AND (
                CASE
                WHEN A.PJT_AUTH ='0' THEN (
                    CASE
                    WHEN '' + '' + '' IN (
                        SELECT	EMP_CD
                        FROM DZICUBE.dbo.SPJT_D
                        WHERE CO_CD = A.CO_CD
                        AND	PJT_CD = A.PJT_CD
                    ) THEN '1'
                    ELSE '0'
                    END
                )
                ELSE '1'
                END
            ) = '1'
        AND A.PJT_CD LIKE '%' + #{pjtTmpCd} + '%'
        ]]>
    </select>

    <select id="getCommonGisuInfo" parameterType="java.util.Map" resultType="java.util.Map">
        /* mssql/iCUBE/common/procedure/G20ProcedureSQL - g20Procedure.selectCommonGisuInfo */
        /* 사용자 기수정보 상세 조회 */
        /* 원본 프로시저 [1.0] -  [dbo].[P_GWG20_COMMON_GISU_INFO] */
        /* params[ erpCompSeq, baseDate(yyyyMMdd) ] */

        DECLARE
        @CO_CD		NVARCHAR(4)
			, @DATE		NVARCHAR(8)
			, @FR_DT	NVARCHAR(8)
			, @TO_DT 	NVARCHAR(8)
			, @GI_SU	SMALLINT
			, @I 		SMALLINT
        SELECT
            @CO_CD		= '${erpCompSeq}'
             , @DATE		= '${baseDate}'

        /************************************************************/

        BEGIN
		  SET NOCOUNT ON
				DECLARE @GISU		INT
						, @GI_SU_N	SMALLINT
						, @diff 	SMALLINT
        SELECT
            @GI_SU = GISU
             , @FR_DT = FR_DT
             , @TO_DT = TO_DT
        FROM	SCO WITH(NOLOCK)
        WHERE	CO_CD = @CO_CD

            WHILE 0 &lt; 1
        BEGIN
					SET @i = 0 ;
					IF	@DATE &lt; @FR_DT
						SET @i = -1
					ELSE IF	@DATE &gt; @TO_DT
						SET @i = 1
					ELSE
						BREAK     /* 현재 기수의 경우 LOOP 종료 */

					/* 기수와 기수시작일 데이터 변경 */
					SET		@GI_SU	= @GI_SU + @i
        SELECT	@FR_DT	= CONVERT(NVARCHAR(8), DATEADD(yy,@i,CONVERT(DATETIME,@FR_DT)),112)
        SELECT	@TO_DT	= CONVERT(NVARCHAR(8), DATEADD(yy,@i,CONVERT(DATETIME,@TO_DT)),112)

                      /* under/over flow 처리 */
                      IF (@GI_SU &lt; 1) OR (@GI_SU &gt; 19999)
						BREAK;
        END

        SELECT	@GI_SU_N 	= GISU
             , @FR_DT 	= FR_DT
             , @TO_DT 	= TO_DT
        FROM	SCO WITH(NOLOCK)
        WHERE	CO_CD = @CO_CD

        SET @diff = @GI_SU - @GI_SU_N

        SELECT
            @GI_SU																	AS gisu
             , CONVERT(NVARCHAR(8), DATEADD(yy,@diff,CONVERT(DATETIME,FR_DT)),112) 	AS fromDate
             , CONVERT(NVARCHAR(8), DATEADD(yy,@diff,CONVERT(DATETIME,TO_DT)),112) 	AS toDate
        FROM	SCO WITH(NOLOCK)
        WHERE	CO_CD = @CO_CD

        SET NOCOUNT OFF
        END

    </select>

    <select id="getBgtList" parameterType="map" resultType="map">
        <![CDATA[
        /* mssql/iCUBE/common/procedure/G20ProcedureSQL - g20Procedure.selectBgtList */
        /* 예산과목 리스트 조회 */
        /* params[ erpCompSeq, gisu, frDate, toDate, grFg, divSeqs, mgtSeqs, bottomSeqs, bottomSeqs, bgtSeq, bgtName, opt01, opt02, opt03, bgtFrDate,  ] */
        EXEC USP_COMMON_ACC_CUSTOMHELP_SBGTCD_SELECT
			@CO_CD			= '1212'		/* ERP 회사 코드 */
			,@GISU			= '${gisu}'				/* ERP 기수 */
			,@FR_DT			= '${fromDate}'			/* 기수 시작일 */
			,@TO_DT			= '${toDate}'			/* 기수 종료일 */
			,@GR_FG			= '2'				    /*  */
			,@DIV_CDS		= ''		            /* 회계통제단위 구분값 '|' */
			,@MGT_CDS		= '${mgtSeq}'		    /* 예산통제단위 구분값 '|' */
			,@BOTTOM_CDS	= ''		            /* 하위 사업 코드 구분값 '|' */
			,@BGT_CD		= ''			        /* 검색 예산과목 코드 */
			,@BGT_NM		= ''			        /* 예산과목 명 */
			,@OPT_01		= '${opt01}'			/* 1: 모든 예산과목, 2: 당기편성, 3: 프로젝트 기간 예산 */
			,@OPT_02		= '${opt02}'			/* 1: 모두표시, 2: 사용기한결과분 숨김 */
			,@OPT_03		= '${opt03}'
			,@BGT_FR_DT		= '${baseDate}'		/* 오늘 날짜 */
			,@GROUP_CD		= ''
			,@LANGKIND		= 'KOR'
        ]]>
    </select>

    <update id="insProject" parameterType="map">
        /*insProject*/
        EXEC USP_SAUTOABDOCU_PJT_DML
            '1212'              /* 하드코딩 고정값 */
            , #{pType}          /*등록이면 I, 조회해서 카운트 된게 있으면 U*/
            , #{pProjectCD}     /*DZI 코드 ex) Ra1b223011, Ra1b223012*/
            , #{pProjectNM}     /*프로젝트 명*/
            , #{pState}         /*상태 (등록이면 고정값 1, 조회해서 카운트 된게 있으면 조회한 값 pState 가져옴 )*/
            , #{pProjectNMEx}   /*요약 프로젝트 명*/
            , ''                /*(공백)*/
            , #{pSDate}         /*프로젝트 시작일 20200101*/
            , #{pEDate}         /*프로젝트 종료일 20201231*/
            , '1'               /*하드코딩 고정값*/
            , ''                /*(공백)*/
            , ''                /*(공백)*/
            , ''                /*(공백)*/
    </update>

    <select id="getBudgetInfo" parameterType="map" resultType="map">
        /*getBudgetInfo*/
        EXEC USP_ABDOCU_EXTER_YESIL_SELECT2
            '1212',
            #{gisu},
            #{baseDate},
            '1000|2000|3000|4000|5000|6000|7000|',
            #{mgtSeq},
            '',
            '',
            #{fromDate},
            #{toDate},
            '2',
            #{temp},                /*수입예산 1 , 지출예산 2*/
            '1',
            '1',
            '1'
    </select>

    <select id="getBankList" parameterType="map" resultType="map">
        /*getBankList*/
        SELECT TR_CD, TR_NM, BA_NB, DEPOSITOR, JIRO_NM
        FROM ZA_TRADE_DAIKIN
        WHERE TR_FG = '5'
          AND (TR_NM LIKE '%' + #{searchValue} + '%' OR BA_NB LIKE '%' + #{searchValue} + '%')
    </select>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        SELECT
            TR_NM, TR_CD
        FROM ZA_TRADE_DAIKIN
        WHERE REG_NB = #{crmNo} AND TR_FG = '1'
    </select>

    <insert id="insCrmInfo" parameterType="map">
        /*insCrmInfo*/
        EXEC USP_SAUTOABDOCU_TRADE_INSERT
            '1212'
            , #{crmNm}
            , '1'
            , #{crmNo}
            , #{accNo}
            , #{ceoNm}
            , #{post}
            , #{addr}
            , ''
            , #{crmTelNum}
            , #{bankNm}
            , #{bankMngNm}
            , ''
            , #{crmEvn}
            , #{crmOcc}
            , #{erpEmpCd}
            , #{ip}
    </insert>

    <select id="getTradeInfo" parameterType="map" resultType="map">
        /*getTradeInfo*/
        SELECT
            TR_NM, REG_NB, PPL_NB, CEO_NM, BUSINESS, JONGMOK, ZIP, DIV_ADDR1, ADDR2
        FROM ZA_TRADE_DAIKIN
        WHERE TR_CD = #{TR_CD}
    </select>

    <select id="getHearnerInfo" parameterType="map" resultType="map">
        /*getHearnerInfo*/
        SELECT
            DATA_CD, PER_CD, REG_NO, PER_NM, ZIP_CD, ADDR, PHONE, ACCT_NO, ACCT_NM
        FROM VN_G20HEARNER_INFO
        WHERE PER_CD = #{TR_CD}
    </select>

    <select id="getClientList" parameterType="map" resultType="map">
        /*getClientList*/
        SELECT
            TR_CD, CEO_NM, REG_NB, JIRO_NM, BA_NB, DEPOSITOR, TR_NM
        FROM ZA_TRADE_DAIKIN
        WHERE TR_FG = '1'
            AND
                (TR_NM LIKE '%' + #{searchValue} + '%' OR BA_NB LIKE '%' + #{searchValue} + '%' OR REG_NB LIKE '%' + #{searchValue} + '%')
    </select>

    <select id="getCardList" parameterType="map" resultType="map">
        /*getCardList*/
        SELECT
            A.TR_CD,
            A.TR_NM,
            A.BA_NB AS CARD_BA_NB,
            B.JIRO_NM,
            A.CLTTR_CD,
            B.BA_NB,
            B.DEPOSITOR
        FROM ZA_TRADE_DAIKIN A
        LEFT JOIN ZA_TRADE_DAIKIN B
        ON A.CLTTR_CD = B.TR_CD
        WHERE A.TR_FG = '9'
            AND
                (A.TR_NM LIKE '%' + #{searchValue} + '%' OR A.BA_NB LIKE '%' + #{searchValue} + '%' OR A.REG_NB LIKE '%' + #{searchValue} + '%')
        <if test='cardName != null and !"".equals(cardName)'>
            AND
                A.TR_NM LIKE '%' + #{cardName} + '%'
        </if>
        <if test='"M".equals(cardVal)'>
            AND
                A.TR_NM NOT LIKE '%' + '_개인카드' + '%'
        </if>
        <if test='"P".equals(cardVal)'>
            AND
                A.TR_NM LIKE '%' + '_개인카드' + '%'
        </if>
        ORDER BY A.INSERT_DT DESC
    </select>

    <select id="getOtherList" parameterType="map" resultType="map">
        /*getOtherList*/
        SELECT
            PER_CD,
            LEFT(REG_NO,6) AS REG_NO,
            PER_NM,
            ACCT_NO,
            ACCT_NM,
            BANK_NM
        FROM VN_G20HEARNER_INFO
        WHERE
            (PER_NM LIKE '%' + #{searchValue} + '%'
        OR REG_NO LIKE '%' + #{searchValue} + '%'
        OR ACCT_NO LIKE '%' + #{searchValue} + '%')
        <if test='type == "9" or "9".equals(type)'>
            AND
            DATA_CD = 'G' AND REG_NO != ''
        </if>
        <if test='type == "5" or "5".equals(type)'>
            AND
                DATA_CD = 'F'
        </if>


    </select>

    <select id="getSempData" parameterType="map" resultType="map">
        /*getSempData*/
        SELECT * FROM SEMP WHERE EMP_CD = #{erpEmpSeq}
    </select>

    <insert id="insZnSautoabdocu" parameterType="map">
        /*insZnSautoabdocu*/
        INSERT INTO ZN_SAUTOABDOCU
            (
                CO_CD,
                IN_DT,
                PMR_NO,
                BGT_CD,
                USER_SQ,
                DIV_CD,
                DEPT_CD,
                EMP_CD,
                MGT_CD,
                BOTTOM_CD,
                DOCU_FG,
                RMK_DC,
                BANK_NM1,
                BA_NB1,
                TR_CD,
                SET_FG,
                VAT_FG,
                TR_FG,
                DRMK_DC,
                SUP_AM,
                VAT_AM,
                TR_NM,
                REG_NB,
                PPL_NB,
                CEO_NM,
                BUSINESS,
                JONGMOK,
                ZIP,
                DIV_ADDR1,
                ADDR2,
                BANK_NM2,
                BA_NB2,
                DEPOSITOR,
                CTR_NB,
                CTR_NM,
                ETCDATA_CD,
                ETCPER_CD,
                ETCREG_NO,
                ETCPER_NM,
                ETCZIP_CD,
                ETCADDR,
                ETCPHONE,
                ETCBANK_CD,
                ETCACCT_NO,
                ETCACCT_NM,
                ETCRVRS_YM,
                ETCDIV_CD,
                ETCDUMMY1,
                TAX_DT,
                RPMR_NO,
                REG_DT,
                EXEC_DT,
                DUMMY1,
                DUMMY2,
                DUMMY3,
                ACISU_DT,
                DIV_CD2
            )
        VALUES
            (
                #{CO_CD},
                #{IN_DT},
                #{PMR_NO},
                #{BGT_CD},
                #{USER_SQ},
                #{DIV_CD},
                #{DEPT_CD},
                #{EMP_CD},
                #{MGT_CD},
                #{BOTTOM_CD},
                #{DOCU_FG},
                #{RMK_DC},
                #{BANK_NM1},
                #{BA_NB1},
                '',
                #{SET_FG},
                #{VAT_FG},
                #{TR_FG},
                #{DRMK_DC},
                #{SUP_AM},
                #{VAT_AM},
                #{TR_NM},
                #{REG_NB},
                #{PPL_NB},
                #{CEO_NM},
                #{BUSINESS},
                #{JONGMOK},
                #{ZIP},
                #{DIV_ADDR1},
                #{ADDR2},
                #{BANK_NM2},
                #{BA_NB2},
                #{DEPOSITOR},
                #{CTR_NB},
                #{CTR_NM},
                #{ETCDATA_CD},
                #{ETCPER_CD},
                #{ETCREG_NO},
                #{ETCPER_NM},
                #{ETCZIP_CD},
                #{ETCADDR},
                #{ETCPHONE},
                #{ETCBANK_CD},
                #{ETCACCT_NO},
                #{ETCACCT_NM},
                #{ETCRVRS_YM},
                #{ETCDIV_CD},
                #{ETCDUMMY1},
                #{TAX_DT},
                #{RPMR_NO},
                #{REG_DT},
                #{EXEC_DT},
                #{DUMMY1},
                #{DUMMY2},
                #{DUMMY3},
                #{IN_DT_TMP},
                #{DIV_CD2}
            )
    </insert>

    <insert id="execUspAncj080Insert00" parameterType="map">
        /*execUspAncj080Insert00*/
        Exec USP_ANCJ080_INSERT_00
            #{CO_CD},
            #{IN_DT},
            #{PMR_NO},
            #{IN_DT_TMP},
            '',
            '',
            #{EMP_CD},
            #{DIV_CD2},
            #{DEPT_CD},
            #{EMP_CD},
            #{TXT_DONE_DT},
            #{LOGIN_EMP_CD},
            '';
    </insert>

    <select id="getProjectData" parameterType="map" resultType="map">
        /*getProjectData*/
        SELECT * FROM SPJT WHERE PJT_CD = #{pjtCd}
    </select>

    <select id="getBankData" parameterType="map" resultType="map">
        /*getBankData*/
        SELECT * FROM ZA_TRADE_DAIKIN WHERE TR_CD = #{TR_CD}
    </select>

    <select id="getBudgetList" parameterType="map" resultType="map">
        /*getBudgetList*/
        <![CDATA[
        SELECT
            A.CO_CD,
            A.PJT_CD,
            A.PJT_NM,
            A.FR_DT,
            A.TO_DT,
            A.TR_CD,
            A.TR_NM,
            A.BANK_CD,
            A.BANK_NM,
            A.BA_NB,
            A.PJT_TY,
            A.PJTGRP_CD,
            A.DEPT_CD,
            A.EMP_CD,
            A.PROG_FG
        FROM VN_G20SPJT_INFO AS A
        WHERE
            A.CO_CD NOT IN ('9999')
        AND A.FR_DT >= 20230101 AND A.TO_DT <= 20231231
        ]]>
            <if test='searchDept == "1" or "1".equals(searchDept)'>
                AND
                    A.PROG_FG = '1'
            </if>
            <if test='searchDept == "2" or "2".equals(searchDept)'>
                AND
                    (A.PROG_FG = '0' OR A.PROG_FG = '9')
            </if>
            <if test='searchKeyword != null and !"".equals(searchKeyword)'>
                AND
                    ${searchKeyword} LIKE '%' + #{searchValue} + '%'
            </if>
        ORDER BY A.FR_DT DESC
    </select>

    <select id="getProjectInfo" parameterType="map" resultType="map">
        /*getProjectInfo*/
        SELECT
            *
        FROM VN_G20SPJT_INFO AS A
        WHERE PJT_CD = #{pjtCd}
    </select>

    <select id="getBudgetListBak" parameterType="map" resultType="map">
        /*getBudgetListBak*/
        <![CDATA[
        SELECT
            MAX(A.CO_CD) AS CO_CD,
            MAX(A.PJT_CD) AS PJT_CD,
            MAX(A.PJT_NM) AS PJT_NM,
            MAX(A.FR_DT) AS FR_DT,
            MAX(A.TO_DT) AS TO_DT,
            MAX(A.TR_CD) AS TR_CD,
            MAX(A.TR_NM) AS TR_NM,
            MAX(A.BANK_CD) AS BANK_CD,
            MAX(A.BANK_NM) AS BANK_NM,
            MAX(A.BA_NB) AS BA_NB,
            MAX(A.PJT_TY) AS PJT_TY,
            MAX(A.PJTGRP_CD) AS PJTGRP_CD,
            MAX(A.DEPT_CD) AS DEPT_CD,
            MAX(A.EMP_CD) AS EMP_CD,
            MAX(A.PROG_FG) AS PROG_FG,
            SUM(B.UNIT_AM) AS SUP_AM
        FROM VN_G20SPJT_INFO AS A
        LEFT JOIN VN_ABDOCU_EXTER_INOUT B ON A.PJT_CD = B.MGT_CD
        WHERE
            A.CO_CD NOT IN ('9999')
        AND A.FR_DT >= 20230101 AND A.TO_DT <= 20231231
        AND A.PJT_CD = 'Se1g923011' AND B.GR_FG = '2'
        ]]>
        <if test='searchDept == "1" or "1".equals(searchDept)'>
            AND
            A.PROG_FG = '1'
        </if>
        <if test='searchDept == "2" or "2".equals(searchDept)'>
            AND
            (A.PROG_FG = '0' OR A.PROG_FG = '9')
        </if>
        <if test='searchKeyword != null and !"".equals(searchKeyword)'>
            AND
            ${searchKeyword} LIKE '%' + #{searchValue} + '%'
        </if>
        GROUP BY A.PJT_CD
        ORDER BY A.FR_DT DESC
    </select>

    <select id="getG20ProjectList" parameterType="map" resultType="map">
        /*getG20ProjectList*/
        SELECT DISTINCT A.PJT_CD, PJT_NM, A.FR_DT, A.TO_DT FROM SPJT A
        LEFT JOIN ABGT B
        ON
            A.PJT_CD = B.MGT_CD
        WHERE
            A.PJT_NM LIKE '%' + #{pjtNm} + '%'
        AND
            ((FR_DT BETWEEN #{baseYear} + '0101' AND #{baseYear} + '1231') OR (TO_DT BETWEEN #{baseYear} + '0101' AND #{baseYear} + '1231'))
        AND B.MGT_CD IS NOT NULL
    </select>

    <select id="getEtaxList" parameterType="map" resultType="map">
        /*getEtaxList*/
        SELECT
            A.*, B.*, C.BANK_NM
        FROM
            ETAXUP A
        LEFT JOIN
            STRADE B
        ON
            A.TR_CD = B.TR_CD
        LEFT JOIN
            SBANK C
        ON B.JIRO_CD = C.BANK_CD
        WHERE
            ISU_DT BETWEEN #{strDt} AND #{endDt}
        <if test='type == 1 or "1".equals(type)'>
            AND
                A.TAX_TY = '2'
        </if>
        <if test='type == 2 or "2".equals(type)'>
            AND
                A.TAX_TY = '4'
        </if>
        <if test='searchValue != null and !"".equals("searchValue")'>
            AND
                A.TR_NM LIKE '%' + #{searchValue} + '%'
        </if>
        ORDER BY ISU_DT DESC
    </select>

    <select id="getEtaxData" parameterType="map" resultType="map">
        /*getEtaxData*/
        SELECT
            A.*, B.*,
            C.DIV_ADDR AS RDIV_ADDR,
            C.DIV_ADDR1 AS RDIV_ADDR1,
            C.BUSINESS AS RBUSINESS,
            C.JONGMOK AS RJONGMOK
        FROM
            ETAXUP A
        LEFT JOIN
            STRADE B
        ON
            A.TR_CD = B.TR_CD
        LEFT JOIN
            SDIV C
        ON
            A.DIV_CD = C.DIV_CD
        WHERE
            ISS_NO = #{issNo} AND A.CO_CD = #{coCd} AND TAX_TY = #{taxTy}
    </select>

    <select id="getSbankList" parameterType="map" resultType="map">
        /*getSbankList*/
        SELECT
            *
        FROM
            SBANK
    </select>

    <insert id="insEtcEmpInfo" parameterType="map">
        /*insEtcEmpInfo*/
        EXEC USP_SAUTOABDOCU_HEARNER_INSERT
            1212,
            'G',
            #{pCD},
            #{regNo},
            #{empName},
            #{post},
            #{addr},
            #{empTel},
            #{jiroCd},
            #{baNb},
            #{depositor},
            #{erpEmpCd},
            #{ip}
    </insert>

    <select id="getLastPCd" resultType="int">
        /*getLastPCd*/
        SELECT
            top 1 REPLACE(PER_CD,'T','') AS PER_CD
        FROM VN_G20HEARNER_INFO
        WHERE Per_CD LIKE 'T%'
        ORDER BY PER_CD DESC
    </select>

    <select id="getEtaxDb" resultType="map" parameterType="map">
        /*getEtaxDb*/
        SELECT
            A.ISS_NO, A.CO_CD, A.DIV_CD, A.TR_CD, A.ISS_DT, A.TAX_TY, A.ISU_DT, A.DIVREG_NB, A.DIVSUB_NB, A.DIV_NM,
            A.DIVCEO_NM, A.TRREG_NB, A.TRREG_NB, A.TRSUB_NB, A.TR_NM, A.TRCEO_NM, A.SUM_AM, A.SUP_AM, A.VAT_AM,
            A.ETAX_TY, A.ETAX_FG, A.SEND_FG, A.DUMMY1, A.DUMMY2, A.ISS_YMD, A.ITEM_DC, A.ADDTAX_CD, A.ADDTAX_AM,
            A.ADDRTE_RT, A.EMAIL_DC, A.TRCHARGE_EMAIL, CONVERT(CHAR(10), A.INSERT_DT, 23) AS INSERT_DT,
            B.TR_CD AS ST_TR_CD, B.TR_FG, B.REG_NB, B.CEO_NM, B.BUSINESS, B.JONGMOK, B.ZIP, B.DIV_ADDR1, B.ADDR2,
            B.TEL, B.FAX, B.BA_NB, B.INTER_DT, B.LIQ_WS, B.LIQ_RS, B.USE_YN, B.CLTTR_CD, B.JIRO_CD, B.DEPOSITOR,
            B.TR_NMK, B.ATTR_NMK, B.BA_NB_TR, B.AREA_CD, B.GUGUN_CD,
            C.BANK_NM
        FROM
            ETAXUP A
        LEFT JOIN
            STRADE B
        ON
            A.TR_CD = B.TR_CD
        LEFT JOIN
            SBANK C
        ON B.JIRO_CD = C.BANK_CD
        WHERE
            A.ISS_YMD BETWEEN #{strDate} AND #{endDate}
    </select>

    <select id="getExnpCheck" parameterType="map" resultType="int">
        /*getExnpCheck*/
        SELECT COUNT(*) FROM ZN_SAUTOABDOCU WHERE PMR_NO = #{PMR_NO};
    </select>

</mapper>