<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="payApp">

    <insert id="insPayAppData" parameterType="map">
        /*insPayAppData*/
        INSERT CAM_MNG.DJ_PAY_APP
            (
                PAY_APP_TYPE,
                PJT_NM,
                PJT_SN,
                PJT_CD,
                BUDGET_NM,
                BUDGET_SN,
                APP_DE,
                REQ_DE,
                APP_TITLE,
                APP_CONT,
                BNK_SN,
                BNK_NM,
                ACC_NO,
                ACC_NM,
                PAY_APP_STAT,
                GUBUN,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{payAppType},
                #{pjtNm},
                #{pjtSn},
                #{pjtCd},
                #{budgetNm},
                #{budgetSn},
                #{appDe},
                #{reqDe},
                #{appTitle},
                #{appCont},
                #{bnkSn},
                #{bnkNm},
                #{accNo},
                #{accNm},
                #{payAppStat},
                'W',
                #{regEmpSeq}
            )
        <selectKey keyProperty="payAppSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_APP'
        </selectKey>
    </insert>

    <insert id="insExnpData" parameterType="map">
        /*insExnpData*/
        INSERT CAM_MNG.DJ_EXNP
            (
                PAY_APP_SN,
                PAY_APP_TYPE,
                PJT_NM,
                PJT_SN,
                PJT_CD,
                EXNP_DE,
                EXNP_EMP_SEQ,
                G20_EMP_CD,
                G20_DEPT_CD,
                EXNP_BRIEFS,
                ADD_EXNP_BRIEFS,
                BUSN_CD,
                BNK_SN,
                BNK_NM,
                ACC_NO,
                ACC_NM,
                GUBUN,
                DT1,
                DT2,
                DT3,
                DT_CK,
                REQ_DE,
                REQ_EXNP_DE,
                REQ_END_DE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{payAppSn},
                #{payAppType},
                #{pjtNm},
                #{pjtSn},
                #{pjtCd},
                #{exnpDe},
                #{exnpEmpSeq},
                #{g20EmpCd},
                #{g20DeptCd},
                #{exnpBriefs},
                #{addExnpBriefs},
                #{busnCd},
                #{bnkSn},
                #{bnkNm},
                #{accNo},
                #{accNm},
                'W',
                #{DT1},
                #{DT2},
                #{DT3},
                'N',
                #{reqDe},
                #{reqExDe},
                #{reqEndDe},
                #{regEmpSeq}
            )
        <selectKey keyProperty="exnpSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_EXNP'
        </selectKey>
    </insert>

    <update id="updPayAppData" parameterType="map">
        /*updPayAppData*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            PAY_APP_TYPE = #{payAppType},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            APP_DE = #{appDe},
            REQ_DE = #{reqDe},
            APP_TITLE = #{appTitle},
            APP_CONT = #{appCont},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            PAY_APP_STAT = #{payAppStat},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updExnpData" parameterType="map">
        /*updExnpData*/
        UPDATE
            CAM_MNG.DJ_EXNP
        SET
            PAY_APP_SN = #{payAppSn},
            PAY_APP_TYPE = #{payAppType},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            EXNP_DE = #{exnpDe},
            EXNP_EMP_SEQ = #{exnpEmpSeq},
            G20_EMP_CD = #{g20EmpCd},
            G20_DEPT_CD = #{g20DeptCd},
            EXNP_BRIEFS = #{exnpBriefs},
            ADD_EXNP_BRIEFS = #{addExnpBriefs},
            BUSN_CD = #{busnCd},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            DT1 = #{DT1},
            DT2 = #{DT2},
            DT3 = #{DT3},
            DT_CK = 'Y',
            REQ_DE = #{reqDe},
            REQ_EXNP_DE = #{reqExDe},
            REQ_END_DE = #{reqEndDe},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>


    <select id="getPayAppReqData" parameterType="map" resultType="map">
        /*getPayAppReqData*/
        SELECT A.*, B.DOC_NO, DATE_FORMAT(A.REG_DT, '%Y년 %m월 %d일') AS REG_DATE, P.PJT_CD,
               IFNULL((SELECT SPCS.DIV_CD FROM CAM_MNG.DJ_PROJECT_CODE_SET SPCS WHERE SPCS.IS_CODE = LEFT(P.PJT_CD, 1)), '') AS DIV_CD
        FROM CAM_MNG.DJ_PAY_APP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B ON A.DOC_ID = B.DOC_ID
        LEFT JOIN
             CAM_PJT_MNG.DJ_PROJECT P ON A.PJT_SN = P.PJT_SN
        WHERE PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getPayAppFinalData" parameterType="map" resultType="map">
        /*getPayAppFinalData*/
        SELECT A.*, B.DOC_NO
        FROM CAM_MNG.DJ_PAY_APP A
                 LEFT JOIN
             DJ_CAMTIC.A_DOC_INFO B
             ON
                 A.DOC_ID = B.DOC_ID
        WHERE A.PAY_APP_SN = #{payAppSn} AND A.DOC_STATUS = 100
    </select>

    <insert id="insPayAppDetailData" parameterType="map">
        /*insPayAppDetailData*/
        INSERT CAM_MNG.DJ_PAY_APP_DET
            (
                PAY_APP_SN,
                BUDGET_NM,
                BUDGET_SN,
                BUDGET_AMT,
                TEAM_SEQ,
                TEAM_NAME,
                EVID_TYPE,
                TR_CD,
                CRM_NM,
                CRM_BNK_NM,
                CRM_ACC_NO,
                CRM_ACC_HOLDER,
                TR_DE,
                TOT_COST,
                SUP_COST,
                VAT_COST,
                CARD,
                CARD_NO,
                BUY_STS,
                ETC,
                ISS,
                ADVANCES
            )
        VALUES
            (
                #{payAppSn},
                #{budgetNm},
                #{budgetSn},
                #{budgetAmt},
                #{teamSeq},
                #{teamName},
                #{evidType},
                #{trCd},
                #{crmNm},
                #{crmBnkNm},
                #{crmAccNo},
                #{crmAccHolder},
                #{trDe},
                #{totCost},
                #{supCost},
                #{vatCost},
                #{card},
                #{cardNo},
                #{buySts},
                #{etc},
                #{iss},
                #{advances}
            )
    </insert>

    <insert id="insExnpDetailData" parameterType="map">
        /*insExnpDetailData*/
        INSERT CAM_MNG.DJ_EXNP_DET
            (
                EXNP_SN,
                BUDGET_SN,
                BUDGET_NM,
                EVID_TYPE,
                TR_CD,
                CRM_NM,
                CRM_BNK_NM,
                CRM_ACC_NO,
                CRM_ACC_HOLDER,
                TR_DE,
                TOT_COST,
                SUP_COST,
                VAT_COST,
                CARD,
                CARD_NO,
                ETC,
                ISS,
                FILE1,
                FILE2,
                FILE3,
                FILE4,
                FILE5,
                FILE6,
                FILE7,
                FILE8,
                FILE9,
                FILE10,
                ADVANCES,
                BUSN_CD
            )
        VALUES
            (
                #{exnpSn},
                #{budgetSn},
                #{budgetNm},
                #{evidType},
                #{trCd},
                #{crmNm},
                #{crmBnkNm},
                #{crmAccNo},
                #{crmAccHolder},
                #{trDe},
                #{totCost},
                #{supCost},
                #{vatCost},
                #{card},
                #{cardNo},
                #{etc},
                #{iss},
                (SELECT FILE1 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE2 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE3 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE4 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE5 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE6 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE7 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE8 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE9 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE10 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                #{advances},
                #{busnCd}
            )
    </insert>

    <delete id="delPayAppDetailData" parameterType="map">
        /*delPayAppDetailData*/
        DELETE FROM CAM_MNG.DJ_PAY_APP_DET
        WHERE PAY_APP_SN = #{payAppSn}
    </delete>

    <delete id="delExnpDetailData" parameterType="map">
        /*delExnpDetailData*/
        DELETE FROM CAM_MNG.DJ_EXNP_DET
        WHERE EXNP_SN = #{exnpSn}
    </delete>

    <select id="getPayAppDetailData" parameterType="map" resultType="map">
        /*getPayAppDetailData*/
        SELECT PAD.*, FORMAT(TOT_COST , 0) AS TOT_COST_COMMA
        FROM CAM_MNG.DJ_PAY_APP_DET PAD
        WHERE PAD.PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getPaymentList" parameterType="map" resultType="map">
        /*getPaymentList*/
        SELECT
            A.*,
            B.DOC_NO,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = A.PAY_APP_SN AND DET_STAT != "N") AS TOT_COST,
            (SELECT REQ_EXNP_DE FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS REQ_EXNP_DE,
            (SELECT REQ_END_DE FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS REQ_END_DE
        FROM
            CAM_MNG.DJ_PAY_APP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B
        ON
            A.DOC_ID = B.DOC_ID
        WHERE
            1=1
        <if test='payAppType == "1" or "1".equals(payAppType)'>
        AND PAY_APP_TYPE = 1
        </if>
        <if test='payAppType == "2" or "2".equals(payAppType)'>
        AND PAY_APP_TYPE = 2
        </if>
        <if test='payAppType == "3" or "3".equals(payAppType)'>
            AND PAY_APP_TYPE = 3
        </if>
        <if test='payAppType == "4" or "4".equals(payAppType)'>
            AND PAY_APP_TYPE = 4
        </if>
        <if test='docStatus != null and !"".equals(docStatus)'>
        AND
            A.DOC_STATUS = #{docStatus}
        </if>
        ORDER BY PAY_APP_SN DESC
    </select>

    <select id="getWaitPaymentList" parameterType="map" resultType="map">
        /*getWaitPaymentList*/
        SELECT A.PJT_CD, B.* FROM
            CAM_MNG.DJ_PAY_APP A
        LEFT JOIN CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
        LEFT JOIN CAM_MNG.DJ_EXNP C ON C.PAY_APP_SN = B.PAY_APP_SN
        WHERE
            A.PJT_CD = #{mgtSeq}
        AND ((C.PAY_APP_TYPE IN (4, 5, 6) AND C.DOC_STATUS != 100) OR (C.PAY_APP_TYPE IN (1, 2, 3) AND C.RE_STAT != 'Y') OR C.PAY_APP_TYPE IS NULL)
    </select>

    <update id="updatePayAppApprStat" parameterType="map">
        /* updatePayAppApprStat */
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updatePayAppFinalApprStat" parameterType="map">
        /* updatePayAppFinalApprStat */
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updateExnpApprStat" parameterType="map">
        /* updatePayAppApprStat */
        UPDATE CAM_MNG.DJ_EXNP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="updateExnpFinalApprStat" parameterType="map">
        /* updateExnpFinalApprStat */
        UPDATE CAM_MNG.DJ_EXNP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="updateIncpApprStat" parameterType="map">
        /* updateIncpApprStat */
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updateIncpFinalApprStat" parameterType="map">
        /* updateIncpFinalApprStat */
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updPayAppDetStat" parameterType="map">
        /*updPayAppDetStat*/
        UPDATE CAM_MNG.DJ_PAY_APP_DET
        SET
            DET_STAT = 'N'
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </update>

    <select id="getExnpData" parameterType="map" resultType="map">
        /*getExnpData*/
        SELECT
            A.*,
            B.EMP_SEQ,
            B.ERP_EMP_SEQ,
            B.EMP_NAME_KR,
            B.DEPT_SEQ,
            B.DEPT_NAME,
            C.DOC_NO,
            (SELECT SEI.EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = A.REG_EMP_SEQ) AS REG_EMP_NAME,
            DATE_FORMAT(A.DT1, '%Y년 %m월 %d일') AS DATE1,
            DATE_FORMAT(A.DT2, '%Y년 %m월 %d일') AS DATE2,
            DATE_FORMAT(A.DT3, '%Y년 %m월 %d일') AS DATE3,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET SED WHERE SED.EXNP_SN = A.EXNP_SN), 0) AS TOT_COST
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.EXNP_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO C
        ON
            A.DOC_ID = C.DOC_ID
        WHERE
            EXNP_SN = #{exnpSn}
    </select>

    <select id="getExnpDetailData" parameterType="map" resultType="map">
        /*getExnpDetailData*/
        SELECT
            A.*
        FROM
            CAM_MNG.DJ_EXNP_DET A
        WHERE
            EXNP_SN = #{exnpSn}
    </select>

    <select id="getExnpG20List" parameterType="map" resultType="map">
        /*getExnpG20List*/
        SELECT
            1212 AS CO_CD,
            A.EXNP_DET_SN,
            A.EXNP_SN,
            A.EVID_TYPE,
            A.TR_CD,
            A.BUDGET_SN AS BGT_CD,
            REPLACE(A.TR_DE, "-", "") AS IN_DT,
            REPLACE(A.TR_DE, "-", "") AS TAX_DT,
            REPLACE(D.APP_DE, "-", "") AS REG_DT,
            REPLACE(D.PAY_EXNP_DE, "-", "") AS EXEC_DT,
            DATE_FORMAT(now(), '%Y%m%d') AS TXT_DONE_DT,
            "" AS RPMR_NO,
            A.TR_DE AS CNT_DT,
            "" AS DUMMY1,
            "" AS DUMMY2,
            "" AS DUMMY3,
            B.BUSN_CD AS DIV_CD,
            B.BUSN_CD AS DIV_CD2,
            B.G20_DEPT_CD AS DEPT_CD,
            B.G20_EMP_CD AS EMP_CD,
            B.PJT_CD AS MGT_CD,
            "" AS BOTTOM_CD,
            CASE
                WHEN B.PAY_APP_TYPE = '1'
                    THEN '1'
                WHEN B.PAY_APP_TYPE = '2'
                    THEN '6'
                WHEN B.PAY_APP_TYPE = '3'
                    THEN '7'
                ELSE '55'
            END AS DOCU_FG,
            B.EXNP_BRIEFS AS RMK_DC,
            B.ACC_NM AS BANK_NM1,
            B.ACC_NO AS BA_NB1,
            A.EVID_TYPE,
            A.ETC,
            A.SUP_COST AS SUP_AM,
            A.VAT_COST AS VAT_AM,
            A.CRM_NM AS TR_NM,
            A.CRM_BNK_NM AS BANK_NM2,
            A.CRM_ACC_NO AS BA_NB2,
            A.CRM_ACC_HOLDER AS DEPOSITOR,
            A.CARD AS CTR_NM,
            A.CARD_NO AS CTR_NB,
            "" AS ETCDATA_CD,
            "" AS ETCPER_CD,
            "" AS ETCREG_NO,
            "" AS ETCPER_NM,
            "" AS ETCZIP_CD,
            "" AS ETCADDR,
            "" AS ETCPHONE,
            "" AS ETCBANK_CD,
            "" AS ETCACCT_NO,
            "" AS ETCACCT_NM,
            "" AS ETCRVRS_YM,
            "" AS ETCDIV_CD,
            "" AS ETCDUMMY1
        FROM
            CAM_MNG.DJ_EXNP_DET A
        LEFT JOIN
            CAM_MNG.DJ_EXNP B
        ON
            A.EXNP_SN = B.EXNP_SN
        LEFT JOIN
            CAM_MNG.DJ_PAY_APP D
        ON
            B.PAY_APP_SN = D.PAY_APP_SN
        WHERE
            A.EXNP_SN = #{exnpSn}
        <if test='evidTypeArr != null and !"".equals(evidTypeArr)'>
        AND
            A.EVID_TYPE in (${evidTypeArr})
        </if>
    </select>

    <select id="getCountDoc" parameterType="map" resultType="int">
        /*getCountDoc*/
        SELECT
            A.countA + B.countB
        FROM (
            SELECT
                IFNULL(MAX(EXNP_CNT), 0) AS countA
            FROM
                CAM_MNG.DJ_EXNP_DET
            WHERE
                TR_DE = #{CNT_DT}
              AND
                EXNP_STAT = 'Y'
        ) A
        JOIN (
            SELECT
                IFNULL(MAX(EXNP_CNT), 0) AS countB
            FROM
                CAM_MNG.DJ_PAY_INCP_DET
            WHERE
                TR_DE = #{CNT_DT}
              AND
                EXNP_STAT = 'Y'
        ) B
    </select>

    <select id="getExnpCountDoc" parameterType="map" resultType="int">
        /*getExnpCountDoc*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_EXNP_DET
        WHERE
            TR_DE = #{CNT_DT}
        AND
            EXNP_STAT = 'Y'
        AND
            EXNP_SN = #{EXNP_SN}
    </select>

    <select id="getIncpCountDoc" parameterType="map" resultType="int">
        /*getIncpCountDoc*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_PAY_INCP_DET
        WHERE
            TR_DE = #{CNT_DT}
          AND
            EXNP_STAT = 'Y'
          AND
            PAY_INCP_SN = #{PAY_INCP_SN}
    </select>

    <update id="updExnpStat" parameterType="map">
        /*updExnpStat*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            EXNP_STAT = "Y",
            EXNP_CNT = #{USER_SQ}
        WHERE
            EXNP_DET_SN = #{EXNP_DET_SN}
    </update>

    <update id="updIncpStat" parameterType="map">
        /*updIncpStat*/
        UPDATE CAM_MNG.DJ_PAY_INCP_DET
        SET
            EXNP_STAT = 'Y',
            EXNP_CNT = #{USER_SQ}
        WHERE
            PAY_INCP_DET_SN = #{PAY_INCP_DET_SN}
    </update>

    <select id="getEmpInfo" parameterType="map" resultType="map">
        /*getEmpInfo*/
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            EMP_SEQ = #{empSeq}
    </select>

    <select id="getExnpList" parameterType="map" resultType="map">
        /*getExnpList*/
        SELECT
            A.*,
            B.DOC_NO,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET WHERE EXNP_SN = A.EXNP_SN) AS TOT_COST,
            (SELECT BUDGET_NM FROM CAM_MNG.DJ_EXNP_DET WHERE EXNP_SN = A.EXNP_SN LIMIT 1) AS BUDGET_NM_EX
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B
        ON
            A.DOC_ID = B.DOC_ID
        WHERE
            1 = 1
        <if test='!"".equals(payAppType) and payAppType != null'>
            AND
                A.PAY_APP_TYPE = #{payAppType}
        </if>
        ORDER BY EXNP_SN DESC
    </select>

    <select id="getExnpReList" parameterType="map" resultType="map">
        /*getExnpReList*/
        SELECT
            E.*,
            DI.APPRO_KEY AS APPRO_KEY,
            DI.DOC_MENU_CD AS DOC_MENU_CD,
            IFNULL(SUM(ED.TOT_COST), 0) AS TOT_COST
        FROM
            CAM_MNG.DJ_EXNP_DET ED
        LEFT JOIN
            CAM_MNG.DJ_EXNP E ON ED.EXNP_SN = E.EXNP_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON E.DOC_ID = DI.DOC_ID
        WHERE E.DOC_STATUS = '100'
        AND E.PAY_APP_TYPE = 1
        AND ED.EVID_TYPE IN (1, 2, 3)
        GROUP BY E.EXNP_SN
        ORDER BY E.EXNP_SN DESC
    </select>

    <select id="getIncpList" parameterType="map" resultType="map">
        /* getIncpList */
        SELECT
            A.*,
            B.EMP_NAME_KR AS EMP_NAME,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_DET WHERE PAY_INCP_SN = A.PAY_INCP_SN) AS TOT_COST
        FROM
            CAM_MNG.DJ_PAY_INCP A
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
            ON A.EXNP_EMP_SEQ = B.EMP_SEQ
        ORDER BY A.PAY_INCP_SN DESC
    </select>

    <select id="getIncpReList" parameterType="map" resultType="map">
        /*getExnpReList*/
        SELECT
            I.*,
            DI.APPRO_KEY AS APPRO_KEY,
            DI.DOC_MENU_CD AS DOC_MENU_CD,
            IFNULL(SUM(ID.TOT_COST), 0) AS TOT_COST
        FROM
            CAM_MNG.DJ_PAY_INCP_DET ID
        LEFT JOIN CAM_MNG.DJ_PAY_INCP I ON ID.PAY_INCP_SN = I.PAY_INCP_SN
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON I.DOC_ID = DI.DOC_ID
        WHERE I.DOC_STATUS = '100'
          AND ID.EVID_TYPE IN (1, 2, 3, 4, 5 , 6)
        GROUP BY I.PAY_INCP_SN
        ORDER BY I.PAY_INCP_SN DESC
    </select>

    <update id="updPayAppDetailStatus" parameterType="map">
        /*updPayAppDetailStatus*/
        UPDATE
            CAM_MNG.DJ_PAY_APP_DET
        SET
            EXNP_STAT = "Y",
            EXNP_SAVE = "Y"
        WHERE
            PAY_APP_DET_SN = #{item}
    </update>

    <update id="resolutionExnpStatus" parameterType="map">
        /*resolutionExnpStatus*/
        UPDATE
            CAM_MNG.DJ_EXNP
        SET
            RE_STAT = "Y"
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="resolutionIncpAppr" parameterType="map">
        /*resolutionIncpAppr*/
        UPDATE
            CAM_MNG.DJ_PAY_INCP
        SET
            RE_STAT = "Y"
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updPayAttDetData" parameterType="map">
        /* updPayAttDetData */
        UPDATE
            CAM_MNG.DJ_PAY_APP_DET
        SET
            ${column} = #{value}
        WHERE
            PAY_APP_DET_SN = #{payDestSn}
    </update>

    <update id="updExnpAttDetData" parameterType="map">
        /* updExnpAttDetData */
        UPDATE
            CAM_MNG.DJ_EXNP_DET
        SET
            ${column} = #{value}
        WHERE
            EXNP_DET_SN = #{exnpDestSn}
    </update>

    <select id="getPayAttInfo" parameterType="map" resultType="map">
        /* getPayAttInfo */
        SELECT
            IFNULL(FI.FILE_NO, '') AS FILE1_NO,
            CONCAT(FI.FILE_ORG_NAME, '.', FI.FILE_EXT) AS FILE1_NAME,
            CONCAT(FI.FILE_PATH, FI.FILE_UUID) AS FILE1_PATH,

            IFNULL(FI2.FILE_NO, '') AS FILE2_NO,
            CONCAT(FI2.FILE_ORG_NAME, '.', FI2.FILE_EXT) AS FILE2_NAME,
            CONCAT(FI2.FILE_PATH, FI2.FILE_UUID) AS FILE2_PATH,

            IFNULL(FI3.FILE_NO, '') AS FILE3_NO,
            CONCAT(FI3.FILE_ORG_NAME, '.', FI3.FILE_EXT) AS FILE3_NAME,
            CONCAT(FI3.FILE_PATH, FI3.FILE_UUID) AS FILE3_PATH,

            IFNULL(FI4.FILE_NO, '') AS FILE4_NO,
            CONCAT(FI4.FILE_ORG_NAME, '.', FI4.FILE_EXT) AS FILE4_NAME,
            CONCAT(FI4.FILE_PATH, FI4.FILE_UUID) AS FILE4_PATH,

            IFNULL(FI5.FILE_NO, '') AS FILE5_NO,
            CONCAT(FI5.FILE_ORG_NAME, '.', FI5.FILE_EXT) AS FILE5_NAME,
            CONCAT(FI5.FILE_PATH, FI5.FILE_UUID) AS FILE5_PATH,

            IFNULL(FI6.FILE_NO, '') AS FILE6_NO,
            CONCAT(FI6.FILE_ORG_NAME, '.', FI6.FILE_EXT) AS FILE6_NAME,
            CONCAT(FI6.FILE_PATH, FI6.FILE_UUID) AS FILE6_PATH,

            IFNULL(FI7.FILE_NO, '') AS FILE7_NO,
            CONCAT(FI7.FILE_ORG_NAME, '.', FI7.FILE_EXT) AS FILE7_NAME,
            CONCAT(FI7.FILE_PATH, FI7.FILE_UUID) AS FILE7_PATH,

            IFNULL(FI8.FILE_NO, '') AS FILE8_NO,
            CONCAT(FI8.FILE_ORG_NAME, '.', FI8.FILE_EXT) AS FILE8_NAME,
            CONCAT(FI8.FILE_PATH, FI8.FILE_UUID) AS FILE8_PATH,

            IFNULL(FI9.FILE_NO, '') AS FILE9_NO,
            CONCAT(FI9.FILE_ORG_NAME, '.', FI9.FILE_EXT) AS FILE9_NAME,
            CONCAT(FI9.FILE_PATH, FI9.FILE_UUID) AS FILE9_PATH,

            IFNULL(FI10.FILE_NO, '') AS FILE10_NO,
            CONCAT(FI10.FILE_ORG_NAME, '.', FI10.FILE_EXT) AS FILE10_NAME,
            CONCAT(FI10.FILE_PATH, FI10.FILE_UUID) AS FILE10_PATH
        FROM
            CAM_MNG.DJ_PAY_APP_DET PA
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI ON PA.FILE1 = FI.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI2 ON PA.FILE2 = FI2.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI3 ON PA.FILE3 = FI3.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI4 ON PA.FILE4 = FI4.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI5 ON PA.FILE4 = FI5.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI6 ON PA.FILE6 = FI6.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI7 ON PA.FILE6 = FI7.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI8 ON PA.FILE6 = FI8.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI9 ON PA.FILE6 = FI9.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI10 ON PA.FILE6 = FI10.FILE_NO
        WHERE
            PAY_APP_DET_SN = #{payDestSn}
    </select>

    <select id="getPayAttEtcInfo" parameterType="map" resultType="map">
        /* getPayAttEtcInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
        ORDER BY REG_DATE DESC
    </select>

    <select id="getPayAttList" parameterType="map" resultType="map">
        /* getPayAttList */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO IN (${fileText})
        ORDER BY REG_DATE DESC
    </select>

    <select id="getExnpAttInfo" parameterType="map" resultType="map">
        /* getExnpAttInfo */
        SELECT
            IFNULL(FI.FILE_NO, '') AS FILE1_NO,
            CONCAT(FI.FILE_ORG_NAME, '.', FI.FILE_EXT) AS FILE1_NAME,
            CONCAT(FI.FILE_PATH, FI.FILE_UUID) AS FILE1_PATH,

            IFNULL(FI2.FILE_NO, '') AS FILE2_NO,
            CONCAT(FI2.FILE_ORG_NAME, '.', FI2.FILE_EXT) AS FILE2_NAME,
            CONCAT(FI2.FILE_PATH, FI2.FILE_UUID) AS FILE2_PATH,

            IFNULL(FI3.FILE_NO, '') AS FILE3_NO,
            CONCAT(FI3.FILE_ORG_NAME, '.', FI3.FILE_EXT) AS FILE3_NAME,
            CONCAT(FI3.FILE_PATH, FI3.FILE_UUID) AS FILE3_PATH,

            IFNULL(FI4.FILE_NO, '') AS FILE4_NO,
            CONCAT(FI4.FILE_ORG_NAME, '.', FI4.FILE_EXT) AS FILE4_NAME,
            CONCAT(FI4.FILE_PATH, FI4.FILE_UUID) AS FILE4_PATH,

            IFNULL(FI5.FILE_NO, '') AS FILE5_NO,
            CONCAT(FI5.FILE_ORG_NAME, '.', FI5.FILE_EXT) AS FILE5_NAME,
            CONCAT(FI5.FILE_PATH, FI5.FILE_UUID) AS FILE5_PATH,

            IFNULL(FI6.FILE_NO, '') AS FILE6_NO,
            CONCAT(FI6.FILE_ORG_NAME, '.', FI6.FILE_EXT) AS FILE6_NAME,
            CONCAT(FI6.FILE_PATH, FI6.FILE_UUID) AS FILE6_PATH,

            IFNULL(FI7.FILE_NO, '') AS FILE7_NO,
            CONCAT(FI7.FILE_ORG_NAME, '.', FI7.FILE_EXT) AS FILE7_NAME,
            CONCAT(FI7.FILE_PATH, FI7.FILE_UUID) AS FILE7_PATH,

            IFNULL(FI8.FILE_NO, '') AS FILE8_NO,
            CONCAT(FI8.FILE_ORG_NAME, '.', FI8.FILE_EXT) AS FILE8_NAME,
            CONCAT(FI8.FILE_PATH, FI8.FILE_UUID) AS FILE8_PATH,

            IFNULL(FI9.FILE_NO, '') AS FILE9_NO,
            CONCAT(FI9.FILE_ORG_NAME, '.', FI9.FILE_EXT) AS FILE9_NAME,
            CONCAT(FI9.FILE_PATH, FI9.FILE_UUID) AS FILE9_PATH,

            IFNULL(FI10.FILE_NO, '') AS FILE10_NO,
            CONCAT(FI10.FILE_ORG_NAME, '.', FI10.FILE_EXT) AS FILE10_NAME,
            CONCAT(FI10.FILE_PATH, FI10.FILE_UUID) AS FILE10_PATH
        FROM
            CAM_MNG.DJ_EXNP_DET PA
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI ON PA.FILE1 = FI.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI2 ON PA.FILE2 = FI2.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI3 ON PA.FILE3 = FI3.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI4 ON PA.FILE4 = FI4.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI5 ON PA.FILE4 = FI5.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI6 ON PA.FILE6 = FI6.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI7 ON PA.FILE6 = FI7.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI8 ON PA.FILE6 = FI8.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI9 ON PA.FILE6 = FI9.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI10 ON PA.FILE6 = FI10.FILE_NO
        WHERE
            EXNP_DET_SN = #{exnpDestSn}
    </select>

    <select id="getExnpAttEtcInfo" parameterType="map" resultType="map">
        /* getExnpAttEtcInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
        ORDER BY REG_DATE DESC
    </select>

    <insert id="insPayIncpData" parameterType="map">
        /*insPayIncpData*/
        INSERT CAM_MNG.DJ_PAY_INCP
        (
            PJT_NM,
            PJT_SN,
            BUDGET_NM,
            BUDGET_SN,
            BUSN_CD,
            BUSN_EX_CD,
            EXNP_EMP_SEQ,
            G20_EMP_CD,
            G20_DEPT_CD,
            APP_DE,
            PAY_EXNP_DE,
            APP_CONT,
            BNK_SN,
            BNK_NM,
            ACC_NO,
            ACC_NM,
            PAY_APP_STAT,
            GUBUN,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtNm},
            #{pjtSn},
            #{budgetNm},
            #{budgetSn},
            #{busnCd},
            #{busnExCd},
            #{exnpEmpSeq},
            #{g20EmpCd},
            #{g20DeptCd},
            #{appDe},
            #{payExnpDe},
            #{appCont},
            #{bnkSn},
            #{bnkNm},
            #{accNo},
            #{accNm},
            #{payAppStat},
            'W',
            #{regEmpSeq}
        )
        <selectKey keyProperty="payIncpSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_INCP'
        </selectKey>
    </insert>

    <update id="updPayIncpData" parameterType="map">
        /*updPayIncpData*/
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            APP_DE = #{appDe},
            APP_CONT = #{appCont},
            BUDGET_SN = #{budgetSn},
            BUDGET_NM = #{budgetNm},
            BUSN_CD = #{busnCd},
            BUSN_EX_CD = #{busnExCd},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            PAY_APP_STAT = #{payAppStat},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <insert id="insPayIncpDetailData" parameterType="map">
        /*insPayIncpDetailData*/
        INSERT CAM_MNG.DJ_PAY_INCP_DET
        (
            PAY_INCP_SN,
            EVID_TYPE,
            TR_CD,
            CRM_NM,
            TR_DE,
            TOT_COST,
            SUP_COST,
            VAT_COST,
            CARD,
            CARD_NO,
            ETC,
            ISS
        )
        VALUES
        (
            #{payIncpSn},
            #{evidType},
            #{trCd},
            #{crmNm},
            #{trDe},
            #{totCost},
            #{supCost},
            #{vatCost},
            #{card},
            #{cardNo},
            #{etc},
            #{iss}
        )
    </insert>

    <delete id="delPayIncpDetailData" parameterType="map">
        /*delPayIncpDetailData*/
        DELETE FROM CAM_MNG.DJ_PAY_INCP_DET
        WHERE PAY_INCP_SN = #{payIncpSn}
    </delete>

    <select id="getPayIncpReqData" parameterType="map" resultType="map">
        /*getPayIncpReqData*/
        SELECT A.*, B.DOC_NO, B.APPRO_KEY, B.DOC_MENU_CD, HEI.EMP_NAME_KR AS REG_EMP_NAME, HEI.DEPT_NAME AS REG_DEPT_NAME
        FROM CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B
        ON
           A.DOC_ID = B.DOC_ID
        LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON A.REG_EMP_SEQ = HEI.EMP_SEQ
        WHERE PAY_INCP_SN = #{payIncpSn}
    </select>

    <select id="getPayIncpDetailData" parameterType="map" resultType="map">
        /*getPayIncpDetailData*/
        SELECT A.*, FORMAT(A.TOT_COST,0) AS TOT_COST_COMMA
        FROM CAM_MNG.DJ_PAY_INCP_DET A

        WHERE A.PAY_INCP_SN = #{payIncpSn}
    </select>

    <select id="getIncpData" parameterType="map" resultType="map">
        /*getIncpData*/
        SELECT
            A.*,
            B.EMP_SEQ,
            B.ERP_EMP_SEQ,
            B.EMP_NAME_KR,
            B.DEPT_SEQ,
            B.DEPT_NAME,
            C.DOC_NO
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.EXNP_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO C
        ON
            A.DOC_ID = C.DOC_ID
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </select>

    <select id="getIncpG20List" parameterType="map" resultType="map">
        /*getIncpG20List*/
        SELECT
            1212 AS CO_CD,
            A.PAY_INCP_DET_SN,
            A.PAY_INCP_SN,
            A.EVID_TYPE,
            A.TR_CD,
            B.BUDGET_SN AS BGT_CD,
            REPLACE(A.TR_DE, "-", "") AS IN_DT,
            REPLACE(A.TR_DE, "-", "") AS TAX_DT,
            REPLACE(B.APP_DE, "-", "") AS REG_DT,
            REPLACE(B.PAY_EXNP_DE, "-", "") AS EXEC_DT,
            DATE_FORMAT(now(), '%Y%m%d') AS TXT_DONE_DT,
            "" AS RPMR_NO,
            A.TR_DE AS CNT_DT,
            "" AS DUMMY1,
            "" AS DUMMY2,
            "" AS DUMMY3,
            B.BUSN_CD AS DIV_CD,
            B.BUSN_CD AS DIV_CD2,
            B.G20_DEPT_CD AS DEPT_CD,
            B.G20_EMP_CD AS EMP_CD,
            C.PJT_CD AS MGT_CD,
            "" AS BOTTOM_CD,
            "5" AS DOCU_FG,
            B.APP_CONT AS RMK_DC,
            B.ACC_NM AS BANK_NM1,
            B.ACC_NO AS BA_NB1,
            A.EVID_TYPE,
            A.ETC,
            A.SUP_COST AS SUP_AM,
            A.VAT_COST AS VAT_AM,
            A.CRM_NM AS TR_NM,
            A.CRM_BNK_NM AS BANK_NM2,
            A.CRM_ACC_NO AS BA_NB2,
            A.CRM_ACC_HOLDER AS DEPOSITOR,
            A.CARD AS CTR_NM,
            A.CARD_NO AS CTR_NB,
            "" AS ETCDATA_CD,
            "" AS ETCPER_CD,
            "" AS ETCREG_NO,
            "" AS ETCPER_NM,
            "" AS ETCZIP_CD,
            "" AS ETCADDR,
            "" AS ETCPHONE,
            "" AS ETCBANK_CD,
            "" AS ETCACCT_NO,
            "" AS ETCACCT_NM,
            "" AS ETCRVRS_YM,
            "" AS ETCDIV_CD,
            "" AS ETCDUMMY1
        FROM
            CAM_MNG.DJ_PAY_INCP_DET A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            B.PJT_SN = C.PJT_SN
        WHERE
            A.PAY_INCP_SN = #{payIncpSn}
        <if test='evidTypeArr != null and !"".equals(evidTypeArr)'>
            AND
                A.EVID_TYPE in (${evidTypeArr})
        </if>
    </select>

    <select id="getPayAppDetailInfo" parameterType="map" resultType="map">
        /*getPayAppDetailInfo*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_APP_DET
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </select>

    <select id="getPartRatePay" parameterType="map" resultType="map">
        /*getPartRatePay*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PART_RATE_DET A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO C
        ON
            A.PART_EMP_SEQ = C.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        WHERE
            A.PJT_SN = #{pjtSn}
          AND
            #{bsYm} BETWEEN DATE_FORMAT(A.PART_DET_STR_DT, '%Y-%m') AND DATE_FORMAT(A.PART_DET_END_DT, '%Y-%m')
    </select>

    <select id="getDepositList" parameterType="map" resultType="map">
        /*getDepositList*/
        SELECT
            A.*,
            B.PJT_NM,
            B.DOC_ID,
            B.DOC_STATUS,
            B.PAY_EXNP_DE
        FROM
            CAM_MNG.DJ_PAY_DEPO A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            1=1
        <if test='docStatus != null and !"".equals(docStatus)'>
            AND
                A.DOC_STATUS = #{docStatus}
        </if>
        AND
            A.APPR_STAT = 'Y'
        ORDER BY PAY_DEPO_SN DESC
    </select>

    <insert id="insPayDepo" parameterType="map">
        /*insPayDepo*/
        INSERT INTO CAM_MNG.DJ_PAY_DEPO
            (
                APP_DE,
                PAY_INCP_DE,
                PJT_NM,
                PJT_SN,
                AFT_PJT_SN,
                AFT_PJT_NM,
                BUDGET_NM,
                BUDGET_SN,
                DEPO_TITLE,
                DEPO_CONT,
                BNK_SN,
                BNK_NM,
                ACC_NM,
                ACC_NO,
                DEPO_AMT,
                GUBUN,
                DEPO_STAT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{appDe},
                #{payIncpDe},
                #{pjtNm},
                #{pjtSn},
                #{aftPjtSn},
                #{aftPjtNm},
                #{budgetNm},
                #{budgetSn},
                #{depoTitle},
                #{depoCont},
                #{bnkSn},
                #{bnkNm},
                #{accNm},
                #{accNo},
                #{depoAmt},
                #{gubun},
                #{depoStat},
                #{regEmpSeq}
            )
        <selectKey keyProperty="payDepoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_DEPO'
        </selectKey>
    </insert>

    <update id="updPayDepo" parameterType="map">
        /*updPayDepo*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            APP_DE = #{appDe},
            PAY_INCP_DE = #{payIncpDe},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            AFT_PJT_SN = #{aftPjtSn},
            AFT_PJT_NM = #{aftPjtNm},
            BUDGET_NM = #{budgetNm},
            BUDGET_SN = #{budgetSn},
            DEPO_TITLE = #{depoTitle},
            DEPO_CONT = #{depoCont},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NM = #{accNm},
            ACC_NO = #{accNo},
            DEPO_AMT = #{depoAmt},
            GUBUN = #{gubun},
            DEPO_STAT = #{depoStat},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <select id="getPayDepoData" parameterType="map" resultType="map">
        /*getPayDepoData*/
        SELECT
            A.*,
            B.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS DEPO_EMP_NAME
        FROM
            CAM_MNG.DJ_PAY_DEPO A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </select>

    <update id="updPayDepoData" parameterType="map">
        /*updPayDepoData*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            PAY_INCP_SN = #{payIncpSn}
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <update id="updPurcClaimByPayAppSn" parameterType="map">
        /*updPurcClaimByPayAppSn*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            PAY_APP_SN = #{payAppSn}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updApprStatus" parameterType="map">
        /*updApprStatus*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            APPR_STAT = 'Y'
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <select id="getCheckBudget" parameterType="map" resultType="map">
        /*getCheckBudget*/
        SELECT
            SUM(TOT_COST) AS TOT_COST,
            BUDGET_SN,
            BUDGET_AMT
        FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = #{payAppSn} GROUP BY BUDGET_SN
    </select>
</mapper>