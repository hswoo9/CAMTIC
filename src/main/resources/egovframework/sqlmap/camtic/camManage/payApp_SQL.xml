<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="payApp">

    <insert id="insPayAppData" parameterType="map">
        /*insPayAppData*/
        INSERT CAM_MNG.DJ_PAY_APP
            (
                PAY_APP_TYPE,
                PJT_NM,
                PJT_SN,
                PJT_CD,
                BUDGET_NM,
                BUDGET_SN,
                APP_DE,
                REQ_DE,
                PAY_EXNP_DE,
                APP_TITLE,
                APP_CONT,
                BNK_SN,
                BNK_NM,
                ACC_NO,
                ACC_NM,
                PAY_APP_STAT,
                GUBUN,
                ADVANCES,
            <if test='linkKey != null and !"".equals(linkKey)'>
                LINK_KEY,
                LINK_KEY_TYPE,
            </if>
                REG_EMP_SEQ,
                EXNP_ISS
            )
        VALUES
            (
                #{payAppType},
                #{pjtNm},
                #{pjtSn},
                #{pjtCd},
                #{budgetNm},
                #{budgetSn},
                #{appDe},
                #{reqDe},
                #{payExnpDe},
                #{appTitle},
                #{appCont},
                #{bnkSn},
                #{bnkNm},
                #{accNo},
                #{accNm},
                #{payAppStat},
                'W',
                #{advances},
            <if test='linkKey != null and !"".equals(linkKey)'>
                #{linkKey},
                #{linkKeyType},
            </if>
                #{regEmpSeq},
                #{exnpIss}
            )
        <selectKey keyProperty="payAppSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_APP'
        </selectKey>
    </insert>

    <insert id="insExnpData" parameterType="map">
        /*insExnpData*/
        INSERT CAM_MNG.DJ_EXNP
            (
                PAY_APP_SN,
                PAY_APP_DET_SN,
                PAY_APP_TYPE,
                PJT_NM,
                PJT_SN,
                PJT_CD,
                EXNP_DE,
                EXNP_EMP_SEQ,
                G20_EMP_CD,
                G20_DEPT_CD,
                EXNP_BRIEFS,
                ADD_EXNP_BRIEFS,
                BUSN_CD,
                BNK_SN,
                BNK_NM,
                ACC_NO,
                ACC_NM,
                GUBUN,
                DT1,
                DT2,
                DT3,
                DT_CK,
                LINK_KEY,
                LINK_KEY_TYPE,
                REQ_DE,
                REQ_EXNP_DE,
                REQ_END_DE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{payAppSn},
                #{payAppDetSn},
                #{payAppType},
                #{pjtNm},
                #{pjtSn},
                #{pjtCd},
                #{exnpDe},
                #{exnpEmpSeq},
                #{g20EmpCd},
                #{g20DeptCd},
                #{exnpBriefs},
                #{addExnpBriefs},
                #{busnCd},
                #{bnkSn},
                #{bnkNm},
                #{accNo},
                #{accNm},
                'W',
                #{DT1},
                #{DT2},
                #{DT3},
                'N',
                (SELECT LINK_KEY FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = #{payAppSn}),
                (SELECT LINK_KEY_TYPE FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = #{payAppSn}),
                #{reqDe},
                #{reqExDe},
                #{reqEndDe},
                #{regEmpSeq}
            )
        <selectKey keyProperty="exnpSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_EXNP'
        </selectKey>
    </insert>

    <update id="updPayAppData" parameterType="map">
        /*updPayAppData*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            PAY_APP_TYPE = #{payAppType},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            APP_DE = #{appDe},
            REQ_DE = #{reqDe},
            PAY_EXNP_DE = #{payExnpDe},
            APP_TITLE = #{appTitle},
            APP_CONT = #{appCont},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            PAY_APP_STAT = #{payAppStat},
            ADVANCES = #{advances},
            REVERT_YN = 'N',
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq},
            EXNP_ISS = #{exnpIss}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updExnpData" parameterType="map">
        /*updExnpData*/
        UPDATE
            CAM_MNG.DJ_EXNP
        SET
            PAY_APP_SN = #{payAppSn},
            PAY_APP_TYPE = #{payAppType},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            EXNP_DE = #{exnpDe},
            EXNP_EMP_SEQ = #{exnpEmpSeq},
            G20_EMP_CD = #{g20EmpCd},
            G20_DEPT_CD = #{g20DeptCd},
            EXNP_BRIEFS = #{exnpBriefs},
            ADD_EXNP_BRIEFS = #{addExnpBriefs},
            BUSN_CD = #{busnCd},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            DT1 = #{DT1},
            DT2 = #{DT2},
            DT3 = #{DT3},
            DT_CK = 'Y',
            REQ_DE = #{reqDe},
            REQ_EXNP_DE = #{reqExDe},
            REQ_END_DE = #{reqEndDe},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>


    <select id="getPayAppReqData" parameterType="map" resultType="map">
        /*getPayAppReqData*/
        SELECT A.*, B.DOC_NO, DATE_FORMAT(A.REG_DT, '%Y년 %m월 %d일') AS REG_DATE, P.PJT_CD,
               IFNULL((SELECT SPCS.DIV_CD FROM CAM_MNG.DJ_PROJECT_CODE_SET SPCS WHERE SPCS.IS_CODE = LEFT(P.PJT_CD, 1)), '') AS DIV_CD
        FROM CAM_MNG.DJ_PAY_APP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B ON A.DOC_ID = B.DOC_ID
        LEFT JOIN
             CAM_PJT_MNG.DJ_PROJECT P ON A.PJT_SN = P.PJT_SN
        WHERE PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getPayAppFinalData" parameterType="map" resultType="map">
        /*getPayAppFinalData*/
        SELECT A.*, B.DOC_NO
        FROM CAM_MNG.DJ_PAY_APP A
                 LEFT JOIN
             DJ_CAMTIC.A_DOC_INFO B
             ON
                 A.DOC_ID = B.DOC_ID
        WHERE A.PAY_APP_SN = #{payAppSn} AND A.DOC_STATUS = 100
    </select>

    <insert id="insPayAppDetailData" parameterType="map">
        /*insPayAppDetailData*/
        INSERT CAM_MNG.DJ_PAY_APP_DET
            (
                PAY_APP_SN,
                BUDGET_NM,
                BUDGET_SN,
                BUDGET_AMT,
                TEAM_SEQ,
                TEAM_NAME,
                EVID_TYPE,
                REASON,
                <if test='fileNo != null and !"".equals(fileNo)'>
                    FILE_NO,
                </if>
                ISS_NO,
                CO_CD,
                TAX_TY,
                AUTH_NO,
                AUTH_HH,
                AUTH_DD,
                TR_CD,
                REG_NO,
                CRM_NM,
                CRM_BNK_NM,
                CRM_ACC_NO,
                CRM_ACC_HOLDER,
                TR_DE,
                TOT_COST,
                SUP_COST,
                VAT_COST,
                CARD,
                CARD_NO,
                BUY_STS,
                ETC,
                ISS,
                <if test='!"".equals(payAmt)'>
                    PAY_AMT,
                </if>
                <if test='costStat != null and !"".equals(costStat)'>
                    COST_STAT,
                </if>
                ADVANCES
            )
        VALUES
            (
                #{payAppSn},
                #{budgetNm},
                #{budgetSn},
                #{budgetAmt},
                #{teamSeq},
                #{teamName},
                #{evidType},
                #{reason},
                <if test='fileNo != null and !"".equals(fileNo)'>
                    #{fileNo},
                </if>
                #{issNo},
                #{coCd},
                #{taxTy},
                #{authNo},
                #{authHh},
                #{authDd},
                #{trCd},
                #{regNo},
                #{crmNm},
                #{crmBnkNm},
                #{crmAccNo},
                #{crmAccHolder},
                #{trDe},
                #{totCost},
                #{supCost},
                #{vatCost},
                #{card},
                #{cardNo},
                #{buySts},
                #{etc},
                #{iss},
                <if test='!"".equals(payAmt)'>
                    #{payAmt},
                </if>
                <if test='costStat != null and !"".equals(costStat)'>
                    #{costStat},
                </if>
                #{advances}
            )
        <selectKey keyProperty="payAppDetSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_APP_DET'
        </selectKey>
    </insert>

    <insert id="insPayRate" parameterType="map">
        /*insPayRate*/
        INSERT INTO CAM_MNG.DJ_PAY_RATE
            (
                PAY_APP_DET_SN,
                EXP_RATE,
                TAX_RATE,
                PAY_AMT,
                INC_TAX,
                LOC_INC_TAX,
                SUB_AMT,
                ACT_PAY_AMT
            )
        VALUES
            (
                #{payAppDetSn},
                #{expRate},
                #{taxRate},
                #{payAmt},
                #{incTax},
                #{locIncTax},
                #{subAmt},
                #{actPayAmt}
            )
    </insert>

    <insert id="insExnpDetailData" parameterType="map">
        /*insExnpDetailData*/
        INSERT CAM_MNG.DJ_EXNP_DET
            (
                EXNP_SN,
                BUDGET_SN,
                BUDGET_NM,
                EVID_TYPE,
                FILE_NO,
                TEAM_SEQ,
                TEAM_NAME,
                AUTH_NO,
                AUTH_DD,
                AUTH_HH,
                BUY_STS,
                TR_CD,
                CRM_NM,
                CRM_BNK_NM,
                REG_NO,
                CRM_ACC_NO,
                CRM_ACC_HOLDER,
                TR_DE,
                TOT_COST,
                SUP_COST,
                VAT_COST,
                CARD,
                CARD_NO,
                ETC,
                ISS,
                FILE1,
                FILE2,
                FILE3,
                FILE4,
                FILE5,
                FILE6,
                FILE7,
                FILE8,
                FILE9,
                FILE10,
                ADVANCES,
                BUSN_CD
            )
        VALUES
            (
                #{exnpSn},
                #{budgetSn},
                #{budgetNm},
                #{evidType},
                #{fileNo},
                #{teamSeq},
                #{teamName},
                #{authNo},
                #{authDd},
                #{authHh},
                #{buySts},
                #{trCd},
                #{crmNm},
                #{crmBnkNm},
                #{regNo},
                #{crmAccNo},
                #{crmAccHolder},
                #{trDe},
                #{totCost},
                #{supCost},
                #{vatCost},
                #{card},
                #{cardNo},
                #{etc},
                #{iss},
                (SELECT FILE1 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE2 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE3 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE4 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE5 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE6 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE7 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE8 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE9 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                (SELECT FILE10 FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_DET_SN = #{payDestSn}),
                #{advances},
                #{busnCd}
            )
    </insert>

    <delete id="delPayAppDetailData" parameterType="map">
        /*delPayAppDetailData*/
        DELETE FROM CAM_MNG.DJ_PAY_APP_DET
        WHERE PAY_APP_SN = #{payAppSn}
    </delete>

    <delete id="delExnpDetailData" parameterType="map">
        /*delExnpDetailData*/
        DELETE FROM CAM_MNG.DJ_EXNP_DET
        WHERE EXNP_SN = #{exnpSn}
    </delete>

    <select id="getPayAppDetailData" parameterType="map" resultType="map">
        /*getPayAppDetailData*/
        SELECT PAD.*, FORMAT(TOT_COST , 0) AS TOT_COST_COMMA
        FROM CAM_MNG.DJ_PAY_APP_DET PAD
        WHERE PAD.PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getPayAppDetailDataDupl" parameterType="map" resultType="map">
        /*getPayAppDetailDataDupl*/
        SELECT PAD.*, FORMAT(SUM(TOT_COST) , 0) AS TOT_COST_COMMA, SUM(TOT_COST) AS TOT_SUM
        FROM CAM_MNG.DJ_PAY_APP_DET PAD
        WHERE PAD.PAY_APP_SN = #{payAppSn}
        GROUP BY BUDGET_SN, TR_CD, CRM_NM, CRM_ACC_HOLDER, CRM_ACC_NO, REASON
    </select>

    <select id="getPaymentList" parameterType="map" resultType="map">
        /*getPaymentList*/
        SELECT AA.* FROM (
            SELECT
                A.*,
                B.DOC_NO,
                C.TOT_COST,
                IFNULL(E.EXNP_TOT_COST,0) AS EXNP_TOT_COST,
                C.ITEM_COUNT,
                C.CRM_NM,
                -- (SELECT REQ_END_DE FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS REQ_END_DE,
                -- (SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS RE_STAT,
                E.REQ_END_DE,
                E.RE_STAT,
                D.EXNP_STATUS,
                IFNULL(E.EXNP_DOC_STATUS, 0) AS EXNP_DOC_STATUS,
                -- (SELECT DOC_STATUS FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS EXNP_DOC_STATUS2,
                E.DOC_STATUS AS EXNP_DOC_STATUS2,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO HR WHERE HR.EMP_SEQ = A.REG_EMP_SEQ) AS EMP_NAME,
                E.DT3 AS R_DT
            FROM
                CAM_MNG.DJ_PAY_APP A

            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO B
            ON
                A.DOC_ID = B.DOC_ID

            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    SUM(TOT_COST) AS TOT_COST,
                    GROUP_CONCAT(PAY_APP_DET_SN) AS PAY_APP_DET_SN,
                    GROUP_CONCAT(CRM_NM) AS CRM_NM,
                    COUNT(*) AS ITEM_COUNT
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE TOT_COST != 0
                GROUP BY PAY_APP_SN) C
            ON
                A.PAY_APP_SN = C.PAY_APP_SN

            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    EVID_TYPE,
                    COUNT(*) AS EXNP_STATUS
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE EXNP_SAVE = 'Y'
                GROUP BY PAY_APP_SN ) D
            ON
                A.PAY_APP_SN = D.PAY_APP_SN

            LEFT JOIN
                (SELECT
                    Y.PAY_APP_SN, Y.PAY_APP_DET_SN, Y.EXNP_SN,
                    Y.DT1, Y.DT3,
                    COUNT(*) AS EXNP_DOC_STATUS,
                    SUM(X.TOT_COST) AS EXNP_TOT_COST,
                    Y.REQ_END_DE, Y.RE_STAT, Y.DOC_STATUS
                FROM CAM_MNG.DJ_EXNP_DET X LEFT JOIN CAM_MNG.DJ_EXNP Y ON X.EXNP_SN = Y.EXNP_SN
                WHERE Y.REQ_END_DE IS NOT NULL AND Y.REQ_END_DE != ""
                GROUP BY Y.EXNP_SN ORDER BY Y.EXNP_SN DESC ) E
            ON
                A.PAY_APP_SN = E.PAY_APP_SN AND C.PAY_APP_DET_SN LIKE CONCAT('%', E.PAY_APP_DET_SN,'%')

            WHERE
                1=1
            <if test='payAppType == "1" or "1".equals(payAppType)'>
                AND PAY_APP_TYPE = 1
            </if>
            <if test='payAppType == "2" or "2".equals(payAppType)'>
                AND PAY_APP_TYPE = 2
            </if>
            <if test='payAppType == "3" or "3".equals(payAppType)'>
                AND PAY_APP_TYPE = 3
            </if>
            <if test='payAppType == "4" or "4".equals(payAppType)'>
                AND PAY_APP_TYPE = 4
            </if>
            <if test='pjtCd != null and !"".equals(pjtCd)'>
                AND A.PJT_CD = #{pjtCd}
            </if>
            <if test='regEmpSeq != null and !"".equals(regEmpSeq)'>
                AND A.REG_EMP_SEQ = #{regEmpSeq}
            </if>

        ) AA
        WHERE
            1=1

            <choose>
                <when test='"2".equals(searchDate)'>
                    AND AA.REQ_DE BETWEEN #{strDe} AND #{endDe}
                </when>
                <when test='"3".equals(searchDate)'>
                    AND AA.PAY_EXNP_DE BETWEEN #{strDe} AND #{endDe}
                </when>
                <when test='"4".equals(searchDate)'>
                    AND AA.REQ_END_DE BETWEEN #{strDe} AND #{endDe}

                    AND AA.DOC_STATUS IN (100,101)
                    AND (
                        AA.ITEM_COUNT = AA.EXNP_DOC_STATUS
                        AND AA.EXNP_STATUS = AA.EXNP_DOC_STATUS
                        AND AA.RE_STAT = 'Y'
                    )
                    AND AA.EXNP_STATUS IS NOT NULL
                </when>
                <otherwise>
                    AND AA.APP_DE BETWEEN #{strDe} AND #{endDe}
                </otherwise>
            </choose>

            <if test='pageType != "USER" and !"USER".equals(pageType)'>
                AND
                    ITEM_COUNT != IFNULL(EXNP_STATUS, 0)
            </if>
            <if test='"1".equals(searchDept)'>
                AND AA.DOC_STATUS IN (0,30,40)
            </if>
            <if test='"2".equals(searchDept)'>
                AND AA.DOC_STATUS IN (10,20,50)
            </if>
            <if test='"3".equals(searchDept)'>
                AND AA.DOC_STATUS IN (100,101)
                AND AA.EXNP_STATUS IS NULL
            </if>
            <if test='"4".equals(searchDept)'>
                AND AA.DOC_STATUS IN (100,101)
                AND (
                        AA.ITEM_COUNT = AA.EXNP_DOC_STATUS
                    AND AA.EXNP_STATUS = AA.EXNP_DOC_STATUS
                    AND AA.RE_STAT = 'Y'
                )
                AND AA.EXNP_STATUS IS NOT NULL
            </if>
            <if test='"5".equals(searchDept)'>
                AND AA.DOC_STATUS IN (100,101)
                AND (
                        AA.ITEM_COUNT != AA.EXNP_DOC_STATUS
                    OR AA.EXNP_STATUS != AA.EXNP_DOC_STATUS
                    OR AA.RE_STAT != 'Y'
                )
                AND AA.EXNP_STATUS IS NOT NULL
            </if>
            <if test='"9".equals(searchDept)'>
                AND AA.DOC_STATUS IN (100,101)
            </if>

            <choose>
                <when test='"A".equals(searchKeyword)'>
                    AND
                        AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"B".equals(searchKeyword)'>
                    AND
                        AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"C".equals(searchKeyword)'>
                    AND
                        AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"D".equals(searchKeyword)'>
                    AND
                        AA.CRM_NM REGEXP #{searchValue}
                </when>
                <when test='"E".equals(searchKeyword)'>
                    AND
                        AA.EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <otherwise>
                    AND
                        (
                            AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                            OR AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%')
                            OR AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                            OR AA.CRM_NM REGEXP #{searchValue}
                            OR AA.EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
                        )
                </otherwise>
            </choose>
        ORDER BY AA.PAY_APP_SN DESC
    </select>

    <select id="getPaymentListForExcelDown" parameterType="map" resultType="map">
        /*getPaymentListForExcelDown*/
        SELECT AA.* FROM (
            SELECT
                A.PAY_APP_SN,
                B.DOC_STATUS,
                DI.DOC_NO,
                CASE
                    WHEN B.PAY_APP_TYPE = 1 THEN '지급신청서'
                    WHEN B.PAY_APP_TYPE = 2 THEN '여입신청서'
                    WHEN B.PAY_APP_TYPE = 3 THEN '반납신청서'
                    WHEN B.PAY_APP_TYPE = 4 THEN '대체신청서'
                END AS PAY_APP_TYPE,
                CASE
                    WHEN A.EVID_TYPE = 1 THEN '세금계산서'
                    WHEN A.EVID_TYPE = 2 THEN '계산서'
                    WHEN A.EVID_TYPE = 3 THEN '신용카드'
                    WHEN A.EVID_TYPE = 4 THEN '직원지급'
                    WHEN A.EVID_TYPE = 5 THEN '사업소득자'
                    WHEN A.EVID_TYPE = 6 THEN '기타'
                    WHEN A.EVID_TYPE = 9 THEN '기타소득자'
                END AS EVID_TYPE_TEXT,
                B.PJT_CD,
                B.PJT_NM,
                B.ACC_NM,
                B.ACC_NO,
                B.BNK_NM,
                SUBSTRING_INDEX(A.BUDGET_NM, ' / ', 1) AS BUDGET_NM_1,
                SUBSTRING_INDEX(SUBSTRING_INDEX(A.BUDGET_NM, ' / ', -2), ' / ', 1) AS BUDGET_NM_2,
                SUBSTRING_INDEX(A.BUDGET_NM, ' / ', -1) as BUDGET_NM_3,
                A.CRM_BNK_NM,
                A.CRM_ACC_NO,
                A.CRM_ACC_HOLDER,
                A.CRM_NM,
                B.APP_TITLE,
                A.TOT_COST,
                B.APP_DE,
                DATE_FORMAT(B.REG_DT,'%Y-%m-%d') AS REG_DT,
                B.REQ_DE,
                B.PAY_EXNP_DE,
                (SELECT REQ_END_DE FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS REQ_END_DE,
                (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = HEI.DEPT_SEQ) AS REG_DEPT_NAME,
                HEI.EMP_NAME_KR AS REG_EMP_NAME,
                C.ITEM_COUNT,
                (SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS RE_STAT,
                D.EXNP_STATUS,
                IFNULL(E.EXNP_DOC_STATUS, 0) AS EXNP_DOC_STATUS,
                (SELECT DOC_STATUS FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = B.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "" ORDER BY EXNP_SN DESC LIMIT 1) AS EXNP_DOC_STATUS2,
                E.DT3 AS R_DT
            FROM
                CAM_MNG.DJ_PAY_APP_DET A
            LEFT JOIN
                CAM_MNG.DJ_PAY_APP B ON A.PAY_APP_SN = B.PAY_APP_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI ON B.DOC_ID = DI.DOC_ID
            LEFT JOIN
                CAM_HR.DJ_EMP_INFO HEI ON B.REG_EMP_SEQ = HEI.EMP_SEQ
            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    COUNT(*) AS ITEM_COUNT
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE TOT_COST != 0
                GROUP BY PAY_APP_SN) C
            ON B.PAY_APP_SN = C.PAY_APP_SN
            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    COUNT(*) AS EXNP_STATUS
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE EXNP_SAVE = 'Y'
                GROUP BY PAY_APP_SN ) D
            ON A.PAY_APP_SN = D.PAY_APP_SN
            LEFT JOIN
                (SELECT
                    Y.PAY_APP_SN, Y.DT1, Y.DT3,
                    COUNT(*) AS EXNP_DOC_STATUS
                FROM CAM_MNG.DJ_EXNP_DET X LEFT JOIN CAM_MNG.DJ_EXNP Y ON X.EXNP_SN = Y.EXNP_SN
                WHERE Y.REQ_END_DE IS NOT NULL AND Y.REQ_END_DE != ""
                GROUP BY Y.PAY_APP_SN ) E
            ON A.PAY_APP_SN = E.PAY_APP_SN
            WHERE
            1=1
            <if test='payAppType == "1" or "1".equals(payAppType)'>
                AND B.PAY_APP_TYPE = 1
            </if>
            <if test='payAppType == "2" or "2".equals(payAppType)'>
                AND B.PAY_APP_TYPE = 2
            </if>
            <if test='payAppType == "3" or "3".equals(payAppType)'>
                AND B.PAY_APP_TYPE = 3
            </if>
            <if test='payAppType == "4" or "4".equals(payAppType)'>
                AND B.PAY_APP_TYPE = 4
            </if>
            <if test='pjtCd != null and !"".equals(pjtCd)'>
                AND B.PJT_CD = #{pjtCd}
            </if>
            <if test='regEmpSeq != null and !"".equals(regEmpSeq)'>
                AND B.REG_EMP_SEQ = #{regEmpSeq}
            </if>
        ) AA
        WHERE
            1=1
        <choose>
            <when test='"2".equals(searchDate)'>
                AND AA.REQ_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"3".equals(searchDate)'>
                AND AA.PAY_EXNP_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"4".equals(searchDate)'>
                AND AA.REQ_END_DE BETWEEN #{strDe} AND #{endDe}
                AND AA.DOC_STATUS IN (100,101)
                AND (
                    AA.ITEM_COUNT = AA.EXNP_DOC_STATUS AND
                    AA.EXNP_STATUS = AA.EXNP_DOC_STATUS AND
                    AA.RE_STAT = 'Y'
                )
                AND AA.EXNP_STATUS IS NOT NULL
            </when>
            <otherwise>
                AND AA.APP_DE BETWEEN #{strDe} AND #{endDe}
            </otherwise>
        </choose>

        <if test='pageType != "USER" and !"USER".equals(pageType)'>
            AND
                ITEM_COUNT != IFNULL(EXNP_STATUS, 0)
        </if>
        <if test='"1".equals(searchDept)'>
            AND AA.DOC_STATUS IN (0,30,40)
        </if>
        <if test='"2".equals(searchDept)'>
            AND AA.DOC_STATUS IN (10,20,50)
        </if>
        <if test='"3".equals(searchDept)'>
            AND AA.DOC_STATUS IN (100,101)
            AND AA.EXNP_STATUS IS NULL
        </if>
        <if test='"4".equals(searchDept)'>
            AND AA.DOC_STATUS IN (100,101)
            AND (
                AA.ITEM_COUNT = AA.EXNP_DOC_STATUS AND
                AA.EXNP_STATUS = AA.EXNP_DOC_STATUS AND
                AA.RE_STAT = 'Y'
            )
            AND AA.EXNP_STATUS IS NOT NULL
        </if>
        <if test='"5".equals(searchDept)'>
            AND AA.DOC_STATUS IN (100,101)
            AND (
                AA.ITEM_COUNT != AA.EXNP_DOC_STATUS OR
                AA.EXNP_STATUS != AA.EXNP_DOC_STATUS OR
                AA.RE_STAT != 'Y'
            )
            AND AA.EXNP_STATUS IS NOT NULL
        </if>
        <if test='"9".equals(searchDept)'>
            AND AA.DOC_STATUS IN (100,101)
        </if>

        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"B".equals(searchKeyword)'>
                AND AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"C".equals(searchKeyword)'>
                AND AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"D".equals(searchKeyword)'>
                AND AA.CRM_NM REGEXP #{searchValue}
            </when>
            <when test='"E".equals(searchKeyword)'>
                AND AA.REG_EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                    AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%') OR
                    AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%') OR
                    AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%') OR
                    AA.CRM_NM REGEXP #{searchValue} OR
                    AA.REG_EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
                )
            </otherwise>
        </choose>
        ORDER BY AA.PAY_APP_SN DESC
    </select>

    <select id="getWaitPaymentList" parameterType="map" resultType="map">
        /*getWaitPaymentList*/
        SELECT
            A.PJT_CD,
            A.PAY_APP_TYPE,
            A.REVERT_YN,
            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
            B.*,
            C.EXNP_SN,
            C.RE_STAT,
            C.DOC_STATUS
        FROM
            CAM_MNG.DJ_PAY_APP A
        LEFT JOIN
            CAM_MNG.DJ_PAY_APP_DET B ON A.PAY_APP_SN = B.PAY_APP_SN
        LEFT JOIN
            CAM_MNG.DJ_EXNP C ON C.PAY_APP_SN = B.PAY_APP_SN AND C.PAY_APP_DET_SN LIKE CONCAT('%', B.PAY_APP_DET_SN,'%')
        WHERE
           A.PJT_CD = #{mgtSeq}
        AND (
                A.DOC_STATUS IN (10, 50)
            OR
                (A.DOC_STATUS = 100 AND C.EXNP_SN IS NULL)
            OR
                (A.DOC_STATUS = 100 AND C.EXNP_SN IS NOT NULL AND C.RE_STAT != 'Y'
                )
            )
        AND
            B.BUDGET_SN IS NOT NULL
        GROUP BY
            B.PAY_APP_DET_SN
    </select>

    <update id="updatePayAppApprStat" parameterType="map">
        /* updatePayAppApprStat */
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updatePayAppFinalApprStat" parameterType="map">
        /* updatePayAppFinalApprStat */
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updateExnpApprStat" parameterType="map">
        /* updateExnpApprStat */
        UPDATE CAM_MNG.DJ_EXNP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="updateExnpFinalApprStat" parameterType="map">
        /* updateExnpFinalApprStat */
        UPDATE CAM_MNG.DJ_EXNP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="updateIncpApprStat" parameterType="map">
        /* updateIncpApprStat */
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updateIncpFinalApprStat" parameterType="map">
        /* updateIncpFinalApprStat */
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updPayAppDetStat" parameterType="map">
        /*updPayAppDetStat*/
        UPDATE CAM_MNG.DJ_PAY_APP_DET
        SET
            DET_STAT = 'N'
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </update>

    <update id="setPayAppCostApp" parameterType="map">
        /*setPayAppCostApp*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            COST_YN = 'Y'
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="setPayAppDetCostApp" parameterType="map">
        /*setPayAppDetCostApp*/
        UPDATE CAM_MNG.DJ_PAY_APP_DET
        SET
            COST_STAT = #{stat}
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </update>

    <select id="getExnpData" parameterType="map" resultType="map">
        /*getExnpData*/
        SELECT
            A.*,
            B.EMP_SEQ,
            B.ERP_EMP_SEQ,
            B.EMP_NAME_KR,
            B.DEPT_SEQ,
            B.DEPT_NAME,
            C.DOC_NO,
            (SELECT SEI.EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO SEI WHERE SEI.EMP_SEQ = A.REG_EMP_SEQ) AS REG_EMP_NAME,
            DATE_FORMAT(A.DT1, '%Y년 %m월 %d일') AS DATE1,
            DATE_FORMAT(A.DT2, '%Y년 %m월 %d일') AS DATE2,
            DATE_FORMAT(A.DT3, '%Y년 %m월 %d일') AS DATE3,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET SED WHERE SED.EXNP_SN = A.EXNP_SN), 0) AS TOT_COST
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.EXNP_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO C
        ON
            A.DOC_ID = C.DOC_ID
        WHERE
            EXNP_SN = #{exnpSn}
    </select>

    <select id="getExnpDetailData" parameterType="map" resultType="map">
        /*getExnpDetailData*/
        SELECT
            A.*
        FROM
            CAM_MNG.DJ_EXNP_DET A
        WHERE
            EXNP_SN = #{exnpSn}
    </select>

    <select id="getExnpDetailDataDupl" parameterType="map" resultType="map">
        /*getExnpDetailDataDupl*/
        SELECT
            A.*
        FROM
            CAM_MNG.DJ_EXNP_DET A
        WHERE
            EXNP_SN = #{exnpSn}
        GROUP BY TR_CD, CRM_NM
    </select>

    <select id="getExnpG20List" parameterType="map" resultType="map">
        /*getExnpG20List*/
        SELECT
            1212 AS CO_CD,
            A.EXNP_DET_SN,
            A.EXNP_SN,
            A.EVID_TYPE,
            A.TR_CD,
            A.BUDGET_SN AS BGT_CD,
            REPLACE(B.EXNP_DE, "-", "") AS IN_DT,
            REPLACE(A.TR_DE, "-", "") AS TAX_DT,
            REPLACE(D.APP_DE, "-", "") AS REG_DT,
            REPLACE(B.DT3, "-", "") AS EXEC_DT,
            REPLACE(B.DT1, "-", "") AS ACISU_DT,
            DATE_FORMAT(now(), '%Y%m%d') AS TXT_DONE_DT,
            IFNULL(A.PMR_NO, "") AS RPMR_NO,
            A.TR_DE AS CNT_DT,
            "" AS DUMMY1,
            "" AS DUMMY2,
            "" AS DUMMY3,
            B.BUSN_CD AS DIV_CD,
            B.BUSN_CD AS DIV_CD2,
            B.G20_DEPT_CD AS DEPT_CD,
            B.G20_EMP_CD AS EMP_CD,
            B.PJT_CD AS MGT_CD,
            "" AS BOTTOM_CD,
            CASE
                WHEN B.PAY_APP_TYPE = '1'
                    THEN '1'
                WHEN B.PAY_APP_TYPE = '2'
                    THEN '6'
                WHEN B.PAY_APP_TYPE = '3'
                    THEN '7'
                ELSE '55'
            END AS DOCU_FG,
            B.EXNP_BRIEFS AS RMK_DC,
            B.ACC_NM AS BANK_NM1,
            B.ACC_NO AS BA_NB1,
            A.EVID_TYPE,
            A.ETC,
            A.SUP_COST AS SUP_AM,
            A.VAT_COST AS VAT_AM,
            A.CRM_NM AS TR_NM,
            A.CRM_BNK_NM AS BANK_NM2,
            A.CRM_ACC_NO AS BA_NB2,
            A.CRM_ACC_HOLDER AS DEPOSITOR,
            A.CARD AS CTR_NM,
            A.CARD_NO AS CTR_NB,
            A.REG_NO AS REG_NB,
            "" AS ETCDATA_CD,
            "" AS ETCPER_CD,
            "" AS ETCREG_NO,
            "" AS ETCPER_NM,
            "" AS ETCZIP_CD,
            "" AS ETCADDR,
            "" AS ETCPHONE,
            "" AS ETCBANK_CD,
            "" AS ETCACCT_NO,
            "" AS ETCACCT_NM,
            "" AS ETCRVRS_YM,
            "" AS ETCDIV_CD,
            "" AS ETCDUMMY1,
            (SELECT PAY_APP_DET_SN FROM CAM_MNG.DJ_PAY_APP_DET WHERE (EVID_TYPE = 5 OR EVID_TYPE = 9) AND PAY_APP_SN = D.PAY_APP_SN LIMIT 1) AS PAY_APP_DET_SN
        FROM
            CAM_MNG.DJ_EXNP_DET A
        LEFT JOIN
            CAM_MNG.DJ_EXNP B
        ON
            A.EXNP_SN = B.EXNP_SN
        LEFT JOIN
            CAM_MNG.DJ_PAY_APP D
        ON
            B.PAY_APP_SN = D.PAY_APP_SN
        WHERE
            A.EXNP_SN = #{exnpSn}
        <if test='evidTypeArr != null and !"".equals(evidTypeArr)'>
        AND
            A.EVID_TYPE in (${evidTypeArr})
        </if>
    </select>

    <select id="getCountDoc" parameterType="map" resultType="int">
        /*getCountDoc*/
        SELECT
            A.countA + B.countB
        FROM (
            SELECT
                IFNULL(MAX(EXNP_CNT), 0) AS countA
            FROM
                CAM_MNG.DJ_EXNP_DET
            WHERE
                TR_DE = #{CNT_DT}
              AND
                EXNP_STAT = 'Y'
        ) A
        JOIN (
            SELECT
                IFNULL(MAX(EXNP_CNT), 0) AS countB
            FROM
                CAM_MNG.DJ_PAY_INCP_DET
            WHERE
                TR_DE = #{CNT_DT}
              AND
                EXNP_STAT = 'Y'
        ) B
    </select>

    <select id="getExnpCountDoc" parameterType="map" resultType="int">
        /*getExnpCountDoc*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_EXNP_DET
        WHERE
            TR_DE = #{CNT_DT}
        AND
            EXNP_STAT = 'Y'
        AND
            EXNP_SN = #{EXNP_SN}
    </select>

    <select id="getIncpCountDoc" parameterType="map" resultType="int">
        /*getIncpCountDoc*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_PAY_INCP_DET
        WHERE
            TR_DE = #{CNT_DT}
          AND
            EXNP_STAT = 'Y'
          AND
            PAY_INCP_SN = #{PAY_INCP_SN}
    </select>

    <update id="updClaimExnpInfo" parameterType="map">
        /*updClaimExnpInfo*/
        UPDATE CAM_MNG.DJ_CLAIM_EXNP
        SET
            EXNP_AMT = REQ_AMT,
            EXNP_SN = #{exnpSn}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updExnpStat" parameterType="map">
        /*updExnpStat*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            EXNP_STAT = "Y",
            EXNP_CNT = #{USER_SQ}
            <if test='DOCU_FG != "99" and !"99".equals(DOCU_FG)'>
                ,
                PMR_NO = #{PMR_NO}
            </if>
        WHERE
            EXNP_DET_SN = #{EXNP_DET_SN}
    </update>

    <update id="updIncpStat" parameterType="map">
        /*updIncpStat*/
        UPDATE CAM_MNG.DJ_PAY_INCP_DET
        SET
            EXNP_STAT = 'Y',
            EXNP_CNT = #{USER_SQ}
            <if test='DOCU_FG != "89" and !"89".equals(DOCU_FG)'>
                ,
                PMR_NO = #{PMR_NO}
            </if>
        WHERE
            PAY_INCP_DET_SN = #{PAY_INCP_DET_SN}
    </update>

    <update id="updIncpReStat" parameterType="map">
        /*updIncpReStat*/
        UPDATE CAM_MNG.DJ_PAY_INCP_RE
        SET
            EXNP_STAT = 'Y',
            EXNP_CNT = #{USER_SQ},
            RE_STAT = 'Y',
            PMR_NO = #{PMR_NO}
        WHERE
            PAY_INCP_RE_SN = #{PAY_INCP_RE_SN}
    </update>

    <select id="getEmpInfo" parameterType="map" resultType="map">
        /*getEmpInfo*/
        SELECT
            A.EMP_SEQ,
            A.ERP_EMP_SEQ,
            A.LOGIN_ID,
            A.LOGIN_PASSWD,
            A.EMP_NAME_KR,
            A.EMP_NAME_EN,
            A.EMP_NAME_CN,
            A.ATT_CARD_NUM,
            A.DEPT_SEQ,
            A.DEPT_NAME,
            A.DEPT_TEAM_NAME,
            A.OCCUPATION_CODE,
            A.POSITION_CODE,
            A.POSITION_NAME,
            A.DUTY_CODE,
            A.DUTY_NAME,
            A.GRADE_CODE,
            A.GRADE_NAME,
            A.POSITION_OR_DUTY,
            A.EMPLOY_GUBUN,
            A.JOIN_DAY,
            A.APPOINT_DAY,
            A.APPOINT_GUBUN,
            A.APPOINT_GUBUN_DETAIL,
            A.CTR_ST_DAY,
            A.CTR_EN_DAY,
            A.WEEK_WORK_TIME_TYPE,
            A.WEEK_WORK_TIME,
            A.BF_APPOINT_DAY,
            A.LOCAL_TALENT,
            A.WORK_FIELD_NAME,
            A.ZIP_CODE,
            scp.dec_b64('KEY1', A.ADDR) AS ADDR,
            A.OLD_ADDR,
            A.ADDR_DETAIL,
            A.ADDR_REFERENCES,
            scp.dec_b64('KEY1', A.LEGAL_DOMICILE) AS LEGAL_DOMICILE,
            A.HOME_TEL_NUM,
            scp.dec_b64('KEY1', A.MOBILE_TEL_NUM) AS MOBILE_TEL_NUM,
            A.OFFICE_TEL_NUM,
            scp.dec_b64('KEY1', A.EMAIL_ADDR) AS EMAIL_ADDR,
            scp.dec_b64('KEY1', A.BDAY) AS BDAY,
            A.LUNAR_CAL,
            A.GENDER_CODE,
            A.WEDDING_ACTIVE,
            A.IMPAIR_LEVEL_CODE,
            A.DEGREE_CODE,
            A.JOB_DETAIL,
            A.SPEC_CODE,
            A.DIV_FACTION,
            A.WORK_STATUS_CODE,
            A.RESIGN_DAY,
            A.RESIGN_REASON,
            A.PHOTO_FILE_ID,
            A.DEPT_MG_YN,
            A.ADMIN_APPROVE_YN,
            A.SECRET_YN,
            A.SEC_AUTHORIZE_DATE,
            A.SEC_RELEASE_DATE,
            A.ACTIVE,
            A.REG_EMP_SEQ,
            A.REG_DATE,
            A.MOD_EMP_SEQ,
            A.MOD_DATE,
            scp.dec_b64('KEY1', A.RES_REGIS_NUM) AS RES_REGIS_NUM,
            A.CHECK_PASSWD,
            A.CAPS_NUM,
            A.HOME_PAGE_ACTIVE,
            A.BEFOR_CAREER,
            A.BS_ELAPSED_YEAR,
            A.ELAPSED_YEAR,
            A.ACCOUNT_HOLDER,
            A.BANK_NAME,
            scp.dec_b64('KEY1', A.ACCOUNT_NUM) AS ACCOUNT_NUM,
            A.DUZON_CODE,
            A.CAR_ACTIVE,
            A.CAR_NUM,
            A.EMG_TEL_NUM,
            A.BLOOD_TYPE,
            A.WEDDING_DAY,
            A.HOBBY,
            A.SPECIALITY,
            A.RELIGION,
            A.HEIGHT,
            A.WEIGHT,
            A.VISIONL,
            A.VISIONR,
            A.DIVISION,
            A.DIVISION_SUB,
            A.NICK_NAME,
            A.CONTRACT,
            A.SCHOOL,
            A.DEGREE,
            A.DEPARTMENT,
            A.GRADE,
            A.STUDENT_ID,
            A.QUALIFICATION,
            A.LAST_DEGREE,
            A.CAREER,
            A.MILITARY,
            A.SIGNIFICANT,
            A.TEMP_DIVISION,
            A.MY_COMENT,
            A.SCIENCE_NO,
            A.CARD_ETC
        FROM
            CAM_HR.DJ_EMP_INFO A
        WHERE
            A.EMP_SEQ = #{empSeq}
    </select>

    <select id="getExnpList" parameterType="map" resultType="map">
        /*getExnpList*/
        SELECT
            A.*,
            B.DOC_NO,
            C.PAY_EXNP_DE,
            D.TOT_COST,
            D.BUDGET_NM BUDGET_NM_EX,
            D.EVID_TYPE EVI_TYPE,
            D.CRM_NAME,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_EXNP_DET WHERE EXNP_SN = A.EXNP_SN) CNT,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS REG_EMP_NAME
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B
        ON
            A.DOC_ID = B.DOC_ID
        LEFT JOIN
            (SELECT
                PAY_APP_SN,
                PAY_EXNP_DE
            FROM CAM_MNG.DJ_PAY_APP
            GROUP BY PAY_APP_SN) C
        ON
            A.PAY_APP_SN = C.PAY_APP_SN
        LEFT JOIN
            (SELECT
                EXNP_SN,
                SUM(TOT_COST) TOT_COST,
                GROUP_CONCAT(CRM_NM) AS CRM_NM,
                CRM_NM AS CRM_NAME,
                BUDGET_NM,
                EVID_TYPE
            FROM CAM_MNG.DJ_EXNP_DET
            GROUP BY EXNP_SN) D
        ON
            A.EXNP_SN = D.EXNP_SN
        WHERE
            1=1
        <choose>
            <when test='"1".equals(searchDate)'>
                AND A.EXNP_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"3".equals(searchDate)'>
                AND A.RE_STAT = 'Y'
                AND A.REQ_END_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"4".equals(searchDate)'>
                AND A.DT3 BETWEEN #{strDe} AND #{endDe}
            </when>
            <otherwise>
                AND A.REQ_DE BETWEEN #{strDe} AND #{endDe}
            </otherwise>
        </choose>
            <![CDATA[
            ]]>
        <if test='!"".equals(payAppType) and payAppType != null'>
            AND
                A.PAY_APP_TYPE = #{payAppType}
        </if>
        <if test='!"".equals(pjtCd) and pjtCd != null'>
            AND
                A.PJT_CD = #{pjtCd}
        </if>
        <if test='searchDept == "1" or "1".equals(searchDept)'>
            AND
                A.DOC_STATUS IN (0,30,40)
        </if>
        <if test='searchDept == "2" or "2".equals(searchDept)'>
            AND
                A.DOC_STATUS IN (10,20,50)
        </if>
        <if test='searchDept == "3" or "3".equals(searchDept)'>
            AND
                A.DOC_STATUS IN (100,101)
        </if>

        <if test='"1".equals(searchDept2)'>
            AND A.DOC_STATUS IN (100,101)
        </if>
        <if test='"2".equals(searchDept2)'>
            AND A.DOC_STATUS NOT IN (100,101)
        </if>

        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND
                    B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"B".equals(searchKeyword)'>
                AND
                    A.EXNP_BRIEFS LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"C".equals(searchKeyword)'>
                AND
                    A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"D".equals(searchKeyword)'>
                AND
                    D.CRM_NM REGEXP #{searchValue}
            </when>
            <when test='"E".equals(searchKeyword)'>
                AND
                    (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"F".equals(searchKeyword)'>
                AND
                    A.BUDGET_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <otherwise>
                AND
                    (
                        B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                        OR A.EXNP_BRIEFS LIKE CONCAT('%', #{searchValue},'%')
                        OR A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                        OR D.CRM_NM REGEXP #{searchValue}
                        OR (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) LIKE CONCAT('%', #{searchValue},'%')
                        OR A.BUDGET_NM LIKE CONCAT('%', #{searchValue},'%')
                    )
            </otherwise>
        </choose>
        ORDER BY EXNP_SN DESC
    </select>

    <select id="getExnpListForExcelDown" parameterType="map" resultType="map">
        /*getExnpListForExcelDown*/
        SELECT
            DI.DOC_NO,
            CASE
                WHEN ED.EVID_TYPE IN (1,2,3)
                    THEN '반제(지출)'
                ELSE '지출'
                END AS TYPE,
            CASE
                WHEN ED.EVID_TYPE = 1 THEN '세금계산서'
                WHEN ED.EVID_TYPE = 2 THEN '계산서'
                WHEN ED.EVID_TYPE = 3 THEN '신용카드'
                WHEN ED.EVID_TYPE = 4 THEN '직원지급'
                WHEN ED.EVID_TYPE = 5 THEN '사업소득자'
                WHEN ED.EVID_TYPE = 6 THEN '기타'
                WHEN ED.EVID_TYPE = 9 THEN '기타소득자'
                END AS EVID_TYPE_TEXT,
            E.PJT_CD,
            E.PJT_NM,
            E.ACC_NM,
            E.ACC_NO,
            E.BNK_NM,
            SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', 1) AS BUDGET_NM_1,
            SUBSTRING_INDEX(SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', -2), ' / ', 1) AS BUDGET_NM_2,
            SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', -1) as BUDGET_NM_3,
            ED.CRM_BNK_NM,
            ED.CRM_ACC_NO,
            ED.CRM_ACC_HOLDER,
            ED.CRM_NM,
            E.EXNP_BRIEFS,
            ED.TOT_COST,
            DATE_FORMAT(E.DT3, '%Y-%m-%d') AS R_DT,
            E.REQ_EXNP_DE,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE HEI.DEPT_SEQ = DEPT_SEQ) AS REG_DEPT_NAME,
            HEI.EMP_NAME_KR AS REG_EMP_NAME,
            IF(E.RE_STAT = 'N','미승인','승인') AS RE_STAT_TXT,
            CASE
                WHEN MDS.BUDGET_GUBUN = 'CASH' THEN '현금'
                WHEN MDS.BUDGET_GUBUN = 'POINT' THEN
                    CONCAT(
                            '포인트 - ',
                            CASE
                                WHEN MDS.EXEC_SYSTEM = 1 then 'e나라도움'
                                WHEN MDS.EXEC_SYSTEM = 2 then 'RCMS'
                                WHEN MDS.EXEC_SYSTEM = 3 then '통합이지바로'
                                WHEN MDS.EXEC_SYSTEM = 4 then '보탬e'
                                WHEN MDS.EXEC_SYSTEM = 5 then 'KIRIA'
                                WHEN MDS.EXEC_SYSTEM = 6 then 'JBTP'
                                WHEN MDS.EXEC_SYSTEM = 99 then '기타'
                                END
                    )
                ELSE '-'
            END AS BUDGET_TEXT
        FROM
            CAM_MNG.DJ_EXNP_DET ED
        LEFT JOIN
            CAM_MNG.DJ_EXNP E ON ED.EXNP_SN = E.EXNP_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON E.DOC_ID = DI.DOC_ID
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON E.REG_EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT PP ON LEFT(E.PJT_CD, 9) = LEFT(PP.PJT_CD, 9)
        LEFT JOIN
            CAM_MNG.DJ_DEPO_SETTING MDS ON PP.PJT_SN = MDS.FR_PJT_SN
        WHERE
            1=1
        <choose>
            <when test='"1".equals(searchDate)'>
                AND E.EXNP_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"3".equals(searchDate)'>
                AND E.RE_STAT = 'Y'
                AND E.REQ_END_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"4".equals(searchDate)'>
                AND E.DT3 BETWEEN #{strDe} AND #{endDe}
            </when>
            <otherwise>
                AND E.REQ_DE BETWEEN #{strDe} AND #{endDe}
            </otherwise>
        </choose>
        <if test='!"".equals(payAppType) and payAppType != null'>
            AND E.PAY_APP_TYPE = #{payAppType}
        </if>
        <if test='!"".equals(pjtCd) and pjtCd != null'>
            AND E.PJT_CD = #{pjtCd}
        </if>
        <if test='searchDept == "1" or "1".equals(searchDept)'>
            AND E.DOC_STATUS IN (0,30,40)
        </if>
        <if test='searchDept == "2" or "2".equals(searchDept)'>
            AND E.DOC_STATUS IN (10,20,50)
        </if>
        <if test='searchDept == "3" or "3".equals(searchDept)'>
            AND E.DOC_STATUS IN (100,101)
        </if>
        <if test='"1".equals(searchDept2)'>
            AND E.DOC_STATUS IN (100,101)
        </if>
        <if test='"2".equals(searchDept2)'>
            AND E.DOC_STATUS NOT IN (100,101)
        </if>

        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND DI.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"B".equals(searchKeyword)'>
                AND E.EXNP_BRIEFS LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"C".equals(searchKeyword)'>
                AND E.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"D".equals(searchKeyword)'>
                AND ED.CRM_NM REGEXP #{searchValue}
            </when>
            <when test='"E".equals(searchKeyword)'>
                AND HEI.EMP_NAME_KR LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"F".equals(searchKeyword)'>
                AND E.BUDGET_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                    DI.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                    OR E.EXNP_BRIEFS LIKE CONCAT('%', #{searchValue},'%')
                    OR E.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                    OR ED.CRM_NM REGEXP #{searchValue}
                    OR HEI.EMP_NAME_KR LIKE CONCAT('%', #{searchValue},'%')
                    OR E.BUDGET_NM LIKE CONCAT('%', #{searchValue},'%')
                )
            </otherwise>
        </choose>
        ORDER BY E.EXNP_SN DESC, E.DT3 DESC
    </select>

    <select id="getExnpReList" parameterType="map" resultType="map">
        /*getExnpReList*/
        SELECT
            CASE
                WHEN ED.EVID_TYPE IN (1,2,3)
                THEN '반제(지출)'
                ELSE '지출'
            END AS TYPE,
            E.*,
            ED.CRM_NM,
            ED2.CRM_CNT,
            ED.EVID_TYPE,
            CASE
                WHEN ED.EVID_TYPE = 1 THEN '세금계산서'
                WHEN ED.EVID_TYPE = 2 THEN '계산서'
                WHEN ED.EVID_TYPE = 3 THEN '신용카드'
                WHEN ED.EVID_TYPE = 4 THEN '직원지급'
                WHEN ED.EVID_TYPE = 5 THEN '사업소득자'
                WHEN ED.EVID_TYPE = 9 THEN '기타소득자'
                WHEN ED.EVID_TYPE = 6 THEN '기타'
            END AS EVID_TYPE_TEXT,
--             CASE
--                 WHEN ED.EVID_TYPE IN (1,2,3)
--                 THEN E.DT1
--                 ELSE E.DT3
--             END AS R_DT,
            E.DT3 AS R_DT,
            ED.BUDGET_NM AS BUDGET_NM_EX,
            DI.DOC_NO AS DOC_NO,
            DI.APPRO_KEY AS APPRO_KEY,
            DI.DOC_MENU_CD AS DOC_MENU_CD,
            IFNULL(SUM(ED.TOT_COST), 0) AS TOT_COST,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = E.REG_EMP_SEQ) AS REG_EMP_NAME
        FROM
            CAM_MNG.DJ_EXNP_DET ED
        LEFT JOIN
            CAM_MNG.DJ_EXNP E ON ED.EXNP_SN = E.EXNP_SN
        LEFT JOIN
            (SELECT EXNP_SN, COUNT(*) AS CRM_CNT FROM CAM_MNG.DJ_EXNP_DET GROUP BY EXNP_SN) ED2
        ON E.EXNP_SN = ED2.EXNP_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON E.DOC_ID = DI.DOC_ID
        WHERE (ED.EVID_TYPE IN (1, 2, 3) or ED.EVID_TYPE NOT IN (1, 2, 3))
        AND E.DOC_STATUS = '100'
        <if test='pjtCd != null and !"".equals(pjtCd)'>
            AND E.PJT_CD = #{pjtCd}
        </if>
        <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
            AND E.DT3
            BETWEEN #{startDt} AND #{endDt}
        </if>
        <if test='searchStatus != null and !"".equals(searchStatus)'>
            AND E.RE_STAT = #{searchStatus}
        </if>
        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "PJT_NM".equals(searchKeyword)'>
                AND E.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "BUDGET_NM".equals(searchKeyword)'>
                AND ED.BUDGET_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "CRM_NM".equals(searchKeyword)'>
                AND ED.CRM_NM LIKE CONCAT('%', #{searchValue} ,'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "EXNP_BRIEFS".equals(searchKeyword)'>
                AND E.EXNP_BRIEFS LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                    E.PJT_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    ED.CRM_NM LIKE CONCAT('%', #{searchValue} ,'%') OR
                    ED.BUDGET_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    E.EXNP_BRIEFS LIKE CONCAT('%',#{searchValue},'%')
                )
            </otherwise>
        </choose>

        GROUP BY E.EXNP_SN
        ORDER BY E.DT3 DESC
    </select>

    <select id="getExnpReListForExcelDown" parameterType="map" resultType="map">
        /* getExnpReListForExcelDown */
        SELECT
            E.EXNP_SN,
            CASE
                WHEN ED.EVID_TYPE IN (1,2,3)
                THEN '반제(지출)'
                ELSE '지출'
            END AS TYPE,
            E.PJT_NM,
            E.PJT_CD,
            E.EXNP_BRIEFS,
            E.ACC_NM,
            E.ACC_NO,
            E.BNK_NM,
            ED.CRM_ACC_HOLDER,
            ED.CRM_ACC_NO,
            ED.CRM_BNK_NM,
            ED.CRM_NM,
            CASE
                WHEN ED.EVID_TYPE = 1 THEN '세금계산서'
                WHEN ED.EVID_TYPE = 2 THEN '계산서'
                WHEN ED.EVID_TYPE = 3 THEN '신용카드'
                WHEN ED.EVID_TYPE = 4 THEN '직원지급'
                WHEN ED.EVID_TYPE = 5 THEN '사업소득자'
                WHEN ED.EVID_TYPE = 6 THEN '기타'
                WHEN ED.EVID_TYPE = 9 THEN '기타소득자'
            END AS EVID_TYPE_TEXT,
            DATE_FORMAT(E.DT3, '%Y-%m-%d') AS R_DT,
--             CASE
--                 WHEN ED.EVID_TYPE IN (1,2,3)
--                 THEN DATE_FORMAT(E.DT1, '%Y-%m-%d')
--                 ELSE DATE_FORMAT(E.DT3, '%Y-%m-%d')
--             END AS R_DT,
            E.REQ_EXNP_DE,
            ED.BUDGET_NM AS BUDGET_NM_EX,
            SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', 1) AS BUDGET_NM_1,
            SUBSTRING_INDEX(SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', -2), ' / ', 1) AS BUDGET_NM_2,
            SUBSTRING_INDEX(ED.BUDGET_NM, ' / ', -1) as BUDGET_NM_3,
            ED.TOT_COST,
            DI.DOC_NO AS DOC_NO,
            HEI.EMP_NAME_KR AS REG_EMP_NAME,
            HDI.DEPT_NAME AS REG_DEPT_NAME,
            E.RE_STAT,
            IF(E.RE_STAT = 'N','미승인','승인') AS RE_STAT_TXT,
            CASE
                WHEN MDS.BUDGET_GUBUN = 'CASH' THEN '현금'
                    WHEN MDS.BUDGET_GUBUN = 'POINT' THEN
                        CONCAT(
                            '포인트 - ',
                            CASE
                                WHEN MDS.EXEC_SYSTEM = 1 then 'e나라도움'
                                WHEN MDS.EXEC_SYSTEM = 2 then 'RCMS'
                                WHEN MDS.EXEC_SYSTEM = 3 then '통합이지바로'
                                WHEN MDS.EXEC_SYSTEM = 4 then '보탬e'
                                WHEN MDS.EXEC_SYSTEM = 5 then 'KIRIA'
                                WHEN MDS.EXEC_SYSTEM = 6 then 'JBTP'
                                WHEN MDS.EXEC_SYSTEM = 99 then '기타'
                            END
                        )
                    ELSE '-'
            END AS BUDGET_TEXT
        FROM
            CAM_MNG.DJ_EXNP_DET ED
        LEFT JOIN
            CAM_MNG.DJ_EXNP E ON ED.EXNP_SN = E.EXNP_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON E.DOC_ID = DI.DOC_ID
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON E.REG_EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT PP ON LEFT(E.PJT_CD, 9) = LEFT(PP.PJT_CD, 9)
        LEFT JOIN
            CAM_MNG.DJ_DEPO_SETTING MDS ON PP.PJT_SN = MDS.FR_PJT_SN
        WHERE (ED.EVID_TYPE IN (1, 2, 3) or ED.EVID_TYPE NOT IN (1, 2, 3))
            AND E.DOC_STATUS = '100'
           -- AND E.PAY_APP_TYPE = 1
        <if test='pjtCd != null and !"".equals(pjtCd)'>
            AND E.PJT_CD = #{pjtCd}
        </if>
        <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
            AND DT3
            BETWEEN #{startDt} AND #{endDt}
        </if>
        <if test='searchStatus != null and !"".equals(searchStatus)'>
            AND E.RE_STAT = #{searchStatus}
        </if>
        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "PJT_NM".equals(searchKeyword)'>
                AND E.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "BUDGET_NM".equals(searchKeyword)'>
                AND ED.BUDGET_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "CRM_NM".equals(searchKeyword)'>
                AND ED.CRM_NM LIKE CONCAT('%', #{searchValue} ,'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "EXNP_BRIEFS".equals(searchKeyword)'>
                AND E.EXNP_BRIEFS LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                E.PJT_NM LIKE CONCAT('%',#{searchValue},'%') OR
                ED.CRM_NM LIKE CONCAT('%', #{searchValue} ,'%') OR
                ED.BUDGET_NM LIKE CONCAT('%',#{searchValue},'%') OR
                E.EXNP_BRIEFS LIKE CONCAT('%',#{searchValue},'%')
                )
            </otherwise>
        </choose>

        GROUP BY ED.EXNP_DET_SN
        ORDER BY E.DT3 DESC
    </select>

    <select id="getIncpList" parameterType="map" resultType="map">
        /* getIncpList */
        SELECT
            A.*,
            C.EVID_TYPE,
            IFNULL(D.EMP_NAME_KR, '') AS EMP_NAME,
            C.UNIT_CRM_NM,
            C.CRM_CNT,
            B.DOC_NO,
            C.TOT_COST,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN),0) AS RE_TOT_AMT,
            IFNULL(E.RE_TOT_COST, 0) AS RE_TOT_COST,
            IFNULL(E.RE_CNT,0) AS RE_CNT
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO B
        ON
            A.DOC_ID = B.DOC_ID
        LEFT JOIN
            (
                SELECT
                    EVID_TYPE,
                    PAY_INCP_SN,
                    CRM_NM AS UNIT_CRM_NM,
                    COUNT(*) AS CRM_CNT,
                    SUM(TOT_COST) AS TOT_COST,
                    GROUP_CONCAT(CRM_NM) AS CRM_NM
                FROM CAM_MNG.DJ_PAY_INCP_DET
                GROUP BY PAY_INCP_SN
            ) C
        ON
            A.PAY_INCP_SN = C.PAY_INCP_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO D
        ON A.EXNP_EMP_SEQ = D.EMP_SEQ
        LEFT JOIN
            (
                SELECT
                    PAY_INCP_SN,
                    SUM(TOT_COST) AS RE_TOT_COST,
                    COUNT(PAY_INCP_RE_SN) AS RE_CNT
                FROM CAM_MNG.DJ_PAY_INCP_RE
                WHERE RE_STAT = 'Y'
                GROUP BY PAY_INCP_SN
            ) E
        ON
            A.PAY_INCP_SN = E.PAY_INCP_SN
        WHERE
            <![CDATA[
                A.APP_DE > #{startDt} AND A.APP_DE <= #{endDt}
            ]]>
            <if test='searchDept == "1" or "1".equals(searchDept)'>
                AND A.DOC_STATUS IN (0,30,40)
            </if>
            <if test='searchDept == "2" or "2".equals(searchDept)'>
                AND A.DOC_STATUS IN (10,20,50)
            </if>
            <if test='searchDept == "3" or "3".equals(searchDept)'>
                AND A.DOC_STATUS IN (100,101)
            </if>
            <if test='searchDept2 == "1" or "1".equals(searchDept2)'>
                AND  ((A.DOC_STATUS IN (100, 101) AND ((C.EVID_TYPE IN (1, 3, 5) AND IFNULL(E.RE_CNT,0) = 0) OR (C.EVID_TYPE IN (1, 3, 5) AND IFNULL(E.RE_CNT,0) = 0 AND IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN),0) = 0))) OR
                (A.DOC_STATUS NOT IN (100, 101) AND C.EVID_TYPE NOT IN (1, 3, 5)))
            </if>
            <if test='searchDept2 == "2" or "2".equals(searchDept2)'>
                AND A.DOC_STATUS IN (100, 101) AND C.EVID_TYPE IN (1, 3, 5) AND IFNULL(E.RE_CNT,0) != 0
                AND IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN),0) != 0
                AND IFNULL(E.RE_TOT_COST, 0) != C.TOT_COST
            </if>
            <if test='searchDept2 == "3" or "3".equals(searchDept2)'>
                AND ((A.DOC_STATUS IN (100, 101) AND C.EVID_TYPE IN (1, 3, 5) AND IFNULL(E.RE_CNT,0) != 0
                AND IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN),0) != 0
                AND IFNULL(E.RE_TOT_COST, 0) = C.TOT_COST) OR (A.DOC_STATUS IN (100, 101) AND C.EVID_TYPE NOT IN (1, 3, 5)))
            </if>
            <choose>
                <when test='"A".equals(searchKeyword)'>
                    AND
                    B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"B".equals(searchKeyword)'>
                    AND
                    A.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"C".equals(searchKeyword)'>
                    AND
                    A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"D".equals(searchKeyword)'>
                    AND
                        C.CRM_NM REGEXP #{searchValue}
                </when>
                <otherwise>
                    AND
                    (
                        B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                        OR A.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
                        OR A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                        OR C.CRM_NM REGEXP #{searchValue}
                    )
                </otherwise>
            </choose>
        ORDER BY A.PAY_INCP_SN DESC
    </select>

    <select id="getIncpListForExcelDown" parameterType="map" resultType="map">
        /* getIncpListForExcelDown */
        SELECT
            C.CRM_NM,
            C.EVID_TYPE AS EVID_TEXT,
            A.APP_DE,
            A.APP_CONT,
            A.PJT_NM,
            A.BUDGET_NM,
            IFNULL(D.EMP_NAME_KR, '') AS EMP_NAME,
            C.TOT_COST,
            CASE
                WHEN A.DOC_STATUS = '100' AND IFNULL(E.RE_CNT, 0) != 0 AND IFNULL(E.RE_TOT_COST, 0) != 0 AND IFNULL(E.RE_TOT_COST, 0) = C.TOT_COST THEN '입금완료'
                WHEN A.DOC_STATUS = '100' AND IFNULL(E.RE_CNT, 0) != 0 AND IFNULL(E.RE_TOT_COST, 0) != 0 AND IFNULL(E.RE_TOT_COST, 0) != C.TOT_COST THEN '부분입금'
                WHEN A.DOC_STATUS = '100' AND IFNULL(E.RE_CNT, 0) = 0 THEN '결재완료'
                WHEN A.DOC_STATUS IN ('10', '50') AND IFNULL(E.RE_CNT, 0) = 0 THEN '결재완료'
                ELSE '작성중'
            END AS DOC_STATUS_TEXT,
            CASE
                WHEN A.DOC_STATUS != '100' AND A.PAY_EXNP_DE IS NOT NULL THEN '입금예정'
                WHEN A.DOC_STATUS = '100' THEN '입금완료'
                ELSE '-'
            END AS INCP_STATUS_TEXT
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO B ON A.DOC_ID = B.DOC_ID
        LEFT JOIN (
            SELECT
                PAY_INCP_SN,
                SUM(TOT_COST) AS TOT_COST,
                GROUP_CONCAT(DISTINCT CRM_NM) AS CRM_NM,
                REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(GROUP_CONCAT(DISTINCT IFNULL(EVID_TYPE, '-')), '1', '세금계산서(청구)'), '2', '세금계산서(영수)'), '3', '계산서(청구)'), '4', '계산서(영수)'), '5', '신용카드(과세)'), '6', '신용카드(면세)'), '7', '증빙없음') AS EVID_TYPE
            FROM CAM_MNG.DJ_PAY_INCP_DET
            GROUP BY PAY_INCP_SN
        ) C ON A.PAY_INCP_SN = C.PAY_INCP_SN
        LEFT JOIN CAM_HR.DJ_EMP_INFO D ON A.EXNP_EMP_SEQ = D.EMP_SEQ
        LEFT JOIN (
            SELECT
                PAY_INCP_SN,
                SUM(TOT_COST) AS RE_TOT_COST,
                COUNT(PAY_INCP_RE_SN) AS RE_CNT
            FROM CAM_MNG.DJ_PAY_INCP_RE
            WHERE RE_STAT = 'Y'
            GROUP BY PAY_INCP_SN
        ) E ON A.PAY_INCP_SN = E.PAY_INCP_SN
        WHERE
        <![CDATA[
            A.APP_DE > #{startDt} AND A.APP_DE <= #{endDt}
        ]]>
        <if test='searchDept == "1" or "1".equals(searchDept)'>
            AND A.DOC_STATUS IN (0,30,40)
        </if>
        <if test='searchDept == "2" or "2".equals(searchDept)'>
            AND A.DOC_STATUS IN (10,20,50)
        </if>
        <if test='searchDept == "3" or "3".equals(searchDept)'>
            AND A.DOC_STATUS IN (100,101)
        </if>
        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND
                B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"B".equals(searchKeyword)'>
                AND
                A.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"C".equals(searchKeyword)'>
                AND
                A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"D".equals(searchKeyword)'>
                AND
                C.CRM_NM REGEXP #{searchValue}
            </when>
            <otherwise>
                AND
                (
                B.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                OR A.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
                OR A.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                OR C.CRM_NM REGEXP #{searchValue}
                )
            </otherwise>
        </choose>
        ORDER BY A.PAY_INCP_SN DESC
    </select>

    <select id="getIncpReList" parameterType="map" resultType="map">
        /*getIncpReList*/
        SELECT * FROM (
            SELECT
                I.*,
                DI.DOC_NO,
                DI.APPRO_KEY AS APPRO_KEY,
                DI.DOC_MENU_CD AS DOC_MENU_CD,
                IFNULL(SUM(ID.TOT_COST), 0) AS TOT_COST,
                '' AS PAY_INCP_RE_SN,
                '' AS PAY_INCP_DET_SN,
                '' AS RE_APP_DE,
                HEI.EMP_NAME_KR AS EMP_NAME,
                GROUP_CONCAT(ID.CRM_NM) AS CRM_NM
            FROM
                CAM_MNG.DJ_PAY_INCP_DET ID
            LEFT JOIN CAM_MNG.DJ_PAY_INCP I
                ON ID.PAY_INCP_SN = I.PAY_INCP_SN
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI
                ON I.DOC_ID = DI.DOC_ID
            LEFT JOIN CAM_HR.DJ_EMP_INFO HEI
                ON HEI.EMP_SEQ = I.EXNP_EMP_SEQ
            WHERE I.DOC_STATUS = '100'
            AND ID.EVID_TYPE NOT IN (1, 3, 5, 6)
            GROUP BY I.PAY_INCP_SN
            UNION ALL
            SELECT
                B.PAY_INCP_SN, A.PJT_NM, A.PJT_SN, A.PJT_CD, B.BUDGET_SN,
                B.BUDGET_NM, A.APP_DE, A.PAY_EXNP_DE, A.BUSN_CD, A.BUSN_EX_CD,
                A.EXNP_EMP_SEQ, A.G20_EMP_CD, A.G20_DEPT_CD, A.APP_CONT, A.BNK_SN,
                A.ACC_NM, A.ACC_NO, A.BNK_NM, A.PAY_APP_STAT, A.GUBUN, A.DOC_ID, A.DOC_STATUS,
                A.APPROVAL_EMP_SEQ, A.APPROVAL_DATE, A.PMR_NO, A.REG_DT, A.REG_EMP_SEQ, A.MOD_DT,
                A.MOD_EMP_SEQ, B.RE_STAT, A.INFO_CODE,
                DI.DOC_NO,
                DI.APPRO_KEY AS APPRO_KEY,
                DI.DOC_MENU_CD AS DOC_MENU_CD,
                IFNULL((B.TOT_COST), 0) + IFNULL((SELECT TOT_COST FROM CAM_MNG.DJ_PAY_INCP_RE WHERE B.PAY_INCP_RE_SN = GROUP_KEY), 0) AS TOT_COST,
                B.PAY_INCP_RE_SN,
                B.PAY_INCP_DET_SN,
                B.RE_APP_DE,
                HEI.EMP_NAME_KR AS EMP_NAME,
                CRM_NM
            FROM
                CAM_MNG.DJ_PAY_INCP_RE B
            LEFT JOIN
                CAM_MNG.DJ_PAY_INCP A
            ON
                B.PAY_INCP_SN = A.PAY_INCP_SN
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI
            ON A.DOC_ID = DI.DOC_ID
            LEFT JOIN CAM_HR.DJ_EMP_INFO HEI
                ON HEI.EMP_SEQ = IFNULL(B.REG_EMP_SEQ, A.EXNP_EMP_SEQ)
            WHERE GROUP_KEY IS NULL) AB
        WHERE
        <![CDATA[
            (AB.APP_DE >= #{startDt} AND AB.APP_DE <= #{endDt} OR AB.RE_APP_DE >= #{startDt} AND AB.RE_APP_DE <= #{endDt})
        ]]>
        <if test='searchDept == "1" or "1".equals(searchDept)'>
            AND AB.DOC_STATUS IN (0,30,40)
        </if>
        <if test='searchDept == "2" or "2".equals(searchDept)'>
            AND AB.DOC_STATUS IN (10,20,50)
        </if>
        <if test='searchDept == "3" or "3".equals(searchDept)'>
            AND AB.DOC_STATUS IN (100,101)
        </if>
        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND
                AB.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"B".equals(searchKeyword)'>
                AND
                AB.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"C".equals(searchKeyword)'>
                AND
                AB.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <when test='"D".equals(searchKeyword)'>
                AND (
                    AB.CRM_NM REGEXP #{searchValue}
                    OR AB.PAY_INCP_SN = ((SELECT PAY_INCP_SN FROM CAM_MNG.DJ_PAY_INCP_DET WHERE CRM_NM LIKE CONCAT('%', #{searchValue}, '%') LIMIT 1))
                )
            </when>
            <otherwise>
                AND
                (
                    AB.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                    OR AB.APP_CONT LIKE CONCAT('%', #{searchValue},'%')
                    OR AB.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                    OR AB.CRM_NM REGEXP #{searchValue}
                    OR AB.PAY_INCP_SN = ((SELECT PAY_INCP_SN FROM CAM_MNG.DJ_PAY_INCP_DET WHERE CRM_NM LIKE CONCAT('%', #{searchValue}, '%') LIMIT 1))
                )
            </otherwise>
        </choose>
        ORDER BY AB.REG_DT DESC
    </select>

    <update id="updPayAppDetailStatus" parameterType="map">
        /*updPayAppDetailStatus*/
        UPDATE
            CAM_MNG.DJ_PAY_APP_DET
        SET
            EXNP_STAT = "Y",
            EXNP_SAVE = "Y"
        WHERE
            PAY_APP_DET_SN = #{item}
    </update>

    <update id="resolutionExnpStatus" parameterType="map">
        /*resolutionExnpStatus*/
        UPDATE
            CAM_MNG.DJ_EXNP
        SET
            RE_STAT = "Y",
            REQ_END_DE = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="resolutionExnpReStatus" parameterType="map">
        /*resolutionExnpStatus*/
        UPDATE
            CAM_MNG.DJ_EXNP
        SET
            RE_STAT = "N"
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="resolutionIncpAppr" parameterType="map">
        /*resolutionIncpAppr*/
        UPDATE
            CAM_MNG.DJ_PAY_INCP
        SET
            RE_STAT = "Y"
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <update id="updPayAttDetData" parameterType="map">
        /* updPayAttDetData */
        UPDATE
            CAM_MNG.DJ_PAY_APP_DET
        SET
            ${column} = #{value}
        WHERE
            PAY_APP_DET_SN = #{payDestSn}
    </update>

    <update id="updExnpAttDetData" parameterType="map">
        /* updExnpAttDetData */
        UPDATE
            CAM_MNG.DJ_EXNP_DET
        SET
            ${column} = #{value}
        WHERE
            EXNP_DET_SN = #{exnpDestSn}
    </update>

    <select id="getPayAttInfo" parameterType="map" resultType="map">
        /* getPayAttInfo */
        SELECT
            IFNULL(FI.FILE_NO, '') AS FILE1_NO,
            CONCAT(FI.FILE_ORG_NAME, '.', FI.FILE_EXT) AS FILE1_NAME,
            CONCAT(FI.FILE_PATH, FI.FILE_UUID) AS FILE1_PATH,

            IFNULL(FI2.FILE_NO, '') AS FILE2_NO,
            CONCAT(FI2.FILE_ORG_NAME, '.', FI2.FILE_EXT) AS FILE2_NAME,
            CONCAT(FI2.FILE_PATH, FI2.FILE_UUID) AS FILE2_PATH,

            IFNULL(FI3.FILE_NO, '') AS FILE3_NO,
            CONCAT(FI3.FILE_ORG_NAME, '.', FI3.FILE_EXT) AS FILE3_NAME,
            CONCAT(FI3.FILE_PATH, FI3.FILE_UUID) AS FILE3_PATH,

            IFNULL(FI4.FILE_NO, '') AS FILE4_NO,
            CONCAT(FI4.FILE_ORG_NAME, '.', FI4.FILE_EXT) AS FILE4_NAME,
            CONCAT(FI4.FILE_PATH, FI4.FILE_UUID) AS FILE4_PATH,

            IFNULL(FI5.FILE_NO, '') AS FILE5_NO,
            CONCAT(FI5.FILE_ORG_NAME, '.', FI5.FILE_EXT) AS FILE5_NAME,
            CONCAT(FI5.FILE_PATH, FI5.FILE_UUID) AS FILE5_PATH,

            IFNULL(FI6.FILE_NO, '') AS FILE6_NO,
            CONCAT(FI6.FILE_ORG_NAME, '.', FI6.FILE_EXT) AS FILE6_NAME,
            CONCAT(FI6.FILE_PATH, FI6.FILE_UUID) AS FILE6_PATH,

            IFNULL(FI7.FILE_NO, '') AS FILE7_NO,
            CONCAT(FI7.FILE_ORG_NAME, '.', FI7.FILE_EXT) AS FILE7_NAME,
            CONCAT(FI7.FILE_PATH, FI7.FILE_UUID) AS FILE7_PATH,

            IFNULL(FI8.FILE_NO, '') AS FILE8_NO,
            CONCAT(FI8.FILE_ORG_NAME, '.', FI8.FILE_EXT) AS FILE8_NAME,
            CONCAT(FI8.FILE_PATH, FI8.FILE_UUID) AS FILE8_PATH,

            IFNULL(FI9.FILE_NO, '') AS FILE9_NO,
            CONCAT(FI9.FILE_ORG_NAME, '.', FI9.FILE_EXT) AS FILE9_NAME,
            CONCAT(FI9.FILE_PATH, FI9.FILE_UUID) AS FILE9_PATH,

            IFNULL(FI10.FILE_NO, '') AS FILE10_NO,
            CONCAT(FI10.FILE_ORG_NAME, '.', FI10.FILE_EXT) AS FILE10_NAME,
            CONCAT(FI10.FILE_PATH, FI10.FILE_UUID) AS FILE10_PATH
        FROM
            CAM_MNG.DJ_PAY_APP_DET PA
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI ON PA.FILE1 = FI.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI2 ON PA.FILE2 = FI2.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI3 ON PA.FILE3 = FI3.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI4 ON PA.FILE4 = FI4.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI5 ON PA.FILE4 = FI5.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI6 ON PA.FILE6 = FI6.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI7 ON PA.FILE6 = FI7.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI8 ON PA.FILE6 = FI8.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI9 ON PA.FILE6 = FI9.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI10 ON PA.FILE6 = FI10.FILE_NO
        WHERE
            PAY_APP_DET_SN = #{payDestSn}
    </select>

    <select id="getPayAttEtcInfo" parameterType="map" resultType="map">
        /* getPayAttEtcInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
        ORDER BY REG_DATE DESC
    </select>

    <select id="getPayAttList" parameterType="map" resultType="map">
        /* getPayAttList */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO IN (${fileText})
        ORDER BY REG_DATE DESC
    </select>

    <select id="getExnpAttInfo" parameterType="map" resultType="map">
        /* getExnpAttInfo */
        SELECT
            IFNULL(FI.FILE_NO, '') AS FILE1_NO,
            CONCAT(FI.FILE_ORG_NAME, '.', FI.FILE_EXT) AS FILE1_NAME,
            CONCAT(FI.FILE_PATH, FI.FILE_UUID) AS FILE1_PATH,

            IFNULL(FI2.FILE_NO, '') AS FILE2_NO,
            CONCAT(FI2.FILE_ORG_NAME, '.', FI2.FILE_EXT) AS FILE2_NAME,
            CONCAT(FI2.FILE_PATH, FI2.FILE_UUID) AS FILE2_PATH,

            IFNULL(FI3.FILE_NO, '') AS FILE3_NO,
            CONCAT(FI3.FILE_ORG_NAME, '.', FI3.FILE_EXT) AS FILE3_NAME,
            CONCAT(FI3.FILE_PATH, FI3.FILE_UUID) AS FILE3_PATH,

            IFNULL(FI4.FILE_NO, '') AS FILE4_NO,
            CONCAT(FI4.FILE_ORG_NAME, '.', FI4.FILE_EXT) AS FILE4_NAME,
            CONCAT(FI4.FILE_PATH, FI4.FILE_UUID) AS FILE4_PATH,

            IFNULL(FI5.FILE_NO, '') AS FILE5_NO,
            CONCAT(FI5.FILE_ORG_NAME, '.', FI5.FILE_EXT) AS FILE5_NAME,
            CONCAT(FI5.FILE_PATH, FI5.FILE_UUID) AS FILE5_PATH,

            IFNULL(FI6.FILE_NO, '') AS FILE6_NO,
            CONCAT(FI6.FILE_ORG_NAME, '.', FI6.FILE_EXT) AS FILE6_NAME,
            CONCAT(FI6.FILE_PATH, FI6.FILE_UUID) AS FILE6_PATH,

            IFNULL(FI7.FILE_NO, '') AS FILE7_NO,
            CONCAT(FI7.FILE_ORG_NAME, '.', FI7.FILE_EXT) AS FILE7_NAME,
            CONCAT(FI7.FILE_PATH, FI7.FILE_UUID) AS FILE7_PATH,

            IFNULL(FI8.FILE_NO, '') AS FILE8_NO,
            CONCAT(FI8.FILE_ORG_NAME, '.', FI8.FILE_EXT) AS FILE8_NAME,
            CONCAT(FI8.FILE_PATH, FI8.FILE_UUID) AS FILE8_PATH,

            IFNULL(FI9.FILE_NO, '') AS FILE9_NO,
            CONCAT(FI9.FILE_ORG_NAME, '.', FI9.FILE_EXT) AS FILE9_NAME,
            CONCAT(FI9.FILE_PATH, FI9.FILE_UUID) AS FILE9_PATH,

            IFNULL(FI10.FILE_NO, '') AS FILE10_NO,
            CONCAT(FI10.FILE_ORG_NAME, '.', FI10.FILE_EXT) AS FILE10_NAME,
            CONCAT(FI10.FILE_PATH, FI10.FILE_UUID) AS FILE10_PATH
        FROM
            CAM_MNG.DJ_EXNP_DET PA
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI ON PA.FILE1 = FI.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI2 ON PA.FILE2 = FI2.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI3 ON PA.FILE3 = FI3.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI4 ON PA.FILE4 = FI4.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI5 ON PA.FILE4 = FI5.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI6 ON PA.FILE6 = FI6.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI7 ON PA.FILE6 = FI7.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI8 ON PA.FILE6 = FI8.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI9 ON PA.FILE6 = FI9.FILE_NO
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO FI10 ON PA.FILE6 = FI10.FILE_NO
        WHERE
            EXNP_DET_SN = #{exnpDestSn}
    </select>

    <select id="getExnpAttEtcInfo" parameterType="map" resultType="map">
        /* getExnpAttEtcInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
        ORDER BY REG_DATE DESC
    </select>

    <insert id="insPayIncpData" parameterType="map">
        /*insPayIncpData*/
        INSERT CAM_MNG.DJ_PAY_INCP
        (
            PJT_NM,
            PJT_SN,
            PJT_CD,
            BUDGET_NM,
            BUDGET_SN,
            BUSN_CD,
            BUSN_EX_CD,
            EXNP_EMP_SEQ,
            G20_EMP_CD,
            G20_DEPT_CD,
            APP_DE,
            PAY_EXNP_DE,
            APP_CONT,
            BNK_SN,
            BNK_NM,
            ACC_NO,
            ACC_NM,
            PAY_APP_STAT,
            GUBUN,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtNm},
            #{pjtSn},
            #{pjtCd},
            #{budgetNm},
            #{budgetSn},
            #{busnCd},
            #{busnExCd},
            #{exnpEmpSeq},
            #{g20EmpCd},
            #{g20DeptCd},
            #{appDe},
            #{payExnpDe},
            #{appCont},
            #{bnkSn},
            #{bnkNm},
            #{accNo},
            #{accNm},
            #{payAppStat},
            'W',
            #{regEmpSeq}
        )
        <selectKey keyProperty="payIncpSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_INCP'
        </selectKey>
    </insert>

    <update id="updPayIncpData" parameterType="map">
        /*updPayIncpData*/
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            APP_DE = #{appDe},
            APP_CONT = #{appCont},
            BUDGET_SN = #{budgetSn},
            BUDGET_NM = #{budgetNm},
            BUSN_CD = #{busnCd},
            BUSN_EX_CD = #{busnExCd},
            PAY_EXNP_DE = #{payExnpDe},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NO = #{accNo},
            ACC_NM = #{accNm},
            PAY_APP_STAT = #{payAppStat},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <insert id="insPayIncpDetailData" parameterType="map">
        /*insPayIncpDetailData*/
        INSERT CAM_MNG.DJ_PAY_INCP_DET
        (
            PAY_INCP_SN,
            EVID_TYPE,
            TR_CD,
            CRM_NM,
            CEO_NM,
            TR_DE,
            TOT_COST,
            SUP_COST,
            VAT_COST,
            CARD,
            CARD_NO,
            REG_NO,
            ETC,
            ISS
        )
        VALUES
        (
            #{payIncpSn},
            #{evidType},
            #{trCd},
            #{crmNm},
            #{ceoNm},
            #{trDe},
            #{totCost},
            #{supCost},
            #{vatCost},
            #{card},
            #{cardNo},
            #{regNo},
            #{etc},
            #{iss}
        )
    </insert>

    <delete id="delPayIncpDetailData" parameterType="map">
        /*delPayIncpDetailData*/
        DELETE FROM CAM_MNG.DJ_PAY_INCP_DET
        WHERE PAY_INCP_SN = #{payIncpSn}
    </delete>

    <select id="getPayIncpReqData" parameterType="map" resultType="map">
        /*getPayIncpReqData*/
        SELECT
            A.*,
            B.DOC_NO,
            B.APPRO_KEY,
            B.DOC_MENU_CD,
            HEI.EMP_NAME_KR AS REG_EMP_NAME,
            HEI.DEPT_NAME AS REG_DEPT_NAME,
            HEI.DEPT_SEQ AS REG_DEPT_SEQ,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_DET WHERE PAY_INCP_SN = A.PAY_INCP_SN) TOT_DET_AMT,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN), 0) AS TOT_COST,
            (
                SELECT SUM(CASE WHEN EVID_TYPE IN (1,3,5) THEN 1 ELSE 0 END) FROM CAM_MNG.DJ_PAY_INCP_DET WHERE A.PAY_INCP_SN = PAY_INCP_SN
            ) AS EVID_CNT
        FROM CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO B
        ON
           A.DOC_ID = B.DOC_ID
        LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON A.REG_EMP_SEQ = HEI.EMP_SEQ
        WHERE PAY_INCP_SN = #{payIncpSn}
    </select>

    <select id="getPayIncpDetailData" parameterType="map" resultType="map">
        /*getPayIncpDetailData*/
        SELECT
            A.*,
            FORMAT(A.TOT_COST,0) AS TOT_COST_COMMA,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y'), 0) AS PAY_TOT_COST
        FROM CAM_MNG.DJ_PAY_INCP_DET A

        WHERE A.PAY_INCP_SN = #{payIncpSn}
        <if test='payIncpDetSn != null and !"".equals(payIncpDetSn)'>
            AND A.PAY_INCP_DET_SN = #{payIncpDetSn}
        </if>
    </select>

    <select id="getIncpData" parameterType="map" resultType="map">
        /*getIncpData*/
        SELECT
            A.*,
            B.EMP_SEQ,
            B.ERP_EMP_SEQ,
            B.EMP_NAME_KR,
            B.DEPT_SEQ,
            B.DEPT_NAME,
            C.DOC_NO
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON A.EXNP_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO C
        ON
            A.DOC_ID = C.DOC_ID
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </select>

    <select id="getIncpG20List" parameterType="map" resultType="map">
        /*getIncpG20List*/
        SELECT
            1212 AS CO_CD,
            A.PAY_INCP_DET_SN,
            A.PAY_INCP_SN,
            A.EVID_TYPE,
            A.TR_CD,
            B.BUDGET_SN AS BGT_CD,
            REPLACE(B.APP_DE, "-", "") AS IN_DT,
            REPLACE(A.TR_DE, "-", "") AS TAX_DT,
            REPLACE(B.APP_DE, "-", "") AS REG_DT,
            REPLACE(B.PAY_EXNP_DE, "-", "") AS EXEC_DT,
            DATE_FORMAT(now(), '%Y%m%d') AS TXT_DONE_DT,
            IFNULL(A.PMR_NO, "") AS RPMR_NO,
            A.TR_DE AS CNT_DT,
            "" AS DUMMY1,
            "" AS DUMMY2,
            "" AS DUMMY3,
            B.BUSN_CD AS DIV_CD,
            B.BUSN_CD AS DIV_CD2,
            B.G20_DEPT_CD AS DEPT_CD,
            B.G20_EMP_CD AS EMP_CD,
            B.PJT_CD AS MGT_CD,
            "" AS BOTTOM_CD,
            "5" AS DOCU_FG,
            B.APP_CONT AS RMK_DC,
            B.ACC_NM AS BANK_NM1,
            B.ACC_NO AS BA_NB1,
            A.EVID_TYPE,
            A.ETC,
            A.SUP_COST AS SUP_AM,
            A.VAT_COST AS VAT_AM,
            A.CRM_NM AS TR_NM,
            A.CRM_BNK_NM AS BANK_NM2,
            A.CRM_ACC_NO AS BA_NB2,
            A.CRM_ACC_HOLDER AS DEPOSITOR,
            A.CARD AS CTR_NM,
            A.CARD_NO AS CTR_NB,
            "" AS ETCDATA_CD,
            "" AS ETCPER_CD,
            "" AS ETCREG_NO,
            "" AS ETCPER_NM,
            "" AS ETCZIP_CD,
            "" AS ETCADDR,
            "" AS ETCPHONE,
            "" AS ETCBANK_CD,
            "" AS ETCACCT_NO,
            "" AS ETCACCT_NM,
            "" AS ETCRVRS_YM,
            "" AS ETCDIV_CD,
            "" AS ETCDUMMY1
        FROM
            CAM_MNG.DJ_PAY_INCP_DET A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            B.PJT_SN = C.PJT_SN
        WHERE
            A.PAY_INCP_SN = #{payIncpSn}
        <if test='evidTypeArr != null and !"".equals(evidTypeArr)'>
            AND
                A.EVID_TYPE in (${evidTypeArr})
        </if>
    </select>

    <select id="getIncpReG20List" parameterType="map" resultType="map">
        /*getIncpReG20List*/
        SELECT
            1212 AS CO_CD,
            A.PAY_INCP_RE_SN,
            A.PAY_INCP_SN,
            A.EVID_TYPE,
            A.TR_CD,
            B.BUDGET_SN AS BGT_CD,
            REPLACE(A.RE_APP_DE, "-", "") AS IN_DT,
            REPLACE(A.RE_APP_DE, "-", "") AS TAX_DT,
            REPLACE(B.APP_DE, "-", "") AS REG_DT,
            REPLACE(A.RE_APP_DE, "-", "") AS EXEC_DT,
            DATE_FORMAT(now(), '%Y%m%d') AS TXT_DONE_DT,
            IFNULL((SELECT PMR_NO FROM CAM_MNG.DJ_PAY_INCP_DET WHERE PAY_INCP_DET_SN = A.PAY_INCP_DET_SN), IFNULL(B.PMR_NO, "")) AS RPMR_NO,
            A.TR_DE AS CNT_DT,
            "" AS DUMMY1,
            "" AS DUMMY2,
            "" AS DUMMY3,
            B.BUSN_CD AS DIV_CD,
            B.BUSN_CD AS DIV_CD2,
            B.G20_DEPT_CD AS DEPT_CD,
            B.G20_EMP_CD AS EMP_CD,
            B.PJT_CD AS MGT_CD,
            "" AS BOTTOM_CD,
            "89" AS DOCU_FG,
            B.APP_CONT AS RMK_DC,
            B.ACC_NM AS BANK_NM1,
            B.ACC_NO AS BA_NB1,
            A.EVID_TYPE,
            A.ETC,
            A.TOT_COST AS SUP_AM,
            '0' AS VAT_AM,
            A.CRM_NM AS TR_NM,
            A.CRM_BNK_NM AS BANK_NM2,
            A.CRM_ACC_NO AS BA_NB2,
            A.CRM_ACC_HOLDER AS DEPOSITOR,
            A.CARD AS CTR_NM,
            A.CARD_NO AS CTR_NB,
            "" AS ETCDATA_CD,
            "" AS ETCPER_CD,
            "" AS ETCREG_NO,
            "" AS ETCPER_NM,
            "" AS ETCZIP_CD,
            "" AS ETCADDR,
            "" AS ETCPHONE,
            "" AS ETCBANK_CD,
            "" AS ETCACCT_NO,
            "" AS ETCACCT_NM,
            "" AS ETCRVRS_YM,
            "" AS ETCDIV_CD,
            "" AS ETCDUMMY1
        FROM
            CAM_MNG.DJ_PAY_INCP_RE A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            B.PJT_SN = C.PJT_SN
        WHERE
            A.PAY_INCP_RE_SN = #{payIncpReSn} OR A.GROUP_KEY = #{payIncpReSn}
        <if test='evidTypeArr != null and !"".equals(evidTypeArr)'>
            AND
                A.EVID_TYPE in (${evidTypeArr})
        </if>
    </select>

    <select id="getPayAppDetailInfo" parameterType="map" resultType="map">
        /*getPayAppDetailInfo*/
        SELECT
            *, FORMAT(TOT_COST , 0) AS TOT_COST_COMMA
        FROM
            CAM_MNG.DJ_PAY_APP_DET
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </select>

    <select id="getExnpDetailInfo" parameterType="map" resultType="map">
        /*getExnpDetailInfo*/
        SELECT
            *, FORMAT(TOT_COST , 0) AS TOT_COST_COMMA
        FROM
            CAM_MNG.DJ_EXNP_DET
        WHERE
            EXNP_DET_SN = #{exnpDetSn}
    </select>

    <select id="getPartRatePay" parameterType="map" resultType="map">
        /*getPartRatePay*/
        SELECT
            A.*,
            B.*,
            C.*,
            D.*,
            scp.dec_b64('KEY1', C.RES_REGIS_NUM) AS RES_REGIS_NUM2
        FROM
            CAM_PJT_MNG.DJ_PART_RATE_DET A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO C
        ON
            A.PART_EMP_SEQ = C.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        LEFT JOIN
            (SELECT
                 PJT_SN,
                 EMP_SEQ,
                 MON_SAL,
                 CASE
                     WHEN #{month} = '01' THEN MON_PAY_1
                     WHEN #{month} = '02' THEN MON_PAY_2
                     WHEN #{month} = '03' THEN MON_PAY_3
                     WHEN #{month} = '04' THEN MON_PAY_4
                     WHEN #{month} = '05' THEN MON_PAY_5
                     WHEN #{month} = '06' THEN MON_PAY_6
                     WHEN #{month} = '07' THEN MON_PAY_7
                     WHEN #{month} = '08' THEN MON_PAY_8
                     WHEN #{month} = '09' THEN MON_PAY_9
                     WHEN #{month} = '10' THEN MON_PAY_10
                     WHEN #{month} = '11' THEN MON_PAY_11
                     WHEN #{month} = '12' THEN MON_PAY_12
                     END AS MON_SAL_RE
             FROM CAM_PJT_MNG.DJ_PART_PAY_MON WHERE BS_YEAR = #{year}) D
        ON
            A.PJT_SN = D.PJT_SN AND A.PART_EMP_SEQ = D.EMP_SEQ AND A.MON_SAL = D.MON_SAL
        WHERE
            A.PJT_SN = #{pjtSn}
          AND
            #{bsYm} BETWEEN DATE_FORMAT(A.PART_DET_STR_DT, '%Y-%m') AND DATE_FORMAT(A.PART_DET_END_DT, '%Y-%m')
          AND A.PART_RATE_VER_SN = (
                SELECT MAX(A.PART_RATE_VER_SN) FROM CAM_PJT_MNG.DJ_PART_RATE_DET A
                LEFT JOIN CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
                WHERE A.PJT_SN = #{pjtSn} AND #{bsYm} BETWEEN DATE_FORMAT(A.PART_DET_STR_DT, '%Y-%m') AND DATE_FORMAT(A.PART_DET_END_DT, '%Y-%m'))
    </select>

    <select id="getDepositList" parameterType="map" resultType="map">
        /*getDepositList*/
        SELECT * FROM (
            SELECT
                A.*,
                B.DOC_ID,
                B.DOC_STATUS,
                B.PAY_EXNP_DE,
                IFNULL((SELECT DOC_NO FROM dj_camtic.a_doc_info where DOC_ID = B.DOC_ID), '') AS DOC_NO,
                (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_DET WHERE PAY_INCP_SN = A.PAY_INCP_SN) TOT_DET_AMT,
                (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN) TOT_AMT,
                (SELECT MAX(TR_DE) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN) LAST_DT,
                (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y')
                RE_TOT_COST,
                (SELECT COUNT(PAY_INCP_RE_SN) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y')
                RE_CNT
            FROM
                CAM_MNG.DJ_PAY_DEPO A
            LEFT JOIN
                CAM_MNG.DJ_PAY_INCP B
            ON
                A.PAY_INCP_SN = B.PAY_INCP_SN
            WHERE
                1=1
            <if test='eviType != null and !"".equals(eviType)'>
                AND
                    A.EVI_TYPE = #{eviType}
            </if>
            <if test='docStatus != null and !"".equals(docStatus)'>
                AND
                    A.DOC_STATUS = #{docStatus}
            </if>
            AND
                A.APPR_STAT = 'Y'
        ) AA
        WHERE 1=1
        <choose>
            <when test='"A".equals(searchKeyword)'>
                AND
                    AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
            </when>
            <otherwise>
                AND
                    (
                        AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                    )
            </otherwise>
        </choose>
        ORDER BY PAY_DEPO_SN DESC
    </select>

    <insert id="insPayDepo" parameterType="map">
        /*insPayDepo*/
        INSERT INTO CAM_MNG.DJ_PAY_DEPO
            (
                APP_DE,
                PAY_INCP_DE,
                PJT_NM,
                PJT_SN,
                PJT_CD,
                AFT_PJT_SN,
                AFT_PJT_NM,
                BUDGET_NM,
                BUDGET_SN,
                CRM_NM,
                CRM_SN,
                REG_NO,
                EVI_TYPE,
                EMAIL,
                DEPO_MANAGER,
                DEPO_TITLE,
                DEPO_CONT,
                BNK_SN,
                BNK_NM,
                ACC_NM,
                ACC_NO,
                DEPO_AMT,
                GUBUN,
                TAX_CH_GUBUN,
                DEPO_STAT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{appDe},
                #{payIncpDe},
                #{pjtNm},
                #{pjtSn},
                #{pjtCd},
                #{aftPjtSn},
                #{aftPjtNm},
                #{budgetNm},
                #{budgetSn},
                #{crmNm},
                #{crmSn},
                #{regNo},
                #{eviType},
                #{email},
                #{depoManager},
                #{depoTitle},
                #{depoCont},
                #{bnkSn},
                #{bnkNm},
                #{accNm},
                #{accNo},
                #{depoAmt},
                #{gubun},
                #{taxChGubun},
                #{depoStat},
                #{regEmpSeq}
            )
        <selectKey keyProperty="payDepoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_DEPO'
        </selectKey>
    </insert>

    <update id="updPayDepoFile" parameterType="map">
        /*updPayDepoFile*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            FILE_NO = #{file_no}
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <update id="updPayDepo" parameterType="map">
        /*updPayDepo*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            APP_DE = #{appDe},
            PAY_INCP_DE = #{payIncpDe},
            PJT_NM = #{pjtNm},
            PJT_SN = #{pjtSn},
            PJT_CD = #{pjtCd},
            AFT_PJT_SN = #{aftPjtSn},
            AFT_PJT_NM = #{aftPjtNm},
            BUDGET_NM = #{budgetNm},
            BUDGET_SN = #{budgetSn},
            CRM_NM = #{crmNm},
            CRM_SN = #{crmSn},
            REG_NO = #{regNo},
            EVI_TYPE = #{eviType},
            EMAIL = #{email},
            DEPO_MANAGER = #{depoManager},
            DEPO_TITLE = #{depoTitle},
            DEPO_CONT = #{depoCont},
            BNK_SN = #{bnkSn},
            BNK_NM = #{bnkNm},
            ACC_NM = #{accNm},
            ACC_NO = #{accNo},
            DEPO_AMT = #{depoAmt},
            GUBUN = #{gubun},
            DEPO_STAT = #{depoStat},
            TAX_CH_GUBUN = #{taxChGubun},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <select id="getPayDepoData" parameterType="map" resultType="map">
        /*getPayDepoData*/
        SELECT
            A.*,
            B.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS DEPO_EMP_NAME,
            C.*,
            (SELECT PROFIT_CODE FROM CAM_PJT_MNG.DJ_CORP_PROJECT WHERE CORP_PJT_CD = A.PJT_CD) AS PROFIT_CODE,
            (SELECT CRM_CEO FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.CRM_SN) AS CEO_NM
        FROM
            CAM_MNG.DJ_PAY_DEPO A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON
            A.PAY_INCP_SN = B.PAY_INCP_SN
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO C
        ON
            A.FILE_NO = C.FILE_NO
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </select>

    <update id="updPayDepoData" parameterType="map">
        /*updPayDepoData*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            PAY_INCP_SN = #{payIncpSn}
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <delete id="delPayDepo" parameterType="map">
        /*delPayDepo*/
        DELETE FROM CAM_MNG.DJ_PAY_DEPO WHERE PAY_DEPO_SN = #{payDepoSn}
    </delete>

    <update id="updPurcClaimByPayAppSn" parameterType="map">
        /*updPurcClaimByPayAppSn*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            PAY_APP_SN = #{payAppSn}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updPurcBustripByPayAppSn" parameterType="map">
        /*updPurcBustripByPayAppSn*/
        UPDATE CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT
        SET
            PAY_APP_SN = #{payAppSn}
        WHERE
            HR_BIZ_REQ_RESULT_ID = #{hrBizReqResultId}
    </update>

    <update id="updBusinessByPayAppSn" parameterType="map">
        /*updBusinessByPayAppSn*/
        UPDATE CAM_INSIDE.DJ_HR_BIZ_REQ
        SET
            BF_PAY_APP_SN = #{payAppSn}
        WHERE
            HR_BIZ_REQ_ID = #{hrBizReqId}
    </update>

    <update id="updBustripExnpFileCopy" parameterType="map">
        /*updBustripExnpFileCopy*/
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            'payApp',
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            #{payAppSn},
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE FILE_NO in (${bList})
    </update>

    <update id="updSnackExnpFileCopy" parameterType="map">
        /*updSnackExnpFileCopy*/
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            'payApp',
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            #{payAppSn},
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE FILE_NO in (${sList})
    </update>

    <insert id="insPayAppFileCopy" parameterType="map">
        /*insPayAppFileCopy*/
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            'exnp',
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            #{exnpSn},
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE FILE_NO = #{fileNo}
    </insert>

    <update id="updPurcSnackByPayAppSn" parameterType="map">
        /*updPurcSnackByPayAppSn*/
        UPDATE CAM_INSIDE.DJ_SNACK_INFO
        SET
            PAY_APP_SN = #{payAppSn}
        WHERE
            SNACK_INFO_SN = #{snackInfoSn}
    </update>

    <update id="updApprStatus" parameterType="map">
        /*updApprStatus*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            APPR_STAT = 'Y'
        WHERE
            PAY_DEPO_SN = #{payDepoSn}
    </update>

    <select id="getCheckBudget" parameterType="map" resultType="map">
        /*getCheckBudget*/
        SELECT
            SUM(TOT_COST) AS TOT_COST,
            BUDGET_SN,
            BUDGET_AMT
        FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = #{payAppSn} GROUP BY BUDGET_SN
    </select>

    <delete id="delPayApp" parameterType="int">
        /*delPayApp*/
        DELETE FROM CAM_MNG.DJ_PAY_APP
        WHERE
            PAY_APP_SN = #{payAppSn}
    </delete>

    <delete id="updExnpDe" parameterType="map">
        /*updExnpDe*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            PAY_EXNP_DE = #{payExnpDe}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </delete>

    <select id="getPayAppFileList" parameterType="map" resultType="map">
        /*getPayAppFileList*/
        SELECT
            SUB.*
        FROM
        (
            SELECT
                *,
                ROW_NUMBER() OVER (PARTITION BY CONCAT(FILE_ORG_NAME,'.',FILE_EXT), FILE_CD, FILE_PATH ORDER BY FILE_NO DESC) AS row_num
            FROM
                CAM_COMMON.DJ_FILE_INFO
            WHERE
            (
                (CONTENT_ID = #{payAppSn} AND FILE_CD = 'payApp')
                OR FILE_NO IN
                <foreach collection="fileNoAr" item="type" open="(" close=")" separator=",">
                    #{type}
                </foreach>
                OR FILE_NO IN (SELECT FILE_NO FROM CAM_MNG.DJ_PAY_APP_FILE WHERE PAY_APP_SN = #{payAppSn})
                <if test='exnpSn != null and !"".equals(exnpSn)'>
                    OR (CONTENT_ID = #{exnpSn} AND FILE_CD = 'exnp')
                </if>
            )
            AND FILE_CD != 'useCard'
        ) SUB
        WHERE SUB.row_num = 1
        GROUP BY FILE_UUID, FILE_PATH;
    </select>

    <select id="getPayAppDocFileList" parameterType="map" resultType="map">
        /*getPayAppDocFileList*/
        SELECT
            *,
            'Y' AS DOC_YN
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE 1=1
        AND FILE_NO IN (SELECT FILE_NO FROM CAM_COMMON.DJ_FILE_INFO WHERE FILE_CD = 'payApp' AND DOC_ID IN (select doc_id from cam_mng.dj_pay_app where pay_app_sn = #{payAppSn}))
        OR FILE_NO IN (SELECT FILE_NO FROM CAM_COMMON.DJ_FILE_INFO WHERE FILE_CD = 'exnp' AND DOC_ID = #{exnpDocId})
    </select>

    <select id="getPayAppDocFileList2" parameterType="map" resultType="map">
        /*getPayAppDocFileList2*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE 1=1
            AND FILE_NO IN (SELECT FILE_NO FROM CAM_COMMON.DJ_FILE_INFO WHERE FILE_CD = 'payApp' AND DOC_ID IN (select doc_id from cam_mng.dj_pay_app where pay_app_sn = #{payAppSn}))
    </select>

    <delete id="delPayAppFileList" parameterType="map">
        /* delPayAppFileList */
        DELETE FROM CAM_MNG.DJ_PAY_APP_FILE WHERE PAY_APP_SN = #{payAppSn}
    </delete>

    <select id="getExnpFileList" parameterType="map" resultType="map">
        /*getExnpFileList*/
        SELECT
            SUB.*
        FROM
            (
                SELECT
                    *,
                    ROW_NUMBER() OVER (PARTITION BY CONCAT(FILE_ORG_NAME,'.',FILE_EXT), FILE_CD, FILE_PATH ORDER BY FILE_NO DESC) AS row_num
                FROM
                    CAM_COMMON.DJ_FILE_INFO
                WHERE
                    CONTENT_ID = #{exnpSn} AND FILE_CD = 'exnp'
            ) SUB
        WHERE SUB.row_num = 1
        GROUP BY FILE_UUID, FILE_PATH;
    </select>

    <select id="getPayAppInfo" parameterType="map" resultType="map">
        /*getPayAppInfo*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_APP
        WHERE
            PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getPayAppItemList" parameterType="map" resultType="map">
        /*getPayAppItemList*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_APP_DET
        WHERE
            PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getUseCardInfoCheck" parameterType="map" resultType="int">
        /*getUseCardInfoCheck*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            AUTH_NO = #{AUTH_NO}
          AND
            AUTH_HH = #{AUTH_HH}
          AND
            AUTH_DD = #{AUTH_DD}
          AND
            REPLACE(CARD_NO,'-','') = REPLACE(#{CARD_NO},'-','')
          AND
            PAY_APP_SN IS NULL
    </select>

    <select id="getUseCardInfoList" parameterType="map" resultType="map">
        /*getUseCardInfoList*/
        SELECT
            *,
            IFNULL(SNACK_INFO_SN, 0) AS SNACK_INFO_CHK,
            IFNULL(HR_BIZ_REQ_ID, 0) AS BIZ_REQ_CHK,
            IFNULL(HR_BIZ_REQ_RESULT_ID, 0) AS BIZ_REQ_RESULT_CHK,
            IFNULL(CE_GW_IDX, 0) AS CE_GW_CHK
        FROM
            CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            PAY_APP_SN = #{payAppSn}
    </select>

    <insert id="insUseCardInfo" parameterType="map">
        /*insUseCardInfo*/
        INSERT INTO CAM_MNG.DJ_USE_CARD_INFO
            (
                AUTH_NO,
                AUTH_HH,
                AUTH_DD,
                CARD_NO,
                BUY_STS,
                LINK_STAT,
                PAY_APP_SN,
                SNACK_INFO_SN,
                HR_BIZ_REQ_ID,
                HR_BIZ_REQ_RESULT_ID,
                CE_GW_IDX
            )
        VALUES
            (
                #{AUTH_NO},
                #{AUTH_HH},
                #{AUTH_DD},
                #{CARD_NO},
                #{BUY_STS},
                'Y',
                #{PAY_APP_SN},
                #{SNACK_INFO_SN},
                #{HR_BIZ_REQ_ID},
                #{HR_BIZ_REQ_RESULT_ID},
                #{CE_GW_IDX}
            )
    </insert>

    <update id="updUseCardPayApp" parameterType="map">
        /*updUseCardPayApp*/
        UPDATE CAM_MNG.DJ_USE_CARD_INFO
        SET
            PAY_APP_SN = #{PAY_APP_SN}
        WHERE
            AUTH_NO = #{AUTH_NO}
          AND
            AUTH_HH = #{AUTH_HH}
          AND
            AUTH_DD = #{AUTH_DD}
          AND
            REPLACE(CARD_NO,'-','') = REPLACE(#{CARD_NO},'-','')
          AND
            BUY_STS = #{BUY_STS}
          AND
            PAY_APP_SN IS NULL
    </update>

    <update id="updUseCardPayAppNull" parameterType="map">
        /*updUseCardPayAppNull*/
        UPDATE CAM_MNG.DJ_USE_CARD_INFO
        SET
            PAY_APP_SN = NULL
        WHERE
            PAY_APP_SN = #{PAY_APP_SN}
    </update>

    <delete id="delUseCardInfo" parameterType="map">
        /*delUseCardInfo*/
        DELETE FROM CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            PAY_APP_SN = #{PAY_APP_SN}
    </delete>

    <delete id="delBustripUseCardInfo" parameterType="map">
        /*delBustripUseCardInfo*/
        DELETE FROM CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            HR_BIZ_REQ_RESULT_ID = #{HR_BIZ_REQ_RESULT_ID}
    </delete>

    <delete id="delBusiUseCardInfo" parameterType="map">
        /*delBusiUseCardInfo*/
        DELETE FROM CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            HR_BIZ_REQ_ID = #{HR_BIZ_REQ_ID}
    </delete>

    <delete id="delUseEtaxInfo" parameterType="map">
        /*delUseEtaxInfo*/
        DELETE FROM CAM_MNG.DJ_USE_ETAX_INFO
        WHERE
            PAY_APP_SN = #{PAY_APP_SN}
    </delete>

    <select id="getUseEtaxInfoList" parameterType="map" resultType="map">
        /*getUseEtaxInfoList*/
        SELECT
            *,
            IFNULL(CE_GW_IDX, 0) AS CE_GW_CHK
        FROM
            CAM_MNG.DJ_USE_ETAX_INFO
        WHERE
            PAY_APP_SN = #{payAppSn}
    </select>

    <update id="updUseEtaxPayApp" parameterType="map">
        /*updUseEtaxPayApp*/
        UPDATE CAM_MNG.DJ_USE_ETAX_INFO
        SET
            PAY_APP_SN = #{PAY_APP_SN}
        WHERE
            ISS_NO = #{ISS_NO}
          AND
            CO_CD = #{CO_CD}
          AND
            TAX_TY = #{TAX_TY}
          AND
            PAY_APP_SN IS NULL
    </update>

    <update id="updUseEtaxPayAppNull" parameterType="map">
        /*updUseEtaxPayAppNull*/
        UPDATE CAM_MNG.DJ_USE_ETAX_INFO
        SET
            PAY_APP_SN = NULL
        WHERE
            PAY_APP_SN = #{PAY_APP_SN}
    </update>

    <select id="getUseEtaxInfoCheck" parameterType="map" resultType="int">
        /*getUseEtaxInfoCheck*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_USE_ETAX_INFO
        WHERE
            ISS_NO = #{ISS_NO}
          AND
            CO_CD = #{CO_CD}
          AND
            TAX_TY = #{TAX_TY}
          AND
            PAY_APP_SN IS NULL
    </select>

    <select id="getApprovalExnpCommonFileData" parameterType="map" resultType="map">
        /*getApprovalExnpCommonFileData*/
        SELECT
            SUB.*
        FROM
        (
            SELECT
                *,
                ROW_NUMBER() OVER (PARTITION BY CONCAT(FILE_ORG_NAME,'.',FILE_EXT), FILE_CD, FILE_PATH ORDER BY FILE_NO DESC) AS row_num
            FROM
                CAM_COMMON.DJ_FILE_INFO A
            WHERE
                (CONTENT_ID = #{payAppSn} AND FILE_CD = 'payApp')
            OR
                (FILE_NO IN (SELECT FILE_NO FROM CAM_MNG.DJ_PAY_APP_FILE WHERE PAY_APP_SN = #{payAppSn}))
            <if test='exnpSn != null and !"".equals(exnpSn)'>
                OR (CONTENT_ID = #{exnpSn} AND FILE_CD = 'exnp')
            </if>
        ) SUB
        WHERE SUB.row_num = 1
        GROUP BY FILE_UUID, FILE_PATH;
    </select>

    <select id="getApprovalExnpFileData" parameterType="map" resultType="map">
        /*getApprovalExnpFileData*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO A
        WHERE
            FILE_NO = #{FILE_NO}
    </select>

    <select id="getPjtExnpList" parameterType="map" resultType="map">
        /*getPjtExnpList*/
        SELECT
            PA.*,
            CONCAT('[구매] ', MDI.DOC_NO) AS PURC_DOC_NO,
            (SELECT IFNULL(SUM(TOT_COST), 0) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN) AS ITEM_SUM,
            (SELECT IFNULL(SUM(TOT_COST), 0) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN AND COST_STAT = 'Y') AS COST_SUM
        FROM
            CAM_MNG.DJ_PAY_APP PA
        LEFT JOIN
            CAM_MNG.DJ_MNG_PURC MP ON PA.LINK_KEY = MP.PURC_SN AND LINK_KEY_TYPE = '구매'
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO MDI ON MP.DOC_ID = MDI.DOC_ID

        WHERE
            (
                PA.PJT_SN = #{pjtSn}
                OR LEFT(PA.PJT_CD, 9) = (SELECT LEFT(PJT_CD, 9) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
            )
        AND PA.DOC_STATUS NOT IN (0, 30, 40)
    </select>

    <insert id="insProjectTaxInfo" parameterType="map">
        /*insProjectTaxInfo*/
        INSERT INTO CAM_MNG.DJ_DEPO_SETTING
            (
                FR_PJT_SN,
                CODE_VAL,
                PROFIT_CODE,
                PURP_CODE,
                COMM_CODE,
                TAX_GUBUN,
                REG_DT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtSn},
                #{codeVal},
                #{profitCode},
                #{purpCode},
                #{commCode},
                #{taxGubun},
                NOW(),
                #{regEmpSeq}
            )
    </insert>

    <update id="updProjectTaxInfo" parameterType="map">
        /*updProjectTaxInfo*/
        UPDATE CAM_MNG.DJ_DEPO_SETTING
        SET
            CODE_VAL = #{codeVal},
            PROFIT_CODE = #{profitCode},
            PURP_CODE = #{purpCode},
            COMM_CODE = #{commCode},
            TAX_GUBUN = #{taxGubun},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            DEPO_SET_SN = #{depoSetSn}
    </update>

    <select id="getProjectSettingInfo" parameterType="map" resultType="map">
        /*getProjectSettingInfo*/
        SELECT
            A.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.REG_EMP_SEQ = EMP_SEQ) AS REG_EMP_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.MOD_EMP_SEQ = EMP_SEQ) AS MOD_EMP_NAME
        FROM
            CAM_MNG.DJ_DEPO_SETTING A
        WHERE
            DEPO_SET_SN = #{depoSetSn}
    </select>

    <select id="getProjectSettingInfoByPjtSn" parameterType="map" resultType="map">
        /*getProjectSettingInfoByPjtSn*/
        SELECT
            A.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.REG_EMP_SEQ = EMP_SEQ) AS REG_EMP_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.MOD_EMP_SEQ = EMP_SEQ) AS MOD_EMP_NAME
        FROM
            CAM_MNG.DJ_DEPO_SETTING A
        WHERE
            FR_PJT_SN = #{pjtSn}
    </select>

    <insert id="insProjectBudgetInfo" parameterType="map">
        /*insProjectBudgetInfo*/
        INSERT INTO CAM_MNG.DJ_DEPO_SETTING
            (
                FR_PJT_SN,
                EXEC_SYSTEM,
                BUDGET_GUBUN,
                REG_DT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtSn},
                #{execSystem},
                #{budgetGubun},
                NOW(),
                #{regEmpSeq}
            )
    </insert>

    <update id="updProjectBudgetInfo" parameterType="map">
        /*updProjectBudgetInfo*/
        UPDATE CAM_MNG.DJ_DEPO_SETTING
        SET
            EXEC_SYSTEM = #{execSystem},
            BUDGET_GUBUN = #{budgetGubun},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            DEPO_SET_SN = #{depoSetSn}
    </update>

    <update id="payAppRevert" parameterType="map">
        /*payAppRevert*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            DOC_ID = null,
            DOC_STATUS = 0,
            APPROVAL_EMP_SEQ = null,
            REVERT_ISS = #{revertIss},
            REVERT_YN = 'Y'
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <insert id="insPayAppRevert" parameterType="map">
        /*insPayAppRevert*/
        INSERT INTO CAM_MNG.DJ_PAY_APP_REV
            (
                PAY_APP_SN,
                DOC_ID,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{payAppSn},
                #{docId},
                #{regEmpSeq}
            )
    </insert>

    <insert id="insUseEtaxInfo" parameterType="map">
        /*insUseEtaxInfo*/
        INSERT INTO CAM_MNG.DJ_USE_ETAX_INFO
            (
                PAY_APP_SN,
                ISS_NO,
                CO_CD,
                TAX_TY,
                CE_GW_IDX
            )
        VALUES
            (
                #{PAY_APP_SN},
                #{ISS_NO},
                #{CO_CD},
                #{TAX_TY},
                #{CE_GW_IDX}
            )
    </insert>

    <select id="getPayDepoFileList" parameterType="map" resultType="map">
        /* getPayDepoFileList */
        SELECT * FROM CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT FILE_NO
                       FROM CAM_MNG.DJ_PAY_DEPO
                       WHERE PAY_DEPO_SN = #{payDepoSn})
    </select>

    <select id="getPayIncpFileList" parameterType="map" resultType="map">
        /* getPayIncpFileList */
        SELECT * FROM CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = (SELECT FILE_NO
                       FROM CAM_MNG.DJ_PAY_DEPO
                       WHERE PAY_INCP_SN = #{payIncpSn})
    </select>

    <select id="getStoredPayIncpFileList" parameterType="map" resultType="map">
        /* getStoredPayIncpFileList */
        SELECT * FROM CAM_COMMON.DJ_FILE_INFO
        WHERE
            (CONTENT_ID = #{payIncpSn} AND FILE_CD = 'payIncp')
          OR
            FILE_NO = (SELECT FILE_NO
               FROM CAM_MNG.DJ_PAY_DEPO
               WHERE PAY_INCP_SN = #{payIncpSn})
    </select>

    <delete id="delPayIncpFileList" parameterType="map">
        /* delPayIncpFileList */
        DELETE FROM CAM_MNG.DJ_PAY_INCP_FILE WHERE PAY_INCP_SN = #{payIncpSn}
    </delete>

    <select id="getPayExnpFileList" parameterType="map" resultType="map">
        /*getPayExnpFileList*/
        SELECT
            SUB.*
        FROM
        (
            SELECT
                *,
                ROW_NUMBER() OVER (PARTITION BY CONCAT(FILE_ORG_NAME,'.',FILE_EXT), FILE_CD, FILE_PATH ORDER BY FILE_NO DESC) AS row_num
            FROM
                CAM_COMMON.DJ_FILE_INFO
            WHERE
            (
                (CONTENT_ID = #{payAppSn} AND FILE_CD = 'payApp')
                OR FILE_NO IN
                (
                    SELECT FILE_NO FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = #{payAppSn}
                )
                OR FILE_NO IN
                (
                    SELECT FILE_NO FROM CAM_MNG.DJ_PAY_APP_FILE WHERE PAY_APP_SN = #{payAppSn}
                )
                <if test='exnpSn != null and !"".equals(exnpSn)'>
                    OR (CONTENT_ID = #{exnpSn} AND FILE_CD = 'exnp')
                </if>
            )
            AND FILE_CD != 'useCard'
        ) SUB
        WHERE SUB.row_num = 1
        GROUP BY FILE_UUID, FILE_PATH;
    </select>

    <update id="updExnpReFileDeadLine" parameterType="map">
        /*updExnpReFileDeadLine*/
        UPDATE CAM_MNG.DJ_EXNP
        SET
            FILE_DEADLINE = 'Y'
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <select id="getRegIncmReData" parameterType="map" resultType="map">
        /*getRegIncmReData*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_INCP_RE
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </select>

    <insert id="insIncpRe" parameterType="map">
        /*insIncpRe*/
        INSERT INTO CAM_MNG.DJ_PAY_INCP_RE
            (
                PAY_INCP_SN,
                PAY_INCP_DET_SN,
                BUDGET_SN,
                BUDGET_NM,
                EVID_TYPE,
                TR_CD,
                CRM_NM,
                REG_NO,
                CRM_BNK_NM,
                CRM_ACC_NO,
                CRM_ACC_HOLDER,
                RE_APP_DE,
                TR_DE,
                TOT_COST,
                SUP_COST,
                VAT_COST,
                CARD,
                CARD_NO,
                ETC,
                ISS,
                GROUP_KEY,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{PAY_INCP_SN},
                #{PAY_INCP_DET_SN},
                #{BUDGET_SN},
                #{BUDGET_NM},
                #{EVID_TYPE},
                #{TR_CD},
                #{CRM_NM},
                #{REG_NO},
                #{CRM_BNK_NM},
                #{CRM_ACC_NO},
                #{CRM_ACC_HOLDER},
                #{RE_APP_DE},
                #{TR_DE},
                #{TOT_AMT},
                #{SUP_AMT},
                #{VAT_AMT},
                #{CARD},
                #{CARD_NO},
                #{ETC},
                #{ISS},
                #{groupKey},
                #{regEmpSeq}
            )
        <selectKey keyProperty="payIncpReSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PAY_INCP_RE'
        </selectKey>
    </insert>

    <update id="updIncpRe" parameterType="map">
        /*updIncpRe*/
        UPDATE CAM_MNG.DJ_PAY_INCP_RE
        SET
            TOT_COST = #{TOT_AMT},
            SUP_COST = #{SUP_AMT},
            VAT_COST = #{VAT_AMT},
            RE_APP_DE = #{RE_APP_DE}
        WHERE
            PAY_INCP_RE_SN = #{PAY_INCP_RE_SN}
    </update>

    <select id="getPayIncpReData" parameterType="map" resultType="map">
        /*getPayIncpReData*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_INCP_RE
        WHERE
            PAY_INCP_RE_SN = #{payIncpReSn} OR GROUP_KEY = #{payIncpReSn}
    </select>

    <update id="updIncpMasterStat" parameterType="map">
        /*updIncpMasterStat*/
        UPDATE CAM_MNG.DJ_PAY_INCP
        SET
            PMR_NO = #{PMR_NO}
        WHERE
            PAY_INCP_SN = #{PAY_INCP_SN}
    </update>

    <update id="updClaimExnpSn" parameterType="map">
        /*updClaimExnpSn*/
        UPDATE CAM_MNG.DJ_CLAIM_EXNP
        SET
            PAY_APP_SN = #{payAppSn}
        WHERE
            CLAIM_EXNP_SN = #{claimExnpSn}
    </update>

    <select id="getClaimExnpData" parameterType="map" resultType="map">
        /*getClaimExnpData*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_CLAIM_EXNP
        WHERE
            CE_GW_IDX = (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn})
    </select>

    <update id="updCardToPayApp" parameterType="map">
        /*updCardToPayApp*/
        UPDATE CAM_MNG.DJ_CARD_TO
        SET
            FR_KEY = #{payAppSn}
        WHERE
            CARD_TO_SN = #{cardToSn}
    </update>

    <insert id="insPayAppBsYm" parameterType="map">
        /*insPayAppBsYm*/
        INSERT INTO CAM_MNG.DJ_PAY_APP_BS_YM
            (PAY_APP_SN ,PJT_SN ,PJT_CD ,BS_YM)
        VALUE
            (#{payAppSn}, #{pjtSn}, #{pjtCd}, #{bsYm})
    </insert>

    <update id="updPayAppBsYm" parameterType="map">
        /*updPayAppBsYm*/
        UPDATE CAM_MNG.DJ_PAY_APP_BS_YM
        SET
            BS_YM = #{bsYm}
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <delete id="delPayAppBsYm" parameterType="map">
        /*delPayAppBsYm*/
        DELETE FROM CAM_MNG.DJ_PAY_APP_BS_YM WHERE PAY_APP_SN = #{payAppSn}
    </delete>

    <select id="getPartRatePayBsYm" parameterType="map" resultType="map">
        /*getPartRatePayBsYm*/
        SELECT
            GROUP_CONCAT(BS_YM) AS bsYm
        FROM
            CAM_MNG.DJ_PAY_APP_BS_YM
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <delete id="delExnpData" parameterType="map">
        /*delExnpData*/
        DELETE FROM CAM_MNG.DJ_EXNP WHERE EXNP_SN = #{exnpSn}
    </delete>

    <delete id="delExnpDetData" parameterType="map">
        /*delExnpDetData*/
        DELETE FROM CAM_MNG.DJ_EXNP_DET WHERE EXNP_SN = #{exnpSn}
    </delete>

    <update id="updPayAppExnpStatus" parameterType="map">
        /*updPayAppExnpStatus*/
        UPDATE CAM_MNG.DJ_PAY_APP_DET
        SET
            EXNP_STAT = 'N',
            EXNP_SAVE = 'N'
        WHERE
            PAY_APP_DET_SN = #{payAppDetSn}
    </update>

    <select id="getCompletePaymentList" parameterType="map" resultType="map">
        /*getCompletePaymentList*/
        SELECT
            A.PAY_APP_TYPE,
            A.EXNP_SN,
            A.RE_STAT,
            A.DOC_STATUS,
            B.BUDGET_SN,
            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
            B.TOT_COST
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            CAM_MNG.DJ_EXNP_DET B
        ON
            A.EXNP_SN = B.EXNP_SN
        WHERE
            PJT_CD = #{mgtSeq}
        AND
            DOC_STATUS IN (100, 101) AND RE_STAT = 'Y'
        AND B.BUDGET_SN IS NOT NULL
    </select>

    <select id="getApprovePaymentList" parameterType="map" resultType="map">
        /*getApprovePaymentList*/
        SELECT
            A.PAY_APP_TYPE,
            A.EXNP_SN,
            A.RE_STAT,
            A.DOC_STATUS,
            B.BUDGET_SN,
            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
            B.TOT_COST
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            CAM_MNG.DJ_EXNP_DET B
        ON
            A.EXNP_SN = B.EXNP_SN
        WHERE
            PJT_CD = #{mgtSeq}
        AND
            DOC_STATUS IN (100, 101)
        AND
            RE_STAT = 'Y'
        AND B.BUDGET_SN IS NOT NULL
    </select>

    <select id="getWaitPaymentIncpList" parameterType="map" resultType="map">
        /*getWaitPaymentIncpList*/
        SELECT A.PJT_CD, A.BUDGET_SN,
               SUBSTRING(A.BUDGET_SN, 1, 1) AS JANG_SN,
               SUBSTRING(A.BUDGET_SN, 1, 3) AS GWAN_SN,
               B.*
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN CAM_MNG.DJ_PAY_INCP_DET B ON A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            A.PJT_CD = #{mgtSeq}
          AND A.DOC_STATUS = 100
    </select>

    <select id="getApprovePaymentIncpList" parameterType="map" resultType="map">
        /*getApprovePaymentIncpList*/
        SELECT A.PJT_CD, A.BUDGET_SN,
               SUBSTRING(A.BUDGET_SN, 1, 1) AS JANG_SN,
               SUBSTRING(A.BUDGET_SN, 1, 3) AS GWAN_SN,
               B.*
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN CAM_MNG.DJ_PAY_INCP_DET B ON A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            A.PJT_CD = #{mgtSeq}
          AND A.DOC_STATUS = 100
          ANd A.RE_STAT = 'Y'
    </select>

    <select id="getReturnPaymentList" parameterType="map" resultType="map">
        /*getReturnPaymentList*/
        SELECT
            A.PAY_APP_TYPE,
            A.EXNP_SN,
            A.RE_STAT,
            A.DOC_STATUS,
            B.BUDGET_SN,
            SUBSTRING(B.BUDGET_SN, 1, 1) AS JANG_SN,
            SUBSTRING(B.BUDGET_SN, 1, 3) AS GWAN_SN,
            B.TOT_COST
        FROM
            CAM_MNG.DJ_EXNP A
        LEFT JOIN
            CAM_MNG.DJ_EXNP_DET B
        ON
            A.EXNP_SN = B.EXNP_SN
        WHERE
            PJT_CD = #{mgtSeq}
          AND
            DOC_STATUS IN (100, 101)
          AND A.PAY_APP_TYPE = '3'
    </select>

    <select id="getExnpDetOne" parameterType="map" resultType="map">
        /*getExnpDetOne*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_EXNP_DET
        WHERE
            EXNP_SN = #{exnpSn}
        ORDER BY PMR_NO DESC
        LIMIT 1
    </select>

    <update id="updExnpReStat" parameterType="map">
        /*updExnpReStat*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            EXNP_STAT = "N",
            EXNP_CNT = 0
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="updateExnpDe" parameterType="map">
        /*updateExnpDe*/
        UPDATE CAM_MNG.DJ_EXNP
        SET
            DT3 = #{exnpDe},
            EXNP_DE = #{exnpDe}
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <update id="resolutionIncpReStatus" parameterType="map">
        /*resolutionIncpReStatus*/
        UPDATE CAM_MNG.DJ_PAY_INCP_RE
        SET
            RE_STAT = 'N'
        WHERE
            PAY_INCP_RE_SN = #{payIncpReSn}
    </update>

    <update id="updExnpNullStat" parameterType="map" >
        /*updExnpNullStat*/
        UPDATE CAM_MNG.DJ_EXNP_DET
        SET
            PMR_NO = null
        WHERE
            EXNP_SN = #{exnpSn}
    </update>

    <select id="getIncpDetOne" parameterType="map" resultType="map">
        /*getIncpDetOne*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_INCP_RE
        WHERE
            PAY_INCP_RE_SN = #{payIncpReSn}
        ORDER BY PMR_NO DESC
        LIMIT 1
    </select>


    <select id="getCompleteIncpList" parameterType="map" resultType="map">
        /*getCompleteIncpList*/
        SELECT A.PJT_CD, A.BUDGET_SN,
               SUBSTRING(A.BUDGET_SN, 1, 1) AS JANG_SN,
               SUBSTRING(A.BUDGET_SN, 1, 3) AS GWAN_SN,
               PAY_INCP_RE_SN,
               B.PAY_INCP_SN, B.BUDGET_SN, B.BUDGET_NM, EVID_TYPE, TR_CD,
               CRM_NM, REG_NO, CRM_BNK_NM, CRM_ACC_NO, CRM_ACC_HOLDER, RE_APP_DE,
               TR_DE, TOT_COST, SUP_COST, VAT_COST, CARD, CARD_NO, ETC, ISS,
               DET_STAT, EXNP_STAT, EXNP_CNT, B.PMR_NO, B.RE_STAT
        FROM
            CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN CAM_MNG.DJ_PAY_INCP_RE B ON A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            A.PJT_CD = #{mgtSeq}
        AND A.DOC_STATUS = 100 AND PAY_INCP_RE_SN IS NOT NULL
        UNION ALL
        SELECT A.PJT_CD, A.BUDGET_SN,
               SUBSTRING(A.BUDGET_SN, 1, 1) AS JANG_SN,
               SUBSTRING(A.BUDGET_SN, 1, 3) AS GWAN_SN,
               PAY_INCP_DET_SN AS PAY_INCP_RE_SN,
               C.PAY_INCP_SN, C.BUDGET_SN, C.BUDGET_NM, EVID_TYPE, TR_CD,
               CRM_NM, REG_NO, CRM_BNK_NM, CRM_ACC_NO, CRM_ACC_HOLDER, '' AS RE_APP_DE,
               TR_DE, TOT_COST, SUP_COST, VAT_COST, CARD, CARD_NO, ETC, ISS,
               DET_STAT, EXNP_STAT, EXNP_CNT, C.PMR_NO, '' AS RE_STAT
        FROM CAM_MNG.DJ_PAY_INCP A
        LEFT JOIN CAM_MNG.DJ_PAY_INCP_DET C ON A.PAY_INCP_SN = C.PAY_INCP_SN
        WHERE
            A.PJT_CD = #{mgtSeq}
        AND A.DOC_STATUS = 100 AND C.PMR_NO IS NOT NULL AND EVID_TYPE IN (2,4,6,7)
    </select>

    <update id="updPayIncpNull" parameterType="map">
        /*updPayIncpNull*/
        UPDATE CAM_MNG.DJ_PAY_DEPO
        SET
            PAY_INCP_SN = NULL
        WHERE
            PAY_INCP_SN = #{payIncpSn}
    </update>

    <delete id="delIncpData" parameterType="map">
        /*delIncpData*/
        DELETE FROM CAM_MNG.DJ_PAY_INCP
        WHERE PAY_INCP_SN = #{payIncpSn}
    </delete>

    <delete id="delIncpDetData" parameterType="map">
        /*delIncpDetData*/
        DELETE FROM CAM_MNG.DJ_PAY_INCP_DET
        WHERE PAY_INCP_SN = #{payIncpSn}
    </delete>

    <delete id="delIncpRe" parameterType="map">
        /*delIncpRe*/
        DELETE FROM CAM_MNG.DJ_PAY_INCP_RE
        WHERE
            PAY_INCP_RE_SN = #{payIncpReSn} OR GROUP_KEY = #{payIncpReSn}
    </delete>

    <select id="getTaxMap" parameterType="map" resultType="map">
        /*getTaxMap*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PAY_RATE
        WHERE
            PAY_APP_DET_SN = #{PAY_APP_DET_SN}
    </select>

    <update id="updHrBizReqResultByPayAppSnEqNull" parameterType="map">
        /*updHrBizReqResultByPayAppSnEqNull*/
        UPDATE CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT
        SET
            PAY_APP_SN = NULL
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updHrBizReqByPayAppSnEqNull" parameterType="map">
        /*updHrBizReqByPayAppSnEqNull*/
        UPDATE CAM_INSIDE.DJ_HR_BIZ_REQ
        SET
            BF_PAY_APP_SN = NULL
        WHERE
            BF_PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updClaimExnpByPayAppSnEqNull" parameterType="map">
        /*updClaimExnpByPayAppSnEqNull*/
        UPDATE CAM_MNG.DJ_CLAIM_EXNP
        SET
            PAY_APP_SN = NULL
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <update id="updSnackByPayAppSnEqNull" parameterType="map">
        /*updSnackByPayAppSnEqNull*/
        UPDATE CAM_INSIDE.DJ_SNACK_INFO
        SET
            PAY_APP_SN = NULL
        WHERE
            PAY_APP_SN = #{payAppSn}
    </update>

    <select id="getDepoInfo" parameterType="map" resultType="map">
        /*getDepoInfo*/
        SELECT
            A.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.REG_EMP_SEQ = EMP_SEQ) AS REG_EMP_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.MOD_EMP_SEQ = EMP_SEQ) AS MOD_EMP_NAME
        FROM
            CAM_MNG.DJ_DEPO_SETTING A
        WHERE
            PJT_CD = #{pjtCd}
        ORDER BY DEPO_SET_SN DESC
            LIMIT 1
    </select>
</mapper>