<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="card">

    <select id="cardUseList" parameterType="map" resultType="map">
        /*cardUseList*/
        SELECT
            A.*,
            B.*,
            C.*,
            CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = F.DEPT_SEQ), " ", E.USE_EMP_NAME) AS USE_MEM
        FROM
            CAM_HR.ERP_HIST_CORPCD_USE A
        LEFT JOIN
            CAM_MNG.DJ_CARD_INFO B
        ON
            A.CARD_NO = REPLACE(B.CARD_BA_NB, '-', '')
        LEFT JOIN
            CAM_MNG.DJ_USE_CARD_INFO C
        ON
            A.AUTH_NO = C.AUTH_NO AND A.AUTH_DD = C.AUTH_DD AND A.AUTH_HH = C.AUTH_HH AND A.BUY_STS = C.BUY_STS AND A.CARD_NO = REPLACE(C.CARD_NO, "-", "")
        LEFT JOIN
            CAM_MNG.DJ_CARD_TO_HIST D
        ON
            A.AUTH_NO = D.AUTH_NO AND A.AUTH_DD = D.AUTH_DD AND A.AUTH_HH = D.AUTH_HH AND A.BUY_STS = D.BUY_STS AND A.CARD_NO = REPLACE(D.CARD_NO, "-", "")
        LEFT JOIN
            CAM_MNG.DJ_CARD_TO E
        ON
            D.CARD_TO_SN = E.CARD_TO_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO F
        ON
            E.USE_EMP_SEQ = F.EMP_SEQ
        WHERE 1=1
        <if test='startDt != null and !"".equals(startDt)'>
        <![CDATA[
            AND
                DATE_FORMAT(#{startDt}, '%Y%m%d') <= A.AUTH_DD
            AND
                DATE_FORMAT(#{endDt}, '%Y%m%d') >= A.AUTH_DD
        ]]>
        </if>
        <if test='searchValue != null and !"".equals(searchValue)'>
            AND (B.TR_NM LIKE CONCAT('%', REPLACE(#{searchValue}, '-', ''), '%')
                OR A.CARD_NO LIKE CONCAT('%', REPLACE(#{searchValue}, '-', ''), '%'))
        </if>
        AND
            C.USE_CARD_SN IS NULL
        ORDER BY A.AUTH_DD DESC
    </select>

    <select id="cardToUseList" parameterType="map" resultType="map">
        /*cardToUseList*/
        SELECT
            *
        FROM
            CAM_HR.ERP_HIST_CORPCD_USE A
        LEFT JOIN
            CAM_MNG.DJ_CARD_INFO B
        ON
            A.CARD_NO = REPLACE(B.CARD_BA_NB, '-', '')
        LEFT JOIN
            CAM_MNG.DJ_CARD_TO_HIST C
        ON
            A.AUTH_NO = C.AUTH_NO AND A.AUTH_DD = C.AUTH_DD AND A.AUTH_HH = C.AUTH_HH AND A.BUY_STS = C.BUY_STS AND A.CARD_NO = REPLACE(C.CARD_NO, "-", "")

        WHERE 1=1
        <if test='startDt != null and !"".equals(startDt)'>
            <![CDATA[
            AND
                DATE_FORMAT(#{startDt}, '%Y%m%d') <= A.AUTH_DD
            AND
                DATE_FORMAT(#{endDt}, '%Y%m%d') >= A.AUTH_DD
        ]]>
        </if>
        <if test='searchValue != null and !"".equals(searchValue)'>
            AND (B.TR_NM LIKE CONCAT('%', REPLACE(#{searchValue}, '-', ''), '%')
            OR A.CARD_NO LIKE CONCAT('%', REPLACE(#{searchValue}, '-', ''), '%'))
        </if>
        ORDER BY A.AUTH_DD DESC
    </select>

    <select id="useCardDetailInfo" parameterType="map" resultType="map">
        /*useCardDetailInfo*/
        SELECT
            *
        FROM
            CAM_HR.ERP_HIST_CORPCD_USE
        WHERE
            AUTH_NO = #{authNo} AND CARD_NO = #{cardNo}
        AND
            AUTH_DD = #{authDate} AND AUTH_HH = #{authTime}
        AND
            BUY_STS = #{buySts}
    </select>

    <select id="getCardTOData" parameterType="map" resultType="map">
        /*getCardTOData*/
        SELECT
            A.*,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = B.DEPT_SEQ) AS TEAM_NAME
        FROM
            CAM_MNG.DJ_CARD_TO A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON
            A.USE_EMP_SEQ = B.EMP_SEQ
        WHERE DEL_YN = 'N'
    </select>

    <insert id="saveRegCardTo" parameterType="map">
        /*saveRegCardTo*/
        INSERT INTO CAM_MNG.DJ_CARD_TO
            (
                TR_CD,
                JIRO_NM,
                BA_NB,
                DEPOSITOR,
                TR_NM,
                CARD_BA_NB,
                USE_EMP_SEQ,
                USE_EMP_NAME,
                CARD_TO_DE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{trCd},
                #{jiroNm},
                #{baNb},
                #{depositor},
                #{trNm},
                #{cardBaNb},
                #{empSeq},
                #{empName},
                #{cardToDe},
                #{regEmpSeq}
            )
    </insert>

    <update id="delCardTo" parameterType="map">
        /*delCardTo*/
        UPDATE CAM_MNG.DJ_CARD_TO
        SET
            DEL_YN = 'Y'
        WHERE
            CARD_TO_SN = #{cardToSn}
    </update>

    <delete id="delCardHist" parameterType="map">
        /*delCardHist*/
        DELETE FROM CAM_MNG.DJ_CARD_TO_HIST WHERE CARD_TO_HIST_SN = #{cardHistSn}
    </delete>

    <select id="getCardToInfo" parameterType="map" resultType="map">
        /*getCardToInfo*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_CARD_TO
        WHERE
            CARD_TO_SN = #{cardToSn}
    </select>

    <select id="getCardUseCheck" parameterType="map" resultType="int">
        /*getCardUseCheck*/
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_CARD_TO
        WHERE
            CARD_BA_NB = #{cardBaNb}
        AND
            RT_YN = 'N'
        AND
            DEL_YN = 'N'
    </select>

    <update id="updRegCardTo" parameterType="map">
        /*updRegCardTo*/
        UPDATE
            CAM_MNG.DJ_CARD_TO
        SET
            TR_CD = #{trCd},
            JIRO_NM = #{jiroNm},
            BA_NB = #{baNb},
            DEPOSITOR = #{depositor},
            TR_NM = #{trNm},
            CARD_BA_NB = #{cardBaNb},
            USE_EMP_SEQ = #{empSeq},
            USE_EMP_NAME = #{empName},
            CARD_TO_DE = #{cardToDe},
            REG_EMP_SEQ = #{regEmpSeq}
        WHERE
            CARD_TO_SN = #{cardToSn}
    </update>

    <insert id="insUseCardHist" parameterType="map">
        /*insUseCardHist*/
        INSERT INTO CAM_MNG.DJ_CARD_TO_HIST
            (
                CARD_TO_SN,
                CARD_NO,
                AUTH_NO,
                AUTH_DD,
                AUTH_HH,
                BUY_STS
            )
        VALUES
            (
                #{CARD_TO_SN},
                #{CARD_NO},
                #{AUTH_NO},
                #{AUTH_DD},
                #{AUTH_HH},
                #{BUY_STS}
            )
    </insert>

    <select id="getCardTOHistList" parameterType="map" resultType="map">
        /*getCardTOHistList*/
        SELECT
            A.*, C.*,
            (SELECT RT_YN FROM CAM_MNG.DJ_CARD_TO WHERE CARD_TO_SN = A.CARD_TO_SN) as RT_YN
        FROM
            CAM_MNG.DJ_CARD_TO_HIST A
        LEFT JOIN
            CAM_HR.ERP_HIST_CORPCD_USE C
        ON
            A.AUTH_NO = C.AUTH_NO AND A.AUTH_DD = C.AUTH_DD AND A.AUTH_HH = C.AUTH_HH AND A.BUY_STS = C.BUY_STS AND A.CARD_NO = REPLACE(C.CARD_NO, "-", "")
        WHERE
            A.CARD_TO_SN = #{cardToSn}
    </select>

    <update id="updCardFromDe" parameterType="map">
        /*updCardFromDe*/
        UPDATE CAM_MNG.DJ_CARD_TO
        SET
            CARD_FROM_DE = #{cardFromDe},
            RT_YN = 'Y'
        WHERE
            CARD_TO_SN = #{cardToSn}
    </update>

    <insert id="saveCardUserGroup" parameterType="map">
        INSERT INTO CAM_MNG.DJ_CARD_USER_GROUP
            (
                 GROUP_NAME
                , REG_EMP_SEQ
                , REG_EMP_NAME
                , REG_DEPT_NAME
                , USE_YN
            )
        VALUES
            (
                #{groupNm}
                , #{regEmpSeq}
                , #{regEmpName}
                , #{regDeptName}
                , #{useYn}
            )

        <selectKey keyProperty="groupId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_CARD_USER_GROUP'
        </selectKey>
    </insert>

    <update id="updateCardUserGroup" parameterType="map">
        UPDATE CAM_MNG.DJ_CARD_USER_GROUP
        SET
            GROUP_NAME = #{groupNm},
            REG_EMP_SEQ = #{regEmpSeq},
            REG_EMP_NAME = #{regEmpName},
            REG_DEPT_NAME = #{regDeptName},
            USE_YN = #{useYn},
            MOD_DT = NOW()
        WHERE
            GROUP_ID = #{groupId}
    </update>

    <insert id="saveCardUserGroupList" parameterType="map">
        INSERT INTO CAM_MNG.DJ_CARD_USER_GROUP_LIST
            (GROUP_ID, EMP_NAME, EMP_SEQ, DEPT_NAME, DEPT_SEQ, POSITION_NAME)
        VALUES
            (#{groupId}, #{empName}, #{empSeq}, #{deptName}, #{deptSeq}, #{positionName})
    </insert>

    <insert id="saveCardUserGroupSel" parameterType="map">

        INSERT INTO CAM_MNG.DJ_CARD_USER_GROUP_SEL
            (GROUP_ID, TR_CD, TR_NM, CARD_BA_NB, CLTTR_CD, JIRO_NM, BA_NB, DEPOSITOR)
        values
            (#{groupId}, #{TR_CD}, #{TR_NM}, #{CARD_BA_NB}, #{CLTTR_CD}, #{JIRO_NM}, #{BA_NB}, #{DEPOSITOR})
    </insert>

    <select id="getCardUserGroup" parameterType="map" resultType="map">
        SELECT
            DCUR.*,
            DCUGS.GROUP_ID AS chkSel
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP DCUR
        LEFT JOIN
            CAM_MNG.DJ_CARD_USER_GROUP_SEL DCUGS on DCUR.GROUP_ID = DCUGS.GROUP_ID
        WHERE 1=1
        <if test='groupName != null and !"".equals(groupName)'>
        AND
            GROUP_NAME LIKE CONCAT('%', #{groupName} ,'%')
        </if>
        GROUP BY DCUR.GROUP_ID
    </select>

    <select id="getcardUserGroupList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP_LIST
        WHERE
            GROUP_ID = #{groupId}
    </select>

    <delete id="delCardUserGroup" parameterType="map">
        DELETE FROM CAM_MNG.DJ_CARD_USER_GROUP WHERE GROUP_ID = #{groupId}
    </delete>

    <delete id="delCardUserGroupList" parameterType="map">
        DELETE FROM CAM_MNG.DJ_CARD_USER_GROUP_LIST WHERE GROUP_ID = #{groupId}
    </delete>

    <select id="getCardUserGroupOne" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP
        WHERE
            GROUP_ID = #{groupId}
    </select>

    <select id="getCardUserGroupCheck" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP
        WHERE
            GROUP_ID = #{groupId}
    </select>

    <delete id="delGroupUser" parameterType="map">
        DELETE FROM CAM_MNG.DJ_CARD_USER_GROUP_LIST WHERE GROUP_USER_ID = #{groupUserId} AND GROUP_ID = #{groupId}
    </delete>

    <select id="getCardGroupCheck" parameterType="map" resultType="map">
        SELECT
            CARD_BA_NB,
            TR_CD,
            GROUP_ID
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP_SEL
    </select>

    <select id="getCardGroupNumCheck" parameterType="map" resultType="map">
        SELECT
            GROUP_CONCAT(CARD_BA_NB) AS CARD_BA_NB,
            GROUP_CONCAT(TR_CD) AS TR_CD
        FROM
            CAM_MNG.DJ_CARD_USER_GROUP_SEL
    </select>

    <delete id="saveCardUserGroupSelCancle" parameterType="map">
        DELETE FROM CAM_MNG.DJ_CARD_USER_GROUP_SEL WHERE GROUP_ID = #{groupId} AND CARD_BA_NB = #{CARD_BA_NB} AND TR_CD = #{TR_CD}
    </delete>
</mapper>