<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="budget">


    <select id="getBudgetList" parameterType="map" resultType="map">
        /*getBudgetList*/
        SELECT *
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            BS_YEAR = #{baseYear}
        <if test='budgetType != null and !"".equals(budgetType)'>
            AND
                BG_VAL = #{budgetType}
        </if>
    </select>

    <select id="getBudgetAList" parameterType="map" resultType="map">
        /*getBudgetAList*/
        SELECT *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A
    </select>

    <select id="getBudgetBList" parameterType="map" resultType="map">
        /*getBudgetBList*/
        SELECT *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B
    </select>

    <insert id="insBudgetAData" parameterType="map">
        /*insBudgetAData*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_BUDGET_A
            (
                PJT_CLASS,
                BS_YEAR,
                JANG_CD,
                JANG_NM,
                GWAN_CD,
                GWAN_NM,
                HANG_CD,
                HANG_NM,
                BUDGET_AMT,
                BUDGET_TYPE_CD,
                BUDGET_TYPE,
                CD_REG_DE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtClass},
                #{baseYear},
                #{jangCd},
                #{jang},
                #{gwanCd},
                #{gwan},
                #{hangCd},
                #{hang},
                #{budgetAmt},
                #{budgetTypeCd},
                #{budgetType},
                #{regDt},
                #{regEmpSeq}
            )
    </insert>

    <insert id="insBudgetBData" parameterType="map">
        /*insBudgetBData*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_BUDGET_B
            (
                PJT_CLASS,
                BS_YEAR,
                JANG_CD,
                JANG_NM,
                GWAN_CD,
                GWAN_NM,
                HANG_CD,
                HANG_NM,
                BUDGET_AMT,
                CD_REG_DE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtClass},
                #{baseYear},
                #{jangCd},
                #{jang},
                #{gwanCd},
                #{gwan},
                #{hangCd},
                #{hang},
                #{budgetAmt},
                #{regDt},
                #{regEmpSeq}
            )
    </insert>

    <select id="getBudgetACdCheck" parameterType="map" resultType="int">
        /*getBudgetACdCheck*/
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A
        WHERE
            BS_YEAR = #{baseYear} AND JANG_CD = #{jangCd} AND GWAN_CD = #{gwanCd} AND HANG_CD = #{hangCd} AND BUDGET_TYPE_CD = #{budgetTypeCd}
    </select>

    <select id="getBudgetBCdCheck" parameterType="map" resultType="int">
        /*getBudgetBCdCheck*/
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B
        WHERE
            BS_YEAR = #{baseYear} AND JANG_CD = #{jangCd} AND GWAN_CD = #{gwanCd} AND HANG_CD = #{hangCd} AND BUDGET_TYPE_CD = #{budgetTypeCd}
    </select>

    <select id="getBudgetAData" parameterType="map" resultType="map">
        /*getBudgetAData*/
        SELECT *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </select>

    <select id="getBudgetBData" parameterType="map" resultType="map">
        /*getBudgetBData*/
        SELECT *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </select>

    <update id="updBudgetAData" parameterType="map">
        /*updBudgetAData*/
        UPDATE CAM_PJT_MNG.DJ_PJT_BUDGET_A
        SET
            JANG_CD = #{jangCd},
            JANG_NM = #{jang},
            GWAN_CD = #{gwanCd},
            GWAN_NM = #{gwan},
            HANG_CD = #{hangCd},
            HANG_NM = #{hang},
            MOD_EMP_SEQ = #{regEmpSeq},
            BUDGET_AMT = #{budgetAmt},
            BUDGET_TYPE_CD = #{budgetTypeCd},
            BUDGET_TYPE = #{budgetType},
            MOD_DT = now()
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </update>

    <update id="updBudgetBData" parameterType="map">
        /*updBudgetBData*/
        UPDATE CAM_PJT_MNG.DJ_PJT_BUDGET_B
        SET
            JANG_CD = #{jangCd},
            JANG_NM = #{jang},
            GWAN_CD = #{gwanCd},
            GWAN_NM = #{gwan},
            HANG_CD = #{hangCd},
            HANG_NM = #{hang},
            MOD_EMP_SEQ = #{regEmpSeq},
            BUDGET_AMT = #{budgetAmt},
            MOD_DT = now()
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </update>

    <insert id="insBudgetAHist" parameterType="map">
        /*insBudgetHist*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_BUDGET_A_HIST
            (
                PJT_BUDGET_SN,
                PJT_CLASS,
                BS_YEAR,
                BG_VAL,
                JANG_CD,
                JANG_NM,
                GWAN_CD,
                GWAN_NM,
                HANG_CD,
                HANG_NM,
                BUDGET_AMT,
                BUDGET_TYPE_CD,
                BUDGET_TYPE,
                DD_LINE_STAT,
                CD_REG_DE,
                REG_DT,
                REG_EMP_SEQ,
                MOD_DT,
                MOD_EMP_SEQ
            )
        (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A WHERE PJT_BUDGET_SN = #{pjtBudgetSn})
    </insert>

    <insert id="insBudgetBHist" parameterType="map">
        /*insBudgetHist*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_BUDGET_B_HIST
            (
                 PJT_BUDGET_SN,
                 PJT_CLASS,
                 BS_YEAR,
                 BG_VAL,
                 JANG_CD,
                 JANG_NM,
                 GWAN_CD,
                 GWAN_NM,
                 HANG_CD,
                 HANG_NM,
                 BUDGET_AMT,
                 BUDGET_TYPE_CD,
                 BUDGET_TYPE,
                 DD_LINE_STAT,
                 CD_REG_DE,
                 REG_DT,
                 REG_EMP_SEQ,
                 MOD_DT,
                 MOD_EMP_SEQ
            )
        (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B WHERE PJT_BUDGET_SN = #{pjtBudgetSn})
    </insert>

    <select id="getPreConditionA" parameterType="map" resultType="map">
        /*getPreConditionA*/
        SELECT
            A.BG_VAL,
            A.PJT_CLASS,
            IFNULL(SUM(BUDGET_AMT), 0) AS SUM_BUDGET_AMT,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'),0) AS SUM_EXNP_AMT,
            IFNULL(IFNULL(SUM(BUDGET_AMT), 0) - IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'),0),0) AS BUDGET_AMT
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A A
        WHERE
            A.BS_YEAR = #{baseYear}
        GROUP BY PJT_CLASS
    </select>

    <select id="getPreConditionB" parameterType="map" resultType="map">
        /*getPreConditionB*/
        SELECT
            A.BG_VAL,
            A.PJT_CLASS,
            IFNULL(SUM(BUDGET_AMT), 0) AS SUM_BUDGET_AMT,
            IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'),0) AS SUM_EXNP_AMT,
            IFNULL(IFNULL(SUM(BUDGET_AMT), 0) - IFNULL((SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_EXNP_DET WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'),0),0) AS BUDGET_AMT
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B A
        WHERE
            A.BS_YEAR = #{baseYear}
        GROUP BY PJT_CLASS
    </select>

    <delete id="delPjtBudgetA" parameterType="map">
        /*delPjtBudgetA*/
        DELETE FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A
        WHERE
            PJT_BUDGET_SN IN (${aItemArr})
    </delete>

    <delete id="delPjtBudgetB" parameterType="map">
        /*delPjtBudgetB*/
        DELETE FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B
        WHERE
            PJT_BUDGET_SN IN (${bItemArr})
    </delete>

    <update id="regCloseBudgetA" parameterType="map">
        /*regCloseBudgetA*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_BUDGET_A
        SET
            DD_LINE_STAT = 'Y',
            MOD_DT = NOW()
        WHERE
            BS_YEAR = #{baseYear}
    </update>

    <update id="regCloseBudgetB" parameterType="map">
        /*regCloseBudgetB*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_BUDGET_B
        SET
            DD_LINE_STAT = 'Y',
            MOD_DT = NOW()
        WHERE
            BS_YEAR = #{baseYear}
    </update>

    <select id="getBudgetDetR" parameterType="map" resultType="map">
        /*getBudgetDetR*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(TOT_COST) FROM cam_mng.dj_exnp_det WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'), 0) AS EXNP_AMT
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            A.BS_YEAR = #{baseYear}
          AND
            A.PJT_CLASS = 'R'
    </select>

    <select id="getBudgetDetM" parameterType="map" resultType="map">
        /*getBudgetDetM*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(TOT_COST) FROM cam_mng.dj_exnp_det WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'), 0) AS EXNP_AMT
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            A.BS_YEAR = #{baseYear}
          AND
            A.PJT_CLASS = 'M'
    </select>

    <select id="getBudgetDetS" parameterType="map" resultType="map">
        /*getBudgetDetS*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(TOT_COST) FROM cam_mng.dj_exnp_det WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'), 0) AS EXNP_AMT
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            A.BS_YEAR = #{baseYear}
          AND
            A.PJT_CLASS = 'S'
    </select>

    <select id="getBudgetDetD" parameterType="map" resultType="map">
        /*getBudgetDetD*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(TOT_COST) FROM cam_mng.dj_exnp_det WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'), 0) AS EXNP_AMT
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            A.BS_YEAR = #{baseYear}
          AND
            A.PJT_CLASS = 'D'
    </select>

    <select id="getBudgetDetV" parameterType="map" resultType="map">
        /*getBudgetDetV*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(TOT_COST) FROM cam_mng.dj_exnp_det WHERE BUDGET_SN = CONCAT(A.JANG_CD, A.GWAN_CD, A.HANG_CD) AND EXNP_STAT = 'Y'), 0) AS EXNP_AMT
        FROM
            (SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_A
             UNION ALL
             SELECT * FROM CAM_PJT_MNG.DJ_PJT_BUDGET_B) A
        WHERE
            A.BS_YEAR = #{baseYear}
          AND
            A.PJT_CLASS = 'V'
    </select>

    <select id="getPjtBudgetAHistList" parameterType="map" resultType="map">
        /*getPjtBudgetAHistList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_A_HIST
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </select>

    <select id="getPjtBudgetBHistList" parameterType="map" resultType="map">
        /*getPjtBudgetBHistList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_BUDGET_B_HIST
        WHERE
            PJT_BUDGET_SN = #{pjtBudgetSn}
    </select>
</mapper>