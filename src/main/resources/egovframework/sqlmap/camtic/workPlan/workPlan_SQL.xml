<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="workPlan">

    <select id="getWorkPlanReqChangeList" resultType="map" parameterType="map">
        /* getWorkPlanReqChangeList */

        SELECT
        WPC.WORK_PLAN_CHANGE_ID,
        DATE_FORMAT(WPC.REQUEST_DATE, '%Y-%m-%d') AS REQUEST_DATE,
        (
        CASE WHEN WPC.WORK_PLAN_TYPE = 101 THEN '시차출퇴근제'
        WHEN WPC.WORK_PLAN_TYPE = 102 THEN '시간제근무제'
        WHEN WPC.WORK_PLAN_TYPE = 103 THEN '선택제근무제'
        END
        ) AS WORK_PLAN_TYPE,
        CONCAT(DATE_FORMAT(WPC.START_DATE, '%Y년 %m월 %d일'), ' ~ ', DATE_FORMAT(WPC.END_DATE, '%Y년 %m월 %d일')) AS APPLY_DATE,
        GROUP_CONCAT(DISTINCT WPCD.WEEKDAY SEPARATOR '|') AS WEEKDAY,
        GROUP_CONCAT(DISTINCT WPCD.WORK_PLAN_CHANGE_DETAIL_ID SEPARATOR '|') AS WORK_PLAN_CHANGE_DETAIL_ID,
        DATE_FORMAT(WPC.REG_DATE, '%Y-%m-%d') AS REG_DATE,
        DATE_FORMAT(WPC.REQUEST_DATE, '%Y-%m-%d') AS REQUEST_DATE,
        WPC.STATUS,
        WPC.APPR_STAT,
        WPC.APPR_STAT AS apprStat,
        WPC.APPLY_REASON,
        (SELECT APPROVAL_STAT FROM CAM_APPROVAL.DJ_APPROVAL_BOX WHERE CONNECTION_KEY = WPC.WORK_PLAN_CHANGE_ID AND CONNECTION_TYPE = 'workPlan' ) as AB_APPR_STAT,
        EI.*
        FROM
        CAM_INSIDE.DJ_WORK_PLAN_CHANGE WPC
        JOIN
        CAM_INSIDE.DJ_WORK_PLAN_CHANGE_DETAIL WPCD
        ON WPC.WORK_PLAN_CHANGE_ID = WPCD.WORK_PLAN_CHANGE_ID
        JOIN
        CAM_HR.DJ_EMP_INFO EI
        ON WPC.REQUEST_EMP_SEQ = EI.EMP_SEQ
        WHERE
        WPC.ACTIVE = 'Y'
        <if test="empSeq != null and empSeq != ''">
            AND WPC.REQUEST_EMP_SEQ = #{empSeq}
        </if>

        <if test="startDay != null and startDay != '' and endDay != null and endDay != ''">
        <![CDATA[
        AND
            DATE_FORMAT(#{startDay}, '%Y%m%d') <= DATE_FORMAT(WPC.REG_DATE, '%Y%m%d')
        AND
            DATE_FORMAT(#{endDay}, '%Y%m%d') >= DATE_FORMAT(WPC.REG_DATE, '%Y%m%d')
        ]]>
        </if>
        GROUP BY
        WPC.WORK_PLAN_CHANGE_ID
        ORDER BY WPC.REG_DATE DESC
    </select>

    <insert id="setWorkPlanChange" parameterType="map" >
        /* setWorkPlanChange */

        INSERT INTO CAM_INSIDE.DJ_WORK_PLAN_CHANGE
        (
        REQUEST_EMP_SEQ, REQUEST_DATE, APPLY_MONTH, WORK_PLAN_TYPE, WORK_WEEK_TIME, WORK_MONTH_TIME, START_DATE, END_DATE,
        REQUEST_POSITION, REQUEST_DEPT_SEQ, REQUEST_DEPT_NAME, REQUEST_DUTY, APPLY_REASON, REG_EMP_SEQ, APPR_STAT
        <if test="changeDetail != null and changeDetail != ''">
            , STATUS
        </if>
        )
        VALUES
        (
        #{request_emp_seq}, #{request_date}, #{apply_month}, #{work_plan_type}, #{work_week_time}, #{work_month_time}, #{start_date}, #{end_date},
        #{request_position}, #{request_dept_seq}, #{request_dept_name}, #{request_duty}, #{apply_reason}, #{request_emp_seq}, #{appr_stat}
        <if test="changeDetail != null and changeDetail != ''">
            , '1'
        </if>
        )

        <selectKey keyProperty="WORK_PLAN_CHANGE_ID" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_WORK_PLAN_CHANGE'
        </selectKey>
    </insert>

    <insert id="saveWorkPlanChangeDetail" parameterType="map">
        /* setWorkPlanChangeDetail */

        INSERT INTO CAM_INSIDE.DJ_WORK_PLAN_CHANGE_DETAIL
        (
        WORK_PLAN_CHANGE_ID, WORK_PLAN_DETAIL_ID, EMP_SEQ, COMMON_CODE_ID, WORK_DATE, WEEKDAY, ATTEND_TIME, LEAVE_TIME, CHANGER_DEPT_NAME, CHANGER_POSITION, CHANGER_DUTY
        )
        SELECT
        #{workPlanChangeId} as WORK_PLAN_CHANGE_ID,
        (SELECT WORK_PLAN_DETAIL_ID FROM CAM_INSIDE.DJ_WORK_PLAN_DETAIL WHERE EMP_SEQ = #{request_emp_seq} AND DATE_FORMAT(WORK_DATE, '%Y%m%d') = DATE_FORMAT(a.selected_date, '%Y%m%d')) as WORK_PLAN_DETAIL_ID,
        #{request_emp_seq} as EMP_SEQ,
        #{common_code_id} as COMMON_CODE_ID,
        DATE_FORMAT(a.selected_date, '%Y%m%d') as WORK_DATE,
        a.weekday as WEEKDAY,
        a.attend_time as ATTEND_TIME,
        a.leave_time as LEAVE_TIME,
        #{request_dept_name} as CHANGER_DEPT_NAME,
        #{request_position} as CHANGER_POSITION,
        #{request_duty} as CHANGER_DUTY
        FROM
        (
        select
        selected_date,
        WEEKDAY(selected_date) as weekdayNumber,
        CASE WEEKDAY(selected_date)
        WHEN '0' THEN CONCAT(#{monAttendTime})
        WHEN '1' THEN CONCAT(#{tueAttendTime})
        WHEN '2' THEN CONCAT(#{wedAttendTime})
        WHEN '3' THEN CONCAT(#{thuAttendTime})
        WHEN '4' THEN CONCAT(#{friAttendTime})
        END as attend_time,
        CASE WEEKDAY(selected_date)
        WHEN '0' THEN CONCAT(#{monLeaveTime})
        WHEN '1' THEN CONCAT(#{tueLeaveTime})
        WHEN '2' THEN CONCAT(#{wedLeaveTime})
        WHEN '3' THEN CONCAT(#{thuLeaveTime})
        WHEN '4' THEN CONCAT(#{friLeaveTime})
        END as leave_time,
        CASE WEEKDAY(selected_date)
        WHEN '0' THEN '월'
        WHEN '1' THEN '화'
        WHEN '2' THEN '수'
        WHEN '3' THEN '목'
        WHEN '4' THEN '금'
        END as weekday
        from
        (select adddate(#{start_date},t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) selected_date from
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
        where selected_date
        between DATE_FORMAT(#{start_date}, '%Y-%m-%d') and DATE_FORMAT(CONCAT(#{endYearMonth}, CONCAT(DAY(LAST_DAY(CONCAT(#{end_date}))))), '%Y-%m-%d')
        ) a
        where
        (
        a.weekdayNumber != '5'
        and a.weekdayNumber != '6'
        <if test="dayUse != null and dayUse != ''">
            and a.weekdayNumber IN(${dayUse})
        </if>
        )
    </insert>

    <select id="getWkCommonCodeWpT" parameterType="map" resultType="map">
        /* getWkCommonCodeWpT */

        SELECT
            *
        FROM
            DJ_CAMTIC.V_WORK_CODE
        WHERE
            WK_GROUP_CODE_ID = #{wkGroupCodeId}
    </select>

    <update id="updateApprStat" parameterType="map">
        UPDATE CAM_INSIDE.DJ_WORK_PLAN_CHANGE
        SET APPR_STAT = #{apprStat}
        WHERE
            WORK_PLAN_CHANGE_ID IN
            (
            <foreach collection="selectArr" item="item" separator=",">
                #{item}
            </foreach>
            )
    </update>

    <select id="getWorkPlanDefaultList" parameterType="map" resultType="map">
        SELECT
            VEI.EMP_NAME_KR AS EMP_NAME,
            VEI.DEPT_NAME,
            VWP.WORK_PLAN_ID,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.ATTEND_TIME) AS START_DATE,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.LEAVE_TIME) AS END_DATE,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.ATTEND_TIME, ' ~ ', DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.LEAVE_TIME) AS TOTAL_DATE,
            CONCAT(SUBSTRING(VWPD.ATTEND_TIME, 1, 2), '-', SUBSTRING(VWPD.LEAVE_TIME, 1, 2)) AS TITLE,
            VWPD.COMMON_CODE_ID,
            DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d') AS WORK_DATE
        FROM
            CAM_INSIDE.DJ_WORK_PLAN VWP
                JOIN
            CAM_INSIDE.DJ_WORK_PLAN_DETAIL VWPD
            ON
                VWPD.WORK_PLAN_ID = VWP.WORK_PLAN_ID
                JOIN
            CAM_HR.DJ_EMP_INFO VEI
            ON VWP.REQUEST_EMP_SEQ = VEI.EMP_SEQ
        WHERE
            VEI.ACTIVE = 'Y'
          AND
            VWP.ACTIVE = 'Y'
          AND
            VEI.EMP_SEQ = #{empSeq}
        ORDER BY VWPD.WORK_DATE ASC
    </select>

    <select id="getWorkPlanChangeList" parameterType="map" resultType="map">
        SELECT
            VEI.EMP_NAME_KR AS EMP_NAME,
            VEI.DEPT_NAME,
            VWP.WORK_PLAN_CHANGE_ID,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.ATTEND_TIME) AS START_DATE,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.LEAVE_TIME) AS END_DATE,
            CONCAT(DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.ATTEND_TIME, ' ~ ', DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d'), ' ', VWPD.LEAVE_TIME) AS TOTAL_DATE,
            CONCAT(SUBSTRING(VWPD.ATTEND_TIME, 1, 2), '-', SUBSTRING(VWPD.LEAVE_TIME, 1, 2)) AS TITLE,
            VWPD.COMMON_CODE_ID,
            DATE_FORMAT(VWPD.WORK_DATE, '%Y-%m-%d') AS WORK_DATE
        FROM
            CAM_INSIDE.DJ_WORK_PLAN_CHANGE VWP
                JOIN
            CAM_INSIDE.DJ_WORK_PLAN_CHANGE_DETAIL VWPD
            ON
                VWPD.WORK_PLAN_CHANGE_ID = VWP.WORK_PLAN_CHANGE_ID
                JOIN
            CAM_HR.DJ_EMP_INFO VEI
            ON VWP.REQUEST_EMP_SEQ = VEI.EMP_SEQ
        WHERE
            VEI.ACTIVE = 'Y'
          AND
            VWP.ACTIVE = 'Y'
          <if test="status != null and status != ''">
              AND VWP.APPR_STAT = #{status}
          </if>
          AND
            VEI.EMP_SEQ = #{empSeq}
        ORDER BY VWPD.WORK_DATE ASC
    </select>

    <select id="getWorkPlanUserList" parameterType="map" resultType="map">
        /* getWorkPlanUserList */
        SELECT
            EI.EMP_NAME_KR AS EMP_NAME,
            EI.DEPT_NAME,
            EI.DUTY_NAME,
            EI.EMP_SEQ
        FROM
            CAM_INSIDE.DJ_WORK_PLAN_CHANGE WPC JOIN CAM_INSIDE.DJ_WORK_PLAN_CHANGE_DETAIL WPCD ON WPC.WORK_PLAN_CHANGE_ID = WPCD.WORK_PLAN_CHANGE_ID
                                               JOIN
            CAM_HR.DJ_EMP_INFO EI ON WPC.REQUEST_EMP_SEQ = EI.EMP_SEQ
        WHERE
            WPC.ACTIVE = 'Y'
          AND
            DATE_FORMAT(WPC.REG_DATE, '%Y%m') = #{apply_month}
        GROUP BY
            EMP_NAME_KR
        ORDER BY WPC.REG_DATE DESC
    </select>

    <select id="getWorkTimeCode" parameterType="map" resultType="map">
        SELECT
            *, CONCAT(WORK_TIME_CODE_NAME, ' (', START_HOUR, ':', START_MIN, '~', END_HOUR, ':', END_MIN, ')') AS label, WORK_TIME_CODE_ID AS value
        FROM
            DJ_CAMTIC.V_WORK_TIME_CODE
        WHERE ACTIVE = 'Y'
        <if test="workTimeType != null and workTimeType != ''">
            AND WORK_TIME_TYPE = #{workTimeType}
        </if>
    </select>

    <select id="getWorkPlanList" parameterType="map" resultType="map">
        SELECT
            WPA.WORK_PLAN_APPROVAL_ID,
            DATE_FORMAT(WPA.APPLY_DATE, '%Y-%m-%d') AS APPLY_DATE,
            WTC.WORK_TIME_CODE_NAME,
            CONCAT(
                DATE_FORMAT(WPA.START_DATE, '%Y-%m-%d')
                , ' ~ '
                , DATE_FORMAT(WPA.END_DATE, '%Y-%m-%d')
            ) AS APPLY_WORK_DATE,
            WPA.DOC_ID,
            WPA.ADMIN_DOC_ID,
            WPA.APPR_STAT,
            WPA.ADMIN_APPR_STAT,
            (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = WPA.ADMIN_DOC_ID) AS ADMIN_APPRO_KEY,
            (SELECT DOC_MENU_CD FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = WPA.ADMIN_DOC_ID) AS ADMIN_DOC_MENU_CD,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM CAM_INSIDE.DJ_WORK_PLAN_APPROVAL WPA
        LEFT JOIN DJ_CAMTIC.V_WORK_TIME_CODE WTC
        ON WPA.WORK_TIME_CODE_ID = WTC.WORK_TIME_CODE_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI
        ON WPA.DOC_ID = DI.DOC_ID
        WHERE
            WPA.ACTIVE = 'Y'
        <if test="empSeq != null and empSeq != ''">
            AND WPA.APPLY_SEQ = #{empSeq}
        </if>
        <if test="searchYear != null and searchYear != ''">
            AND
            (
            WPA.START_DATE LIKE CONCAT('%', #{searchYear}, '%')
            OR
            WPA.END_DATE LIKE CONCAT('%', #{searchYear}, '%')
            )
        </if>
        <if test="adminList != null and adminList != ''">
            AND WPA.APPR_STAT = 'Y'
        </if>
        ORDER BY WPA.REG_DATE DESC
    </select>

    <insert id="setWorkPlan" parameterType="map">
        INSERT INTO CAM_INSIDE.DJ_WORK_PLAN_APPROVAL
        (
            WORK_TIME_CODE_ID,
            APPLY_SEQ,
            APPLY_DATE,
            START_DATE,
            END_DATE,
            APPR_STAT,
            ACTIVE,
            REG_EMP_SEQ,
            REG_DATE
        )
        VALUES
        (
            #{workTimeCodeId},
            #{applySeq},
            DATE_FORMAT(#{applyDate}, '%Y-%m-%d'),
            DATE_FORMAT(#{startDate}, '%Y-%m-%d'),
            DATE_FORMAT(#{endDate}, '%Y-%m-%d'),
            #{apprStat},
            'Y',
            #{regEmpSeq},
            NOW()
        )
        <selectKey keyProperty="workPlanApprovalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_WORK_PLAN_APPROVAL'
        </selectKey>
    </insert>

    <insert id="setWorkPlanDetail" parameterType="map">
        INSERT INTO CAM_INSIDE.DJ_WORK_PLAN_APPROVAL_DETAIL
        (
            WORK_PLAN_APPROVAL_ID,
            WORK_WEEK_DAY,
            WORK_DAY,
            START_HOUR,
            START_MIN,
            END_HOUR,
            END_MIN,
            ACTIVE,
            REG_DATE
        )
        select
            CONCAT(#{workPlanApprovalId}) AS WORK_PLAN_APPROVAL_ID,
            CASE WEEKDAY(selected_date)
            WHEN '0' THEN '월'
            WHEN '1' THEN '화'
            WHEN '2' THEN '수'
            WHEN '3' THEN '목'
            WHEN '4' THEN '금'
            WHEN '5' THEN '토'
            WHEN '6' THEN '일'
            END as WORK_WEEK_DAY,
            selected_date AS WORK_DAY,
            b.START_HOUR AS START_HOUR,
            b.START_MIN AS START_MIN,
            b.END_HOUR AS END_HOUR,
            b.END_MIN AS END_MIN,
            CONCAT('Y') AS ACTIVE,
            NOW()
        from
        (select adddate(#{startDate},t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) selected_date from
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
        LEFT JOIN
        DJ_CAMTIC.V_WORK_TIME_CODE b
        ON b.WORK_TIME_CODE_ID = CONCAT(#{workTimeCodeId})
        where selected_date
        between DATE_FORMAT(#{startDate}, '%Y-%m-%d') and DATE_FORMAT(#{endDate}, '%Y-%m-%d')
    </insert>

    <update id="workPlanUserApp" parameterType="map">
        /* workPlanUserApp */
        UPDATE
            CAM_INSIDE.DJ_WORK_PLAN_APPROVAL
        SET
            APPR_STAT = #{status},
            DOC_ID = #{docId},
            ADMIN_APPR_STAT = 'N'
        WHERE
            WORK_PLAN_APPROVAL_ID = #{workPlanApprovalId}
    </update>

    <update id="workPlanAdminApp" parameterType="map">
        /* workPlanAdminApp */
        UPDATE
            CAM_INSIDE.DJ_WORK_PLAN_APPROVAL
        SET
            ADMIN_APPR_STAT = #{adminStatus},
            ADMIN_DOC_ID = #{docId}
        WHERE
            WORK_PLAN_APPROVAL_ID = #{workPlanApprovalId}
    </update>

</mapper>