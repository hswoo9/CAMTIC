<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="asset">
    <!-- 자산리스트 시작 -->

    <select id="getAssetList" resultType="map">
        /* getAssetList */
        SELECT
            AI.*,
            AP.AST_PLACE_NAME,
            IC.INSIDE_DT_CODE_NM
        FROM
            CAM_INSIDE.DJ_ASSET_INFO AI
        JOIN
            CAM_INSIDE.DJ_ASSET_PLACE AP
        ON AI.AST_PLACE_SN = AP.AST_PLACE_SN
        JOIN
            CAM_INSIDE.DJ_INSIDE_CODE IC
        ON AI.AST_STS_CODE = IC.INSIDE_DT_CODE AND IC.INSIDE_MD_CODE = '03'
        WHERE
            AI.ACTIVE = 'Y'

        <if test='startDate != null and !"".equals(startDate)'>
        <![CDATA[
		AND
		    DATE_FORMAT(#{startDate}, '%Y%m%d') <= DATE_FORMAT(AI.PURC_DATE, '%Y%m%d')
		AND
		    DATE_FORMAT(#{endDate}, '%Y%m%d') >= DATE_FORMAT(AI.PURC_DATE, '%Y%m%d')
		]]>
        </if>

        <if test='assetPosition != null and !"".equals(assetPosition)'>
            AND AST_CODE_COMPANY_ID = #{assetPosition}
        </if>
        <if test='assetType != null and !"".equals(assetType)'>
            AND AST_TYPE_CODE = #{assetType}
        </if>
        <if test='categoryA != null and !"".equals(categoryA)'>
            AND AST_CODE_ID_1 = #{categoryA}
        </if>
        <if test='categoryB != null and !"".equals(categoryB)'>
            AND AST_CODE_ID_2 = #{categoryB}
        </if>
        <if test='categoryC != null and !"".equals(categoryC)'>
            AND AST_CODE_ID_3 = #{categoryC}
        </if>
        <if test='assetStatus != null and !"".equals(assetStatus)'>
            AND AST_STS_CODE = #{assetStatus}
        </if>
        <if test='assetPlace != null and !"".equals(assetPlace)'>
            AND AST_PLACE_SN = #{assetPlace}
        </if>
        <if test='assetPlace != null and !"".equals(assetPlace)'>
            AND AST_PLACE_SN = #{assetPlace}
        </if>
        <if test='regStatus != null and !"".equals(regStatus)'>
            AND REG_STATUS = #{regStatus}
        </if>
        <if test='barcodeType != null and !"".equals(barcodeType)'>
            AND BARCODE_TYPE = #{barcodeType}
        </if>

        <if test='searchType != null and !"".equals(searchType)'>
            <choose>
                <when test='"assetName".equals(searchType)'>AND AST_NAME LIKE CONCAT ('%', #{searchContent},'%')  </when>
                <when test='"assetCode".equals(searchType)'>AND AST_NO LIKE CONCAT ('%', #{searchContent},'%')</when>
                <when test='"modelSize".equals(searchType)'>AND MODEL_SIZE LIKE CONCAT ('%', #{searchContent},'%')</when>
                <when test='"modelName".equals(searchType)'>AND MODEL_NAME LIKE CONCAT ('%', #{searchContent},'%')</when>
                <when test='"empName".equals(searchType)'>AND EMP_NAME LIKE CONCAT ('%', #{searchContent},'%')</when>
            </choose>
        </if>
    </select>

    <select id="getAssetInfo" resultType="map" parameterType="map">
        /* getAssetInfo */
        SELECT
            AI.AST_INFO_SN,
            CONCAT(ACP.AST_CP_CODE_NM, ' > ', ACC.AST_TYPE_CODE_NM, ' > ', AC1.AST_CODE_NM, ' > ', AC2.AST_CODE_NM, ' > ', AC3.AST_CODE_NM) AS AST_GUBUN,
            AI.AST_NO,
            AI.BARCODE_TYPE,
            AI.AST_NAME,
            DATE_FORMAT(AI.PURC_DATE, '%Y/%m/%d') AS PURC_DATE,
            AI.PURC_PRICE,
            AI.MODEL_SIZE,
            AI.MODEL_NAME,
            AI.PURC_COMPANY_ID,
            '-' AS PURC_COMPANY_NAME,
            AI.MF_COMPANY,
            CONCAT(AI.QTY, ' ', AI.UNIT) AS QTY,
            AI.ORG_COUNTRY,
            CASE WHEN AI.FUNDING_SOURCE = 0 THEN CONCAT('[법인운영]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 1 THEN CONCAT('[연구개발]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 2 THEN CONCAT('[교육사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 4 THEN CONCAT('[개발사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 5 THEN CONCAT('[기능보강]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 6 THEN CONCAT('[지원사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 7 THEN CONCAT('[협의회]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 3 THEN CONCAT('[기타사업]', AI.EXP_ACCOUNT)
            END FUNDING_SOURCE_TXT,
            AP.AST_PLACE_NAME,
            AI.DEPT_SEQ,
            AI.EMP_SEQ,
            AI.EMP_NAME,
            AI.PURPOSE,
            AI.REMARK,
            IC.INSIDE_DT_CODE_NM,
            AI.AST_FILE_NO,
            AI.RELATED_FILE_NO
        FROM
            CAM_INSIDE.DJ_ASSET_INFO AI
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE_POSITION ACP
            ON AI.AST_CODE_COMPANY_ID = ACP.AST_CP_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE_CLASS ACC
        ON AI.AST_TYPE_CODE = ACC.AST_TYPE_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC1
        ON AI.AST_CODE_ID_1 = AC1.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC2
        ON AC2.AST_UPPER_CODE = AC1.AST_CODE_ID AND AI.AST_CODE_ID_2 = AC2.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC3
        ON AC3.AST_UPPER_CODE = AC2.AST_CODE_ID AND AI.AST_CODE_ID_3 = AC3.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_PLACE AP
        ON AI.AST_PLACE_SN = AP.AST_PLACE_SN
        JOIN
            CAM_INSIDE.DJ_INSIDE_CODE IC
        ON AI.AST_STS_CODE = IC.INSIDE_DT_CODE AND IC.INSIDE_MD_CODE = '03'
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </select>

    <select id="getAstInfoModHistory" parameterType="map" resultType="map">
        /* getAstInfoModHistory */
        SELECT
            AST_INFO_MOD_SN,
            REPLACE(REPLACE(DATE_FORMAT(REG_DATE, '%Y-%m-%d %p %h:%i:%s'), 'PM', '오후'), 'AM', '오전') AS REG_DATE,
            REG_EMP_NAME,
            REG_EMP_IP
        FROM
            CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY
        WHERE
            AST_INFO_SN = #{astInfoSn}
        ORDER BY REG_DATE DESC
    </select>

    <select id="getAstInfoModHistoryItem" parameterType="map" resultType="map">
        /* getAstInfoModHistoryItem */
        SELECT
            A.*
        FROM
            CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY_ITEM A
        JOIN
            CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY B
        ON A.AST_INFO_MOD_SN = B.AST_INFO_MOD_SN
        WHERE
            B.AST_INFO_SN = #{astInfoSn}
    </select>

    <select id="getInsideCodeList" resultType="map" parameterType="map">
        /* getInsideCodeList */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_INSIDE_CODE
        WHERE
            ACTIVE = 'Y'
        <if test='insideMdCode != null and !"".equals(insideMdCode)'>
        AND
            INSIDE_MD_CODE = #{insideMdCode}
        </if>
    </select>

    <select id="getInsideCode" resultType="map" parameterType="map">
        /* getInsideCode */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_INSIDE_CODE
        WHERE
            ACTIVE = 'Y'
        AND
            INSIDE_MD_CODE = #{insideMdCode}
        <if test='insideDtCode != null and !"".equals(insideDtCode)'>
        AND
            INSIDE_DT_CODE = #{insideDtCode}
        </if>
    </select>

    <select id="getAssetInfoBarcordMax" resultType="String" parameterType="map">
        /* getAssetInfoBarcordMax */
        SELECT
            RIGHT(CONCAT('00', IFNULL(max(SUBSTRING_INDEX(AST_NO, '-', -1)), 0) + 1), 3)
        FROM
            CAM_INSIDE.DJ_ASSET_INFO
        WHERE
            AST_CODE_COMPANY_ID = #{astCodeCompanyId}
        AND
            AST_TYPE_CODE = #{astTypeCode}
        AND
            AST_CODE_ID_1 = #{astCodeId1}
        AND
            AST_CODE_ID_2 = #{astCodeId2}
        AND
            AST_CODE_ID_3 = #{astCodeId3}
    </select>

    <insert id="setAssetInfo" parameterType="map">
        /* setAssetInfo */
        INSERT INTO CAM_INSIDE.DJ_ASSET_INFO
            (
                AST_CODE_COMPANY_ID,
                AST_TYPE_CODE,
                AST_CODE_ID_1,
                AST_CODE_ID_2,
                AST_CODE_ID_3,
                AST_STS_CODE,
                AST_PLACE_SN,
                AST_NO,
                AST_NAME,
                PURC_DATE,
                PURC_PRICE,
                PURC_COMPANY_ID,
                MODEL_SIZE,
                MODEL_NAME,
                MF_COMPANY,
                ORG_COUNTRY,
                QTY,
                UNIT,
                REG_TYPE,
                BARCODE_TYPE,
                FUNDING_SOURCE,
                EXP_ACCOUNT,
                DEPT_SEQ,
                EMP_SEQ,
                EMP_NAME,
                PURPOSE,
                REMARK,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{astCodeCompanyId},
                #{astTypeCode},
                #{astCodeId1},
                #{astCodeId2},
                #{astCodeId3},
                #{astStsCode},
                #{astPlaceSn},
                #{astNo},
                #{astName},
                #{purcDate},
                #{purcPrice},
                #{purcCompanyId},
                #{modelSize},
                #{modelName},
                #{mfCompany},
                #{orgCountry},
                #{qty},
                #{unit},
                #{regType},
                #{barcodeType},
                #{fundingSource},
                #{expAccount},
                #{deptSeq},
                #{empSeq},
                #{empName},
                #{purpose},
                #{remark},
                #{regEmpSeq}
            )

        <selectKey keyProperty="astInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_ASSET_INFO'
        </selectKey>
    </insert>

    <update id="setAssetInfoUpd" parameterType="map">
        /* setAssetInfoUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_INFO
        SET
            AST_CODE_COMPANY_ID = #{astCodeCompanyId},
            AST_TYPE_CODE = #{astTypeCode},
            AST_CODE_ID_1 = #{astCodeId1},
            AST_CODE_ID_2 = #{astCodeId2},
            AST_CODE_ID_3 = #{astCodeId3},
            AST_STS_CODE = #{astStsCode},
            AST_PLACE_SN = #{astPlaceSn},
            AST_NO = #{astNo},
            AST_NAME = #{astName},
            PURC_DATE = #{purcDate},
            PURC_PRICE = #{purcPrice},
            PURC_COMPANY_ID = #{purcCompanyId},
            MODEL_SIZE = #{modelSize},
            MODEL_NAME = #{modelName},
            MF_COMPANY = #{mfCompany},
            ORG_COUNTRY = #{orgCountry},
            QTY = #{qty},
            UNIT = #{unit},
            REG_TYPE = #{regType},
            BARCODE_TYPE = #{barcodeType},
            FUNDING_SOURCE = #{fundingSource},
            EXP_ACCOUNT = #{expAccount},
            DEPT_SEQ = #{deptSeq},
            EMP_SEQ = #{empSeq},
            EMP_NAME = #{empName},
            PURPOSE = #{purpose},
            REMARK = #{remark},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DATE = NOW()
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </update>

    <update id="setAstFileNoUpd" parameterType="map">
        /* setAstFileNoUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_INFO
        SET
            AST_FILE_NO = #{astFileNo}
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </update>

    <update id="setAstRelatedFileNoUpd" parameterType="map">
        /* setAstRelatedFileNoUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_INFO
        SET
            RELATED_FILE_NO = #{relatedFileNo}
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </update>

    <select id="getAstManage" resultType="map">
        /* getAstManage */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_ASSET_MANAGE
        ORDER BY REG_DATE DESC
        LIMIT 1
    </select>

    <select id="getAssetInfoAll" parameterType="map" resultType="map">
        /* getAssetInfoAll */
        SELECT
            AI.*,
            CASE WHEN AI.FUNDING_SOURCE = 0 THEN CONCAT('[법인운영]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 1 THEN CONCAT('[연구개발]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 2 THEN CONCAT('[교육사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 4 THEN CONCAT('[개발사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 5 THEN CONCAT('[기능보강]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 6 THEN CONCAT('[지원사업]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 7 THEN CONCAT('[협의회]', AI.EXP_ACCOUNT)
                 WHEN AI.FUNDING_SOURCE = 3 THEN CONCAT('[기타사업]', AI.EXP_ACCOUNT)
            END FUNDING_SOURCE_TXT
        FROM
            CAM_INSIDE.DJ_ASSET_INFO AI
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </select>

    <insert id="setAstManage" parameterType="map">
        /* setAstManage */
        INSERT INTO CAM_INSIDE.DJ_ASSET_MANAGE
            (
                MANAGE_MAIN_EMP_SEQ,
                MANAGE_MAIN_EMP_NAME,
                MANAGE_SUB_EMP_SEQ,
                MANAGE_SUB_EMP_NAME,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{manageMainEmpSeq},
                #{manageMainEmpName},
                #{manageSubEmpSeq},
                #{manageSubEmpName},
                #{empSeq}
            )
    </insert>

    <update id="setAstManageUpd" parameterType="map">
        /* setAstManageUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_MANAGE
        SET
            MANAGE_MAIN_EMP_SEQ = #{manageMainEmpSeq},
            MANAGE_MAIN_EMP_NAME = #{manageMainEmpName},
            MANAGE_SUB_EMP_SEQ = #{manageSubEmpSeq},
            MANAGE_SUB_EMP_NAME = #{manageSubEmpName},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            AST_MANAGE_SN = #{astManageSn}
    </update>

    <update id="setAstInfoBatch" parameterType="map">
        /* setAstInfoBatch */
        UPDATE
            CAM_INSIDE.DJ_ASSET_INFO
        SET
            <if test='astName != null and !"".equals(astName)'>
                AST_NAME = #{astName},
            </if>
            <if test='empSeq != null and !"".equals(empSeq)'>
                DEPT_SEQ = #{deptSeq},
                EMP_SEQ = #{empSeq},
                EMP_NAME = #{empName},
            </if>
            <if test='purcPrice != null and !"".equals(purcPrice)'>
                PURC_PRICE = #{purcPrice},
            </if>
            <if test='astStsCode != null and !"".equals(astStsCode)'>
                AST_STS_CODE = #{astStsCode},
            </if>
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DATE = NOW()
        WHERE
            AST_INFO_SN IN(${astInfoSn})
    </update>

    <insert id="setAstInfoModHistory" parameterType="map">
        /* setAstInfoModHistory */
        INSERT INTO CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY
            (
                AST_INFO_SN,
                REG_EMP_IP,
                REG_EMP_SEQ,
                REG_EMP_NAME
            )
        VALUE
            (
                #{astInfoSn},
                #{regEmpIp},
                #{regEmpSeq},
                #{regEmpName}
            )

        <selectKey keyProperty="astInfoModSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_ASSET_INFO_MOD_HISTORY'
        </selectKey>
    </insert>

    <delete id="setAstInfoModHistoryDel" parameterType="map">
        /* setAstInfoModHistoryDel */
        DELETE FROM CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY WHERE AST_INFO_MOD_SN = #{astInfoModSn}
    </delete>

    <insert id="setAstInfoModHistoryItem" parameterType="list">
        /* setAstInfoModHistoryItem */
        INSERT INTO CAM_INSIDE.DJ_ASSET_INFO_MOD_HISTORY_ITEM
            (
                AST_INFO_MOD_SN,
                MOD_ITEM_NAME,
                MOD_OLD_ITEM_INFO,
                MOD_NEW_ITEM_INFO,
                REG_EMP_SEQ
            )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.astInfoModSn},
                #{item.modItemName},
                #{item.modOldItemInfo},
                #{item.modNewItemInfo},
                #{item.regEmpSeq}
            )
        </foreach>
    </insert>
    <!-- 자산리스트 종료 -->

    <!-- 분류관리 시작-->
    <!-- 분류관리 소속코드 시작-->
    <select id="getClassPositionList" parameterType="map" resultType="map">
        /* getClassPositionList */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE_POSITION
        WHERE ACTIVE = 'Y'
    </select>

    <select id="getClassPosition" parameterType="map" resultType="map">
        /* getClassPosition */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE_POSITION
        WHERE ACTIVE = 'Y' AND AST_CODE_COMPANY_ID = #{astCodeCompanyId}
    </select>

    <insert id="setAssetCodePosition" parameterType="map">
        /* setAssetCodePosition */
        INSERT INTO CAM_INSIDE.DJ_ASSET_CODE_POSITION
            (
                AST_CP_CODE,
                AST_CP_CODE_NM,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{astCpCode},
                #{astCpCodeNm},
                #{empSeq}
            )
    </insert>

    <update id="setAssetCodePositionUpd" parameterType="map">
        /* setAssetCodePositionUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE_POSITION
        SET
            AST_CP_CODE = #{astCpCode},
            AST_CP_CODE_NM = #{astCpCodeNm},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            AST_CODE_COMPANY_ID = #{astCodeCompanyId}
    </update>

    <update id="setAssetCodePositionDel" parameterType="map">
        /* setAssetCodePositionDel */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE_POSITION
        SET
            ACTIVE ='N'
        WHERE
            AST_CODE_COMPANY_ID IN (${astCodeCompanyId})
    </update>

    <!-- 분류관리 구분코드 시작-->
    <select id="getClassDivisionList" parameterType="map" resultType="map">
        /* getClassDivisionList */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE_CLASS
        WHERE ACTIVE = 'Y'
    </select>

    <select id="getClassDivision" parameterType="map" resultType="map">
        /* getClassDivision */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE_CLASS
        WHERE ACTIVE = 'Y'
        <if test='astCodeTypeId != null and !"".equals(astCodeTypeId)'>
            AND AST_CODE_TYPE_ID = #{astCodeTypeId}
        </if>
        <if test='astTypeCode != null and !"".equals(astTypeCode)'>
            AND AST_TYPE_CODE = #{astTypeCode}
        </if>
    </select>

    <insert id="setClassDivision" parameterType="map">
        /* setClassDivision */
        INSERT INTO CAM_INSIDE.DJ_ASSET_CODE_CLASS
            (
                AST_TYPE_CODE,
                AST_TYPE_CODE_NM,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{astTypeCode},
                #{astTypeCodeNm},
                #{empSeq}
            )
    </insert>

    <update id="setClassDivisionUpd" parameterType="map">
        /* setClassDivisionUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE_CLASS
        SET
            AST_TYPE_CODE = #{astTypeCode},
            AST_TYPE_CODE_NM = #{astTypeCodeNm},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            AST_CODE_TYPE_ID = #{astCodeTypeId}
    </update>

    <update id="setClassDivisionDel" parameterType="map">
        /* setClassDivisionDel */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE_CLASS
        SET
            ACTIVE ='N'
        WHERE
            AST_CODE_TYPE_ID IN (${astCodeTypeId})
    </update>

    <!-- 분류관리 위치코드 시작-->
    <select id="getAssetPlaceList" resultType="map">
        /* getAssetPlaceList */
         <![CDATA[
        SELECT * FROM CAM_INSIDE.DJ_ASSET_PLACE
        WHERE ACTIVE = 'Y'
        ORDER BY (
            CASE WHEN ASCII(SUBSTRING(AST_PLACE_NAME, 1)) BETWEEN 48 AND 57 THEN 1
                 WHEN ASCII(SUBSTRING(AST_PLACE_NAME, 1)) < 128 THEN 3
            ELSE 2 END), AST_PLACE_NAME
        ]]>
    </select>

    <select id="getAssetPlace" parameterType="map" resultType="map">
        /* getAssetPlace */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_PLACE
        WHERE ACTIVE = 'Y' AND AST_PLACE_SN = #{astPlaceSn}
    </select>

    <insert id="setAssetPlace" parameterType="map">
        /* setClassDivision */
        INSERT INTO CAM_INSIDE.DJ_ASSET_PLACE
        (
            AST_PLACE_NAME,
            AST_MANAGE_DEPT,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{astPlaceName},
                #{astManageDept},
                #{empSeq}
            )
    </insert>

    <update id="setAssetPlaceUpd" parameterType="map">
        /* setAssetPlaceUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_PLACE
        SET
            AST_PLACE_NAME = #{astPlaceName},
            AST_MANAGE_DEPT = #{astManageDept},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            AST_PLACE_SN = #{astPlaceSn}
    </update>

    <update id="setAssetPlaceDel" parameterType="map">
        /* setAssetPlaceDel */
        UPDATE
            CAM_INSIDE.DJ_ASSET_PLACE
        SET
            ACTIVE ='N'
        WHERE
            AST_PLACE_SN IN (${astPlaceSn})
    </update>

    <!-- 분류관리 카테고리 시작-->
    <select id="getAstCategoryList" parameterType="map" resultType="map">
        /* getAstCategoryList */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE
        WHERE ACTIVE = 'Y' AND AST_UPPER_CODE = #{astUpperCode}
    </select>

    <select id="getAstCategory" parameterType="map" resultType="map">
        /* getAstCategory */
        SELECT * FROM CAM_INSIDE.DJ_ASSET_CODE
        WHERE ACTIVE = 'Y'
        AND AST_CODE_ID = #{astCodeId}
        <if test='astUpperCode != null and !"".equals(astUpperCode)'>
            AND AST_UPPER_CODE = #{astUpperCode}
        </if>
    </select>


    <insert id="setCategoryCode" parameterType="map">
        /* setCategoryCode */
        INSERT INTO CAM_INSIDE.DJ_ASSET_CODE
            (
                AST_UPPER_CODE,
                AST_CODE,
                AST_CODE_NM,
                AST_DEPRE_TYPE,
                AST_DEPRE_PERCENT,
                AST_USE_YEAR,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{astUpperCode},
                #{astCode},
                #{astCodeNm},
                #{astDepreType},
                #{astDeprePercent},
                #{astUseYear},
                #{empSeq}
            )
    </insert>

    <select id="getMaxCategoryCode" parameterType="map" resultType="String">
        /* getMaxCategoryCode */
        SELECT
            RIGHT(CONCAT('00', IFNULL(max(AST_CODE), 0) + 1), 2)
        FROM
            CAM_INSIDE.DJ_ASSET_CODE A
        WHERE
            AST_UPPER_CODE = #{astUpperCode}
    </select>

    <update id="setCategoryCodeUpd" parameterType="map">
        /* setCategoryCodeUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE
        SET
            <if test='astCode != null and !"".equals(astCode)'>
                AST_CODE = #{astCode},
            </if>
            AST_CODE_NM = #{astCodeNm},
            AST_DEPRE_TYPE = #{astCodeNm},
            AST_DEPRE_PERCENT = #{astDeprePercent},
            AST_USE_YEAR = #{astUseYear},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            AST_CODE_ID = #{astCodeId}
    </update>

    <update id="setCategoryCodeDel" parameterType="map">
        /* setCategoryCodeDel */
        UPDATE
            CAM_INSIDE.DJ_ASSET_CODE
        SET
            ACTIVE ='N'
        WHERE
            AST_CODE_ID IN (${astCodeId})
    </update>
    <!-- 분류관리 종료 -->

    <!-- PDA 연동목록 시작 -->
    <select id="getAstPdaInfoList" parameterType="map" resultType="map">
        /* getAstPdaInfoList */
        SELECT
            API.AST_PDA_INFO_SN,
            API.AST_INFO_SN,
            API.AST_NO,
            API.AST_NAME,
            API.PURC_DATE,
            API.ORIGIN_AST_PLACE_SN,
            AP.AST_PLACE_NAME AS ORIGIN_AST_PLACE,
            AP2.AST_PLACE_NAME AS NEW_AST_PLACE,
            DATE_FORMAT(API.ACTIVE_DATE, '%Y-%m-%d') AS ACTIVE_DATE,
            API.AST_STS_CODE AS ORIGIN_STS_CODE,
            IC.INSIDE_DT_CODE_NM AS ORIGIN_STS_NAME,
            IC2.INSIDE_DT_CODE_NM AS NEW_STS_NAME,
            APO.*
        FROM
            CAM_INSIDE.DJ_ASSET_PDA_INFO API
        JOIN
            CAM_INSIDE.DJ_ASSET_PDA_OPT APO
        ON API.AST_PDA_INFO_SN = APO.AST_PDA_INFO_SN
        LEFT JOIN
            CAM_INSIDE.DJ_ASSET_PLACE AP
        ON API.ORIGIN_AST_PLACE_SN = AP.AST_PLACE_SN
        LEFT JOIN
            CAM_INSIDE.DJ_ASSET_PLACE AP2
        ON APO.NEW_AST_PLACE_SN = AP2.AST_PLACE_SN
        JOIN
            CAM_INSIDE.DJ_INSIDE_CODE IC
        ON API.AST_STS_CODE = IC.INSIDE_DT_CODE AND IC.INSIDE_MD_CODE = '03'
        LEFT JOIN
            CAM_INSIDE.DJ_INSIDE_CODE IC2
        ON APO.NEW_AST_STS_CODE = IC2.INSIDE_DT_CODE AND IC2.INSIDE_MD_CODE = '03'
        WHERE
            API.ACTIVE = 'Y'
        <if test='startDate != null and !"".equals(startDate)'>
        <![CDATA[
		AND
		    DATE_FORMAT(#{startDate}, '%Y%m%d') <= DATE_FORMAT(API.PURC_DATE, '%Y%m%d')
		AND
		    DATE_FORMAT(#{endDate}, '%Y%m%d') >= DATE_FORMAT(API.PURC_DATE, '%Y%m%d')
		]]>
        </if>
        <if test='originAssetPlace != null and !"".equals(originAssetPlace)'>
            AND API.ORIGIN_AST_PLACE_SN = #{originAssetPlace}
        </if>
        <if test='newAssetPlace != null and !"".equals(newAssetPlace)'>
            AND APO.NEW_AST_PLACE_SN = #{newAssetPlace}
        </if>
        <if test='workType != null and !"".equals(workType)'>
            AND APO.WORK_TYPE = #{workType}
        </if>
        <if test='inspectionType != null and !"".equals(inspectionType)'>
            AND APO.INSPECTION_TYPE = #{inspectionType}
        </if>
        <if test='placeModType != null and !"".equals(placeModType)'>
            AND APO.PLACE_MOD_TYPE = #{placeModType}
        </if>
        <if test='astStsCode != null and !"".equals(astStsCode)'>
            AND (CASE WHEN APO.NEW_AST_STS_CODE IS NOT NULL THEN APO.NEW_AST_STS_CODE ELSE API.AST_STS_CODE END) = #{astStsCode}

        </if>
        <if test='astStsCodeModType != null and !"".equals(astStsCodeModType)'>
            AND APO.AST_STS_CODE_MOD_TYPE = #{astStsCodeModType}
        </if>
        <if test='searchType != null and !"".equals(searchType)'>
            <choose>
                <when test='"assetName".equals(searchType)'>AND API.AST_NAME LIKE CONCAT ('%', #{searchContent},'%')  </when>
                <when test='"assetCode".equals(searchType)'>AND API.AST_NO LIKE CONCAT ('%', #{searchContent},'%')</when>
                <when test='"modelName".equals(searchType)'>AND API.MODEL_NAME LIKE CONCAT ('%', #{searchContent},'%')</when>
            </choose>
        </if>
    </select>

    <update id="setAstPdaActiveUpd" parameterType="map">
        /* setAstPdaActiveUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_PDA_INFO
        SET
            ACTIVE = 'N',
            MOD_EMP_SEQ = #{empSeq}
    </update>

    <insert id="setAstPdaInfo" parameterType="map">
        /* setAstPdaInfo */
        INSERT INTO CAM_INSIDE.DJ_ASSET_PDA_INFO
        (
            AST_INFO_SN,
            AST_CODE_COMPANY_ID,
            AST_TYPE_CODE,
            AST_CODE_ID_1,
            AST_CODE_ID_2,
            AST_CODE_ID_3,
            AST_STS_CODE,
            ORIGIN_AST_PLACE_SN,
            AST_NO,
            AST_NAME,
            PURC_DATE,
            PURC_PRICE,
            PURC_COMPANY_ID,
            MODEL_SIZE,
            MODEL_NAME,
            MF_COMPANY,
            ORG_COUNTRY,
            QTY,
            UNIT,
            REG_TYPE,
            BARCODE_TYPE,
            FUNDING_SOURCE,
            EXP_ACCOUNT,
            DEPT_SEQ,
            EMP_SEQ,
            EMP_NAME,
            PURPOSE,
            REMARK,
            REG_STATUS,
            AST_FILE_NO,
            RELATED_FILE_NO,
            REG_EMP_SEQ
        )
        SELECT
            AST_INFO_SN,
            AST_CODE_COMPANY_ID,
            AST_TYPE_CODE,
            AST_CODE_ID_1,
            AST_CODE_ID_2,
            AST_CODE_ID_3,
            AST_STS_CODE,
            AST_PLACE_SN,
            AST_NO,
            AST_NAME,
            PURC_DATE,
            PURC_PRICE,
            PURC_COMPANY_ID,
            MODEL_SIZE,
            MODEL_NAME,
            MF_COMPANY,
            ORG_COUNTRY,
            QTY,
            UNIT,
            REG_TYPE,
            BARCODE_TYPE,
            FUNDING_SOURCE,
            EXP_ACCOUNT,
            DEPT_SEQ,
            EMP_SEQ,
            EMP_NAME,
            PURPOSE,
            REMARK,
            REG_STATUS,
            AST_FILE_NO,
            RELATED_FILE_NO,
            #{empSeq}
        FROM
            CAM_INSIDE.DJ_ASSET_INFO
        WHERE
            ACTIVE = 'Y'
    </insert>

    <insert id="setAstPdaOpt" parameterType="map">
        /* setAstPdaOpt */
        INSERT INTO CAM_INSIDE.DJ_ASSET_PDA_OPT
        (
            AST_PDA_INFO_SN,
            REG_EMP_SEQ
        )
        SELECT
            AST_PDA_INFO_SN,
            #{empSeq}
        FROM
            CAM_INSIDE.DJ_ASSET_PDA_INFO
        WHERE
            ACTIVE = 'Y'
    </insert>

    <select id="getAstPdaInfo" resultType="map" parameterType="map">
        /* getAstPdaInfo */
        SELECT
            API.AST_PDA_INFO_SN,
            API.AST_INFO_SN,
            AI.AST_STS_CODE AS ORIGIN_AST_STS_CODE,
            CONCAT(ACP.AST_CP_CODE_NM, ' > ', ACC.AST_TYPE_CODE_NM, ' > ', AC1.AST_CODE_NM, ' > ', AC2.AST_CODE_NM, ' > ', AC3.AST_CODE_NM) AS AST_GUBUN,
            API.AST_NO,
            API.BARCODE_TYPE,
            API.AST_NAME,
            DATE_FORMAT(API.PURC_DATE, '%Y/%m/%d') AS PURC_DATE,
            API.PURC_PRICE,
            API.MODEL_SIZE,
            API.MODEL_NAME,
            API.PURC_COMPANY_ID,
            '-' AS PURC_COMPANY_NAME,
            API.MF_COMPANY,
            CONCAT(API.QTY, ' ', API.UNIT) AS QTY,
            API.ORG_COUNTRY,
            CASE WHEN API.FUNDING_SOURCE = 0 THEN CONCAT('[법인운영]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 1 THEN CONCAT('[연구개발]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 2 THEN CONCAT('[교육사업]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 4 THEN CONCAT('[개발사업]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 5 THEN CONCAT('[기능보강]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 6 THEN CONCAT('[지원사업]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 7 THEN CONCAT('[협의회]', API.EXP_ACCOUNT)
                 WHEN API.FUNDING_SOURCE = 3 THEN CONCAT('[기타사업]', API.EXP_ACCOUNT)
                END FUNDING_SOURCE_TXT,
            AP.AST_PLACE_NAME,
            API.DEPT_SEQ,
            API.EMP_SEQ,
            API.EMP_NAME,
            API.PURPOSE,
            API.REMARK,
            IC.INSIDE_DT_CODE_NM,
            API.AST_FILE_NO,
            API.RELATED_FILE_NO,

            APO.INSPECTION_TYPE,
            APO.NEW_AST_PLACE_SN,
            APO.NEW_AST_STS_CODE,
            APO.AST_STS_MOD_REASON
        FROM
            CAM_INSIDE.DJ_ASSET_PDA_INFO API
        JOIN
            CAM_INSIDE.DJ_ASSET_PDA_OPT APO
        ON API.AST_PDA_INFO_SN = APO.AST_PDA_INFO_SN
        JOIN
            CAM_INSIDE.DJ_ASSET_INFO AI
        ON API.AST_INFO_SN = AI.AST_INFO_SN
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE_POSITION ACP
        ON API.AST_CODE_COMPANY_ID = ACP.AST_CP_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE_CLASS ACC
        ON API.AST_TYPE_CODE = ACC.AST_TYPE_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC1
        ON API.AST_CODE_ID_1 = AC1.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC2
        ON AC2.AST_UPPER_CODE = AC1.AST_CODE_ID AND API.AST_CODE_ID_2 = AC2.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_CODE AC3
        ON AC3.AST_UPPER_CODE = AC2.AST_CODE_ID AND API.AST_CODE_ID_3 = AC3.AST_CODE
        JOIN
            CAM_INSIDE.DJ_ASSET_PLACE AP
        ON API.ORIGIN_AST_PLACE_SN = AP.AST_PLACE_SN
        JOIN
            CAM_INSIDE.DJ_INSIDE_CODE IC
        ON API.AST_STS_CODE = IC.INSIDE_DT_CODE AND IC.INSIDE_MD_CODE = '03'
        WHERE
            API.AST_PDA_INFO_SN = #{astPdaInfoSn}
    </select>

    <update id="setAstPdaOptInspection" parameterType="map">
        /* setAstPdaOptInspection */
        UPDATE
            CAM_INSIDE.DJ_ASSET_PDA_OPT
        SET
            <if test='inspectionType != null and !"".equals(inspectionType)'>
                WORK_TYPE = #{workType},
                INSPECTION_TYPE = #{inspectionType},
            </if>
            <if test='placeModType != null and !"".equals(placeModType)'>
                PLACE_MOD_TYPE = #{placeModType},
                <if test='"1".equals(placeModType)'>
                    NEW_AST_PLACE_SN = #{newAssetPlaceSn},
                </if>
            </if>
            <if test='astStsCodeModType != null and !"".equals(astStsCodeModType)'>
                AST_STS_CODE_MOD_TYPE = #{astStsCodeModType},
                NEW_AST_STS_CODE = #{newAstStsCode},
                AST_STS_MOD_REASON = #{astStsModReason},
            </if>
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            AST_PDA_INFO_SN = #{astPdaInfoSn}
    </update>

    <update id="setAssetPdaActiveDtUpd" parameterType="map">
        /* setAssetPdaActiveDtUpd */
        UPDATE
            CAM_INSIDE.DJ_ASSET_PDA_INFO
        SET
            ACTIVE_DATE = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            AST_PDA_INFO_SN = #{astPdaInfoSn}
    </update>

    <update id="setAssetInspectionUpload" parameterType="map">
        /* setAssetInspectionUpload */
        UPDATE
            CAM_INSIDE.DJ_ASSET_INFO
        SET
            <if test='newAstPlaceSn != null and !"".equals(newAstPlaceSn)'>
                AST_PLACE_SN = #{newAstPlaceSn},
            </if>
            <if test='newAstStsCode != null and !"".equals(newAstStsCode)'>
                AST_STS_CODE =  #{newAstStsCode},
            </if>
            INSPECTION_TYPE = #{inspectionType},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            AST_INFO_SN = #{astInfoSn}
    </update>
    <!-- PDA 연동목록 종료 -->

    <!-- 지식재산권관리 -->
    <select id="getInventionInfo" resultType="map">
        /* getInventionInfo */
        SELECT
            III.*,
            IFNULL((SELECT SHEI.EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO SHEI WHERE SHEI.DEPT_SEQ = (SELECT SSHDI.DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO SSHDI WHERE (SSHDI.DEPT_SEQ = HEI.DEPT_SEQ OR SSHDI.PARENT_DEPT_SEQ = HEI.DEPT_SEQ) AND DEPT_LEVEL = 1) AND DUTY_CODE IN (1, 2, 3) AND ACTIVE = 'Y'), "공석") AS MANAGER_NAME
        FROM
            CAM_INSIDE.DJ_INVENTION_INFO III
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON III.REG_EMP_SEQ = HEI.EMP_SEQ
        WHERE INVENTION_INFO_SN = #{inventionInfoSn}
    </select>

    <select id="getInventionShareList" resultType="map">
        /* getInventionShareList */
        SELECT
            IISI.*,
            HEI.DEPT_NAME
        FROM
            CAM_INSIDE.DJ_INVENTION_SHARE_INFO IISI
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON IISI.EMP_SEQ = HEI.EMP_SEQ
        WHERE IISI.INVENTION_INFO_SN = #{inventionInfoSn}
    </select>

    <select id="getRprReceiptList" parameterType="map" resultType="map">
        /*getRprReceiptList*/
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    III.*
                FROM
                    CAM_INSIDE.DJ_INVENTION_INFO III,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                <if test="rprClass != null and rprClass != ''">
                    AND RPR_CLASS = #{rprClass}
                </if>
                <if test="'receipt'.equals(mod)">
                    AND RPR_CLASS != 2
                </if>
                <if test="resYn != null and resYn != ''">
                    AND RES_YN = #{resYn}
                </if>
                ORDER BY III.REG_DATE, III.REG_DT
            ) RE
        ORDER BY RE.REG_DATE DESC
    </select>

    <insert id="setInventionInsert" parameterType="map">
        /* setInventionInsert */
        INSERT INTO CAM_INSIDE.DJ_INVENTION_INFO
            (
                SHARE_SN,
                SHARE_NAME,
                IPR_CLASS,
                IPR_NAME,
                TITLE,
                DETAIL_CN,
                REG_DATE,
                REG_EMP_SEQ,
                REG_EMP_NAME
            )
        VALUE
            (
                #{shareSn},
                #{shareName},
                #{iprClass},
                #{iprName},
                #{title},
                #{detailCn},
                #{regDate},
                #{regEmpSeq},
                #{regEmpName}
            )
        <selectKey keyProperty="inventionInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_INVENTION_INFO'
        </selectKey>
    </insert>

    <insert id="setRprResultInsert" parameterType="map">
        /* setRprResultInsert */
        INSERT INTO CAM_INSIDE.DJ_INVENTION_INFO
            (
                RPR_CLASS,
                RPR_NAME,
                SHARE_SN,
                SHARE_NAME,
                IPR_CLASS,
                IPR_NAME,
                TITLE,
                DETAIL_CN,
                REG_DATE,
                REG_NUM,
                REG_EMP_SEQ,
                REG_EMP_NAME
            )
        VALUE
            (
                #{rprClass},
                #{rprName},
                #{shareSn},
                #{shareName},
                #{iprClass},
                #{iprName},
                #{title},
                #{detailCn},
                #{regDate},
                #{regNum},
                #{regEmpSeq},
                #{regEmpName}
            )
        <selectKey keyProperty="inventionInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_INVENTION_INFO'
        </selectKey>
    </insert>

    <insert id="setRprReceiptInsert" parameterType="map">
        /* setRprReceiptInsert */
        INSERT INTO CAM_INSIDE.DJ_INVENTION_INFO
            (
                RPR_CLASS,
                RPR_NAME,
                SHARE_SN,
                SHARE_NAME,
                IPR_CLASS,
                IPR_NAME,
                STATE_SN,
                STATE_NAME,
                TAIN_SN,
                TAIN_NAME,
                TECH_SN,
                TECH_NAME,
                CONFIDENTIALITY_SN,
                CONFIDENTIALITY_NAME,
                TITLE,
                SINGLE_SN,
                SINGLE_NAME,
                APPLICANT_NAME,
                DETAIL_CN,
                APPLICANT_NUM,
                APPLICANT_DT,
                APPLICANT_NATION,
                REG_NUM,
                REG_DATE,
                EXPIRATION_DT,
                REMARK_CN,
                REG_EMP_SEQ,
                REG_EMP_NAME
            )
        VALUE
            (
                #{rprClass},
                #{rprName},
                #{shareSn},
                #{shareName},
                #{iprClass},
                #{iprName},
                #{stateSn},
                #{stateName},
                #{tainSn},
                #{tainName},
                #{techSn},
                #{techName},
                #{confidentialitySn},
                #{confidentialityName},
                #{title},
                #{singleSn},
                #{singleName},
                #{applicantName},
                #{detailCn},
                #{applicantNum},
                #{applicantDt},
                #{applicantNation},
                #{regNum},
                #{regDate},
                #{expirationDt},
                #{remarkCn},
                #{regEmpSeq},
                #{regEmpName}
            )
        <selectKey keyProperty="inventionInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_INVENTION_INFO'
        </selectKey>
    </insert>

    <insert id="setInventionShareInsert" parameterType="map">
        /* setInventionShareInsert */
        INSERT INTO CAM_INSIDE.DJ_INVENTION_SHARE_INFO
        (
            INVENTION_INFO_SN,
            EMP_SEQ,
            EMP_NAME,
            SHARE
        )
        VALUES
        <foreach collection="share" item="item" separator=" , ">
            (
                #{inventionInfoSn},
                #{item.shareEmpSeq},
                #{item.shareEmpName},
                #{item.share}
            )
        </foreach>
    </insert>

    <update id="updateApprStat" parameterType="map">
        /* updateApprStat */
        UPDATE
            CAM_INSIDE.DJ_INVENTION_INFO
        SET
            STATUS = #{approveStatCode},
            APPROVAL_EMP_SEQ = #{empSeq},
            DOC_ID = #{docId}
        WHERE
            INVENTION_INFO_SN = #{inventionInfoSn}
    </update>

    <update id="updateFinalApprStat" parameterType="map">
        /* updateApprFinalStat */
        UPDATE
            CAM_INSIDE.DJ_INVENTION_INFO
        SET
            STATUS = #{approveStatCode}
        WHERE
            INVENTION_INFO_SN = #{inventionInfoSn}
    </update>
    <!-- 지식재산권관리 종료-->

    <!--장비관리 팝업창 (관리자) - 장비등록-->
    <insert id="setEquipmentInsert" parameterType="map">
        /*setEquipmentInsert*/
        INSERT INTO CAM_INSIDE.DJ_EQIPMN_MST
        (

            eqipmn_name, eqipmn_gbn_name, eqipmn_gbn_cmmn_cd_sn, regtr_name, regtr_sn, reg_de, create_dt, actvt_yn, sort_sn, crtr_sn
        )
        VALUES
            (

                #{eqipmnName}, #{eqipmnGbnName}, #{eqipmnGbnCmmnCdSn}, #{regtrName}, #{regtrSn}, #{regDe}, NOW(), 'Y', #{sortSn}, #{crtrSn}
            )
    </insert>

    <!--공통코드 - 장비관리구분 조회-->
    <select id="getEqipmnList" parameterType="map" resultType="map">
        /*getEqipmnList*/
        SELECT
            CM_CODE_NM AS TEXT,
            CM_CODE_ID AS VALUE
        FROM
            CAM_COMMON.DJ_COM_CODE
        WHERE
            CM_GROUP_CODE_ID = 1
    </select>

    <!--장비등록 목록 조회-->
    <select id="getEqipmnRegList" parameterType="map" resultType="map">
        /*getEqipmnRegList*/
        SELECT
        eqipmn_mst_sn as EQIPMN_MST_SN,
        eqipmn_gbn_name AS EQIPMN_GBN_NAME,
        eqipmn_name AS EQIPMN_NAME,
        regtr_name AS REGTR_NAME,
        reg_de AS REG_DE,
        actvt_yn as ACTVT_YN,
        sort_sn as SORT_SN
        FROM
        CAM_INSIDE.DJ_EQIPMN_MST
        WHERE
        1=1
        <if test="eqipmnGbnCmmnCdSn != null and eqipmnGbnCmmnCdSn != ''">
            AND eqipmn_gbn_cmmn_cd_sn = #{eqipmnGbnCmmnCdSn}
        </if>
        <if test="eqipmnName != null and eqipmnName != ''">
            AND EQIPMN_NAME LIKE CONCAT('%', #{eqipmnName}, '%')
        </if>
        AND ACTVT_YN = 'Y'
        ORDER BY SORT_SN ASC
    </select>

    <!--장비등록 목록 삭제-->
    <update id="setEquipmentDelete" parameterType="java.util.List">
        /* setEquipmentDelete */
        UPDATE
        CAM_INSIDE.DJ_EQIPMN_MST
        SET
        actvt_yn = 'N', updt_dt = NOW()
        WHERE
        eqipmn_mst_sn IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--장비등록 목록 업데이트-->
    <update id="setEquipmentUpdate" parameterType="map">
        /* setEquipmentUpdate */
        UPDATE
            CAM_INSIDE.DJ_EQIPMN_MST
        SET
            eqipmn_name = #{eqipmnName}, eqipmn_gbn_name = #{eqipmnGbnName},
            eqipmn_gbn_cmmn_cd_sn = #{eqipmnGbnCmmnCdSn}, regtr_name = #{regtrName},
            reg_de = #{regDe}, regtr_sn = #{regtrSn}, updt_dt  = NOW(), sort_sn = #{sortSn}, updusr_sn = #{updusrSn}
        WHERE
            eqipmn_mst_sn = #{eqipmnMstSn}
    </update>

    <!--장비관리 팝업창 - 장비사용 등록-->
    <insert id="setEquipmentUseInsert" parameterType="map">
        /*setEquipmentInsert*/
        INSERT INTO CAM_INSIDE.DJ_EQIPMN_USE
        (
            eqipmn_mst_sn, use_pd_str_de, use_pd_end_de, user_name, user_sn,
            oper_cn, use_time, use_amt, prtpco_gbn_name, prtpco_gbn_sn,
            reg_de, sort_sn, actvt_yn, create_dt, crtr_sn
        )
        VALUES
            (
                #{eqipmnMstSn}, #{usePdStrDe}, #{usePdEndDe}, #{userName}, #{userSn},
                #{operCn}, #{useTime}, #{useAmt}, #{prtpcoGbnName}, #{prtpcoGbnSn},
                #{regDe}, #{sortSn},'Y', NOW(), #{crtrSn}
            )
    </insert>

    <!--장비사용 등록 - 장비명 조회-->
    <select id="getEqipmnNameList" parameterType="map" resultType="map">
        /*getEqipmnNameList*/
        SELECT
            eqipmn_name AS TEXT,
            eqipmn_mst_sn AS VALUE
        FROM
            CAM_INSIDE.DJ_EQIPMN_MST
        WHERE
            eqipmn_gbn_cmmn_cd_sn = #{eqipmnGbnCmmnCdSn}
    </select>

    <!--공통코드 - 장비사용 등록 - 업체구분 조회-->
    <select id="getPrtpcoGbnNameList" parameterType="map" resultType="map">
        /*getPrtpcoGbnNameList*/
        SELECT
            CM_CODE_NM AS TEXT,
            CM_CODE_ID AS VALUE
        FROM
            CAM_COMMON.DJ_COM_CODE
        WHERE
            CM_GROUP_CODE_ID = 2
    </select>

    <select id="getAssetCodeList" resultType="map">
        SELECT
            *
        FROM
            cam_inside.dj_asset_code
        WHERE
            ACTIVE = 'Y'
    </select>

    <select id="getAssetMcCodeList" resultType="map">
        SELECT distinct
            a.AST_GROUP_CODE_ID,
            a.AST_MC_CODE,
            a.AST_MC_CODE_NM
        FROM
            cam_inside.dj_asset_code AS a
    </select>
    <select id="getAssetMdCodeList" parameterType="map" resultType="map">
        SELECT distinct
            a.AST_MD_CODE,
            a.AST_MD_CODE_NM
        FROM
            cam_inside.dj_asset_code AS a
        WHERE
            a.ACTIVE = 'Y'
          and
            a.AST_MC_CODE = #{AST_MC_CODE}
    </select>

    <select id="getAssetDtCodeList" parameterType="map" resultType="map">
        SELECT
            a.AST_DT_CODE,
            a.AST_DT_CODE_NM,
            CONCAT(a.AST_MC_CODE,a.AST_MD_CODE,a.AST_DT_CODE) AS 'AST_CODE'
        FROM
            cam_inside.dj_asset_code AS a
        WHERE
            a.ACTIVE = 'Y'
          and
            a.AST_MC_CODE = #{AST_MC_CODE}
          and
            a.AST_MD_CODE = #{AST_MD_CODE}
    </select>


    <!--장비사용 목록 조회-->
    <select id="getEqipmnUseList" parameterType="map" resultType="map">
        /*getEqipmnUseList*/
        SELECT
            A.eqipmn_use_sn as EQIPMN_USE_SN,
            A.sort_sn as SORT_SN,
            B.eqipmn_gbn_name as EQIPMN_GBN_NAME,
            B.eqipmn_gbn_cmmn_cd_sn as EQIPMN_GBN_CMMN_CD_SN,
            B.eqipmn_name as EQIPMN_NAME,
            A.use_pd_str_de as USE_PD_STR_DE,
            A.use_pd_end_de as USE_PD_END_DE,
            A.user_name as USER_NAME,
            A.oper_cn as OPER_CN,
            A.use_time as USE_TIME,
            A.use_amt as USE_AMT,
            A.client_prtpco_name as CLIENT_PRTPCO_NAME,
            A.prtpco_gbn_name as PRTPCO_GBN_NAME,
            A.prtpco_gbn_sn as PRTPCO_GBN_SN,
            A.actvt_yn AS ACTVT_YN
        FROM
            CAM_INSIDE.DJ_EQIPMN_USE A
        LEFT JOIN
            CAM_INSIDE.DJ_EQIPMN_MST B
        ON A.eqipmn_mst_sn = B.eqipmn_mst_sn
        WHERE
            1=1
        <if test="usePdStrDe != null and usePdStrDe != '' and usePdEndDe != null and usePdEndDe != ''">
            <![CDATA[
            AND
                (
                    USE_PD_STR_DE >= #{usePdStrDe}
                    AND
                    USE_PD_END_DE <= #{usePdEndDe}
                )
            ]]>
        </if>
        <if test="eqipmnGbnCmmnCdSn != null and eqipmnGbnCmmnCdSn != ''">
            AND eqipmn_gbn_cmmn_cd_sn = #{eqipmnGbnCmmnCdSn}
        </if>
        <if test="prtpcoGbnSn != null and prtpcoGbnSn != ''">
            AND prtpco_gbn_sn = #{prtpcoGbnSn}
        </if>
            AND A.ACTVT_YN = 'Y'
        <if test="searchText != null and searchText != '' and searchVal != null and searchVal != ''">
            AND ${searchText} LIKE CONCAT ('%', #{searchVal}, '%')
        </if>
        ORDER BY SORT_SN ASC
    </select>

    <!--장비사용 목록 삭제-->
    <update id="setEquipmenUseDelete" parameterType="java.util.List">
        /* setEquipmenUseDelete */
        UPDATE
        CAM_INSIDE.DJ_EQIPMN_USE
        SET
        actvt_yn = 'N', updt_dt = NOW()
        WHERE
        eqipmn_use_sn IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--장비사용 목록 업데이트-->
    <update id="setEquipmenUseUpdate" parameterType="map">
        /* setEquipmenUseUpdate */
        UPDATE
            CAM_INSIDE.DJ_EQIPMN_USE
        SET
            eqipmn_mst_sn = #{eqipmnMstSn}, use_pd_str_de = #{usePdStrDe},
            use_pd_end_de = #{usePdEndDe}, user_name = #{userName}, user_sn = #{userSn},
            oper_cn = #{operCn}, use_time = #{useTime}, use_amt = #{useAmt},
            prtpco_gbn_name = #{prtpcoGbnName}, prtpco_gbn_sn = #{prtpcoGbnSn},
            reg_de = #{regDe}, sort_sn = #{sortSn}, updt_dt = NOW(), updusr_sn = #{updusrSn}
        WHERE
            eqipmn_use_sn = #{pk}
    </update>

    <!--장비사용 등록 수정 창 조회-->
    <select id="getEqipmnUseUpdateList" parameterType="map" resultType="map">
        /*getEqipmnUseUpdateList*/
        SELECT
            A.eqipmn_use_sn as EQIPMN_USE_SN,
            A.sort_sn as SORT_SN,
            B.eqipmn_mst_sn as EQIPMN_MST_SN,
            B.eqipmn_gbn_name as EQIPMN_GBN_NAME,
            B.eqipmn_gbn_cmmn_cd_sn as EQIPMN_GBN_CMMN_CD_SN,
            B.eqipmn_name as EQIPMN_NAME,
            DATE_FORMAT(A.use_pd_str_de, '%Y-%m-%d') as USE_PD_STR_DE,
            DATE_FORMAT(A.use_pd_end_de, '%Y-%m-%d') as USE_PD_END_DE,
            A.user_name as USER_NAME,
            A.oper_cn as OPER_CN,
            A.use_time as USE_TIME,
            A.use_amt as USE_AMT,
            A.client_prtpco_name as CLIENT_PRTPCO_NAME,
            A.prtpco_gbn_name as PRTPCO_GBN_NAME,
            A.prtpco_gbn_sn as PRTPCO_GBN_SN,
            A.actvt_yn as ACTVT_YN,
            DATE_FORMAT(A.reg_de, '%Y-%m-%d') as REG_DE
        FROM
            cam_inside.dj_eqipmn_use A
        LEFT JOIN
            cam_inside.dj_eqipmn_mst B
            ON A.eqipmn_mst_sn = B.eqipmn_mst_sn
        WHERE
            A.eqipmn_use_sn = #{pk}
    </select>

    <insert id="setAssetCode" parameterType="map">
        INSERT INTO cam_inside.dj_inside_code(
            INSIDE_MD_CODE, INSIDE_MD_CODE_NM, INSIDE_DT_CODE, INSIDE_DT_CODE_NM, REG_EMP_SEQ, REG_DATE
        ) VALUES (#{INSIDE_MD_CODE}, #{INSIDE_MD_CODE_NM}, #{INSIDE_DT_CODE}, #{INSIDE_DT_CODE_NM}, #{REG_EMP_SEQ}, NOW())
    </insert>

    <select id="getLGCategoryMonthly" resultType="map">
        /* getMainCategoryMonthly */
        SELECT
            EQIPMN_GBN_NAME,
            COUNT(EQIPMN_USE_SN) AS COUNT
        FROM
            (
                SELECT
                    EQIPMN_GBN_NAME,
                    EQIPMN_USE_SN
                FROM
                    CAM_INSIDE.DJ_EQIPMN_USE A
                LEFT JOIN
                    CAM_INSIDE.DJ_EQIPMN_MST B ON A.eqipmn_mst_sn = B.eqipmn_mst_sn
                WHERE
                    1=1
                <![CDATA[
                AND (DATE_FORMAT(USE_PD_STR_DE, '%Y%m') = DATE_FORMAT(CONCAT(#{searchDe}, '-01'), '%Y%m') AND DATE_FORMAT(USE_PD_END_DE, '%Y%m') = DATE_FORMAT(CONCAT(#{searchDe}, '-01'), '%Y%m'))
                ]]>
                AND A.ACTVT_YN = 'Y'
                GROUP BY EQIPMN_GBN_NAME, EQIPMN_NAME
            ) A
        GROUP BY EQIPMN_GBN_NAME
    </select>

    <select id="getMDCategoryMonthly" resultType="map">
        /* getMDCategoryMonthly */
        SELECT
            EQIPMN_GBN_NAME,
            EQIPMN_NAME,
            COUNT(EQIPMN_USE_SN) AS COUNT,
            SUM(USE_TIME) AS USE_TIME
        FROM
            CAM_INSIDE.DJ_EQIPMN_USE A
        LEFT JOIN
            CAM_INSIDE.DJ_EQIPMN_MST B ON A.eqipmn_mst_sn = B.eqipmn_mst_sn
        WHERE
            1=1
        <![CDATA[
        AND (DATE_FORMAT(USE_PD_STR_DE, '%Y%m') = DATE_FORMAT(CONCAT(#{searchDe}, '-01'), '%Y%m') AND DATE_FORMAT(USE_PD_END_DE, '%Y%m') = DATE_FORMAT(CONCAT(#{searchDe}, '-01'), '%Y%m'))
        ]]>
        AND A.ACTVT_YN = 'Y'
        GROUP BY EQIPMN_GBN_NAME, EQIPMN_NAME
    </select>

    <select id="getBookList" resultType="map">
        /* getBookList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IBI.*
                FROM
                    CAM_INSIDE.DJ_BOOK_INFO IBI,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                <choose>
                    <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                        AND (IBI.BK_LG_CD_NAME like CONCAT('%', #{searchText}, '%')
                        OR IBI.BK_MD_CD_NAME like CONCAT('%', #{searchText}, '%')
                        OR IBI.BK_CD_NAME like CONCAT('%', #{searchText}, '%'))
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                        AND IBI.BK_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                        AND IBI.BK_WRITER like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "4".equals(searchType)'>
                        AND IBI.BK_BUYER_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "5".equals(searchType)'>
                        AND IBI.BK_REPL like CONCAT('%', #{searchText}, '%')
                    </when>
                </choose>
                ORDER BY IBI.REG_DT
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <insert id="setBookInsert" parameterType="map">
        /* setBookInsert */
        INSERT INTO CAM_INSIDE.DJ_BOOK_INFO
            (
                BK_LG_CD,
                BK_LG_CD_NAME,
                BK_MD_CD,
                BK_MD_CD_NAME,
                BK_CD,
                BK_CD_NAME,
                BK_NAME,
                BK_WRITER,
                BK_PUBL,
                BK_BUY_COST,
                BK_BUY_CNT,
                BK_BUY_DT,
                BK_BUYER,
                BK_BUYER_NAME,
                BK_USER,
                BK_USER_NAME,
                BK_MNG_SEQ,
                BK_MNG_NAME,
                BK_MNG_SUB_SEQ,
                BK_MNG_SUB_NAME,
                BK_SMRY,
                BK_REPL
            )
        VALUES
            (
                #{bkLgCd},
                #{bkLgCdName},
                #{bkMdCd},
                #{bkMdCdName},
                #{bkCd},
                #{bkCdName},
                #{bkName},
                #{bkWriter},
                #{bkPubl},
                #{bkCost},
                #{bkCnt},
                #{bkBuyDt},
                #{bkBuyer},
                #{bkBuyerName},
                #{bkUser},
                #{bkUserName},
                #{bkMngSeq},
                #{bkMngName},
                #{bkMngSubSeq},
                #{bkMngSubName},
                #{bkSmry},
                #{bkRepl}
            )
    </insert>

</mapper>