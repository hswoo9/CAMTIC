<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="itemSystem">

    <select id="getCrmItemManageList" parameterType="map" resultType="map">
        /* getCrmItemManageList */
        SELECT
            *
        FROM
            CAM_ITEM.DJ_CRM_ITEM_MANGE CIM
        JOIN
            CAM_ITEM.DJ_ITEM_MASTER IM
        ON IM.MASTER_SN = CIM.MASTER_SN
        WHERE
            CIM.CRM_SN = #{crmSn}
    </select>
    
    <insert id="setCrmItemManage" parameterType="map">
        /* setCrmItemManage */
        INSERT INTO CAM_ITEM.DJ_CRM_ITEM_MANGE
        (
            CRM_SN,
            MASTER_SN,
            CRM_ITEM_NO,
            CRM_ITEM_NAME,
            BUS_CLASS,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{crmSn},
            #{masterSn},
            #{crmItemNo},
            #{crmItemName},
            #{busClass},
            #{empSeq}
        )

        <selectKey keyProperty="crmItemSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_ITEM' AND TABLE_NAME = 'DJ_CRM_ITEM_MANGE'
        </selectKey>
    </insert>

    <update id="setCrmItemManageUpd" parameterType="map">
        /* setCrmItemManageUpd */
        UPDATE
            CAM_ITEM.DJ_CRM_ITEM_MANGE
        SET
            MASTER_SN = #{masterSn},
            CRM_ITEM_NO = #{crmItemNo},
            CRM_ITEM_NAME = #{crmItemName},
            BUS_CLASS = #{busClass},
            ACTIVE = #{active},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DT = NOW()
        WHERE
            CRM_ITEM_SN = #{crmItemSn}
        AND
            CRM_SN = #{crmSn}
    </update>

    <delete id="setCrmItemManageDel" parameterType="map">
        /* setCrmItemManageDel */
        DELETE FROM CAM_ITEM.DJ_CRM_ITEM_MANGE WHERE CRM_ITEM_SN IN (${crmItemSn})
    </delete>

    <select id="groupCodeList" parameterType="map" resultType="map">
        /* groupCodeList */
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CD
        GROUP BY GRP_SN
    </select>

    <insert id="insGroupCode" parameterType="map">
        /* insGroupCode */
        INSERT INTO CAM_ITEM.DJ_ITEM_CD
        (
            GRP_SN,
            GRP_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm}
            )
    </insert>

    <select id="codeList" resultType="map" parameterType="map">
        /* codeList */
        SELECT
            A.*
        FROM
            CAM_ITEM.DJ_ITEM_CD A
        WHERE
            LG_CD IS NOT NULL
        AND
            ITEM_CD IS NULL
    </select>

    <select id="selLgCode" resultType="map" parameterType="map">
        /* selLgCode */
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CD
        WHERE
            GRP_SN = #{grpSn}
        <choose>
            <when test='lgCdArr != null and !"".equals(lgCdArr)'>
                AND
                    LG_CD in(${lgCdArr})
            </when>
            <otherwise>
                AND
                    LG_CD is not null
            </otherwise>
        </choose>
          AND
            ITEM_CD is null
    </select>

    <select id="selSmCode" resultType="map" parameterType="map">
        /* selSmCode */
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CD
        WHERE
            GRP_SN = #{grpSn}
        AND
            LG_CD is not null
        <choose>
            <when test='lgCdArr != null and !"".equals(lgCdArr)'>
            AND
                LG_CD in(${lgCdArr})
            </when>
            <otherwise>
            AND
                LG_CD = #{lgCd}
            </otherwise>
        </choose>
        AND
            ITEM_CD is not null
    </select>

    <insert id="insSetLgCode" parameterType="map">
        /* insSetLgCode */
        INSERT INTO CAM_ITEM.DJ_ITEM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCode},
                #{lgCodeNm}
            )
    </insert>

    <select id="smCodeList" parameterType="map" resultType="map">
        /* smCodeList */
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD = #{lgCd}
          AND
            ITEM_CD IS NOT NULL
    </select>

    <insert id="insItemCode" parameterType="map">
        /* insItemCode */
        INSERT INTO CAM_ITEM.DJ_ITEM_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM,
            ITEM_CD,
            ITEM_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCd},
                #{lgCdNm},
                #{itemCd},
                #{itemCdNm}
            )
    </insert>

    <select id="getItemMasterList" parameterType="map" resultType="map">
        /* getItemMasterList */
        SELECT
            IM.*,
            ITC.ITEM_CD_NM AS ITEM_TYPE_NM,
            WHC.ITEM_CD_NM AS WH_CD_NM,
            IUC.ITEM_CD_NM AS ITEM_UNIT_NM
        FROM
            CAM_ITEM.DJ_ITEM_MASTER IM
        JOIN
            CAM_ITEM.DJ_ITEM_CD ITC
        ON ITC.LG_CD = 'IT' AND IM.ITEM_TYPE = ITC.ITEM_CD
        JOIN
            CAM_ITEM.DJ_ITEM_CD WHC
        ON WHC.LG_CD = 'WH' AND IM.WH_CD = WHC.ITEM_CD
        JOIN
            CAM_ITEM.DJ_ITEM_CD IUC
        ON IUC.LG_CD = 'UNIT' AND IM.ITEM_UNIT_CD = IUC.ITEM_CD
        WHERE 1=1

        <if test='active != null and !"".equals(active)'>
            AND IM.ACTIVE = #{active}
        </if>

        <if test='itemUnitCd != null and !"".equals(itemUnitCd)'>
            AND IM.ITEM_UNIT_CD = #{itemUnitCd}
        </if>

        <if test='whCd != null and !"".equals(whCd)'>
            AND IM.WH_CD = #{whCd}
        </if>

        <if test='itemType != null and !"".equals(itemType)'>
            <choose>
                <when test='"PR".equals(itemType)'>
                    AND IM.WH_CD = 'SM'
                </when>
                <otherwise>
                    AND IM.WH_CD != 'SM' AND IM.WH_CD != 'PR'
                </otherwise>
            </choose>
        </if>

        <if test='searchItemType != null and !"".equals(searchItemType)'>
            AND IM.ITEM_TYPE = #{searchItemType}
        </if>

        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword)'>
                AND IM.${searchKeyword} LIKE CONCAT('%', #{searchValue}, '%')
            </when>
            <otherwise>
                <if test='searchValue != null and !"".equals(searchValue)'>
                    AND (
                        IM.ITEM_NO LIKE CONCAT('%', #{searchValue}, '%') OR
                        IM.ITEM_NAME LIKE CONCAT('%', #{searchValue}, '%') OR
                        IM.STANDARD LIKE CONCAT('%', #{searchValue}, '%') OR
                        IM.SAFETY_INVEN LIKE CONCAT('%', #{searchValue}, '%')
                    )
                </if>
            </otherwise>
        </choose>

        <if test='target != null and "crmItem".equals(target)'>
            AND MASTER_SN NOT IN(SELECT MASTER_SN FROM CAM_ITEM.DJ_CRM_ITEM_MANGE WHERE CRM_SN = #{crmSn})
        </if>

        <if test='itemSnList != null and !"".equals(itemSnList)'>
            AND IM.MASTER_SN IN (${itemSnList})
        </if>

        ORDER BY IM.REG_DT DESC
    </select>

    <select id="getItemMaster" parameterType="map" resultType="map">
        /* getItemMaster */
        SELECT
            IM.*,
            MSU.UNIT_PRICE AS MSU_UNIT_PRICE,
            MSU.B2B_PRICE AS MSU_B2B_PRICE,
            WHC.ITEM_CD_NM AS WH_CD_NM,
            IUC.ITEM_CD_NM AS ITEM_UNIT_NM,
            ITC.ITEM_CD_NM AS ITEM_TYPE_NM,
            (SELECT IFNULL(MAX(UNIT_PRICE), 0) FROM CAM_ITEM.DJ_ITEM_INVENTORY WHERE MASTER_SN = IM.MASTER_SN) AS MAX_UNIT_PRICE
        FROM
            CAM_ITEM.DJ_ITEM_MASTER IM
        JOIN
            CAM_ITEM.DJ_ITEM_MASTER_SD_UP MSU
        ON MSU.MASTER_SN = IM.MASTER_SN
        AND <![CDATA[ MSU.START_DT <= DATE_FORMAT(NOW(), '%Y-%m-%d') AND MSU.END_DT >= DATE_FORMAT(NOW(), '%Y-%m-%d') ]]>
        JOIN
            CAM_ITEM.DJ_ITEM_CD WHC
        ON WHC.LG_CD = 'WH' AND IM.WH_CD = WHC.ITEM_CD
        JOIN
            CAM_ITEM.DJ_ITEM_CD IUC
        ON IUC.LG_CD = 'UNIT' AND IM.ITEM_UNIT_CD = IUC.ITEM_CD
        JOIN
            CAM_ITEM.DJ_ITEM_CD ITC
        ON ITC.LG_CD = 'IT' AND IM.ITEM_TYPE = ITC.ITEM_CD
        WHERE 1=1
        <choose>
            <when test='itemNo != null and !"".equals(itemNo)'>
                AND IM.ITEM_NO = #{itemNo}
            </when>
            <otherwise>
                AND IM.MASTER_SN = #{masterSn}
            </otherwise>
        </choose>
    </select>

    <select id="getItemNoDuplicate" parameterType="map" resultType="map">
        /* getItemNoDuplicate */
        SELECT
            ITEM_NO,
            CASE WHEN COUNT(*) > 0 THEN 1
                 ELSE 0
            END AS CHK
        FROM
            CAM_ITEM.DJ_ITEM_MASTER
        WHERE
            ITEM_NO = CONCAT( (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryA}),
                              (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryB}),
                              (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryC}) )
    </select>

    <insert id="setItemMasterReg" parameterType="map">
        /* setItemMasterReg */
        INSERT INTO CAM_ITEM.DJ_ITEM_MASTER
        (
            ITEM_NO,
            CATEGORY_A_SN,
            CATEGORY_B_SN,
            CATEGORY_C_SN,
            ITEM_NAME,
            ITEM_UNIT_CD,
            STANDARD,
            ITEM_TYPE,
            WH_CD,
            UNIT_PRICE,
            COST_PRICE,
            B2B_PRICE,
            CONSUMER_PRICE,
            ACTIVE,
            REG_EMP_SEQ
        )
        VALUES
        (
            CONCAT( (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryA}),
                    (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryB}),
                    (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryC}) ),
            #{categoryA},
            #{categoryB},
            #{categoryC},
            #{itemName},
            #{itemUnitCd},
            #{standard},
            #{itemType},
            #{whCd},
            #{unitPrice},
            #{costPrice},
            #{b2bPrice},
            #{consumerPrice},
            #{active},
            #{empSeq}
        )

        <selectKey keyProperty="masterSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_ITEM' AND TABLE_NAME = 'DJ_ITEM_MASTER'
        </selectKey>
    </insert>

    <update id="setItemMasterRegUpd" parameterType="map">
        /* setItemMasterRegUpd */
        UPDATE
            CAM_ITEM.DJ_ITEM_MASTER
        SET
            ITEM_NO = CONCAT( (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryA}),
                              (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryB}),
                              (SELECT CATEGORY_CODE FROM CAM_ITEM.DJ_ITEM_CATEGORY WHERE ITEM_CATEGORY_SN = #{categoryC}) ),
            CATEGORY_A_SN = #{categoryA},
            CATEGORY_B_SN = #{categoryB},
            CATEGORY_C_SN = #{categoryC},
            ITEM_NAME = #{itemName},
            ITEM_UNIT_CD = #{itemUnitCd},
            STANDARD = #{standard},
            WH_CD = #{whCd},
            UNIT_PRICE = #{unitPrice},
            COST_PRICE = #{costPrice},
            B2B_PRICE = #{b2bPrice},
            CONSUMER_PRICE = #{consumerPrice},
            ACTIVE = #{active},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DT = NOW()
        WHERE
            MASTER_SN = #{masterSn}
    </update>

    <update id="setItemMasterUnitPriceUpd" parameterType="map">
        /* setItemMasterUnitPriceUpd */
        UPDATE
            CAM_ITEM.DJ_ITEM_MASTER
        SET
            UNIT_PRICE = #{unitPrice},
            B2B_PRICE = #{b2bPrice},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DT = NOW()
        WHERE
            MASTER_SN = #{masterSn}
    </update>
    <delete id="setItemMasterDel" parameterType="map">
        /* setItemMasterDel */
        DELETE FROM CAM_ITEM.DJ_ITEM_MASTER WHERE MASTER_SN IN (${masterSn})
    </delete>

    <select id="getItemCategoryList" parameterType="map" resultType="map">
        /*getItemCategoryList*/
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CATEGORY
        WHERE
            CATEGORY_TYPE = #{cgType}
        <if test='parentCode != null and !"".equals(parentCode)'>
          AND
            PARENT_CODE = #{parentCode}
        </if>
          AND
            ACTIVE = 'Y'
    </select>

    <select id="getItemCategoryOne" parameterType="map" resultType="map">
        /*getItemCategoryOne*/
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CATEGORY
        WHERE
            ITEM_CATEGORY_SN = #{itemCgSn}
    </select>

    <select id="getCgDuplicateChk" parameterType="map" resultType="boolean">
        /* getCgDuplicateChk */
        SELECT
            CASE WHEN COUNT(*) > 0 THEN 1
                 ELSE 0
            END
        FROM
            CAM_ITEM.DJ_ITEM_CATEGORY
        WHERE
            CATEGORY_TYPE = #{cgType}
          AND
            CATEGORY_CODE = #{cgCode}
        <if test='parentCode != null and !"".equals(parentCode)'>
          AND
            PARENT_CODE = #{parentCode}
        </if>
          AND
            ACTIVE = 'Y'
    </select>

    <insert id="setItemCategoryReg" parameterType="map">
        /*setItemCategoryReg*/
        INSERT INTO CAM_ITEM.DJ_ITEM_CATEGORY
        (
            CATEGORY_TYPE,
            CATEGORY_CODE,
            CATEGORY_CODE_NM,
            PARENT_CODE,
            PARENT_CODE_NM,
            ACTIVE
        )
        VALUES
        (
            #{cgType},
            #{cgCode},
            #{cgName},
            #{parentCode},
            #{parentCodeNm},
            'Y'
        )
    </insert>

    <update id="setItemCategoryRegUpd" parameterType="map">
        /*setItemCategoryRegUpd*/
        UPDATE
            CAM_ITEM.DJ_ITEM_CATEGORY
        SET
            CATEGORY_CODE = #{cgCode},
            CATEGORY_CODE_NM = #{cgName}
        WHERE
            ITEM_CATEGORY_SN = #{itemCgSn}
    </update>

    <update id="setItemCategoryDel" parameterType="map">
        /*setItemCategoryDel*/
        UPDATE
            CAM_ITEM.DJ_ITEM_CATEGORY
        SET
            ACTIVE = 'N'
        WHERE
            ITEM_CATEGORY_SN IN (${pk})
    </update>

    <update id="updItemCode" parameterType="map">
        /*updItemCode*/
        UPDATE CAM_ITEM.DJ_ITEM_CD
        SET
            ITEM_CD = #{itemCd},
            ITEM_CD_NM = #{itemCdNm}
        WHERE
            ITEM_CD_SN = #{itemCdSn}
    </update>

    <delete id="delDetCode" parameterType="map">
        /*delDetCode*/
        DELETE FROM CAM_ITEM.DJ_ITEM_CD WHERE ITEM_CD_SN = #{itemCdSn}
    </delete>

    <select id="getItemCodeCheck" parameterType="map" resultType="map">
        /*getItemCodeCheck*/
        SELECT
            *
        FROM
            CAM_ITEM.DJ_ITEM_CD
        WHERE
            ITEM_CD = #{itemCd}
        LIMIT 1
    </select>

</mapper>