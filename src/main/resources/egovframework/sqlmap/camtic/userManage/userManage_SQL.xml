<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userManage">
    <select id="getUserPersonnelRecordList" parameterType="map" resultType="map">
        /* getUserPersonnelRecordList */
        SELECT
            a.emp_seq AS 'empSeq',
            a.erp_emp_seq AS 'erpEmpSeq',
            a.login_id AS 'loginId',
            a.EMP_NAME_KR AS 'empName',
            a.EMP_NAME_CN AS 'empNameCn',
            a.BDAY as 'bDay',
            a.ZIP_CODE AS 'zipCode',
            a.ADDR AS 'addr',
            a.OLD_ADDR AS 'oldAddr',
            a.ADDR_DETAIL AS 'addrDetail',
            a.ADDR_REFERENCES AS 'addrReferences',
            a.OFFICE_TEL_NUM AS 'officeTelNum',
            a.MOBILE_TEL_NUM AS 'mobileTelNum',
            a.EMG_TEL_NUM as 'emgTelNum',
            a.CAR_ACTIVE AS 'carActive',
            a.CAR_NUM AS 'carNum',
            a.JOIN_DAY AS 'joinDay',
            a.RESIGN_DAY AS 'resignDay',
            a.RES_REGIS_NUM AS 'resRegisNum',
            a.BANK_NAME AS 'BANK_NAME',
            a.ACCOUNT_NUM AS 'ACCOUNT_NUM',
            a.DEPT_SEQ AS 'deptSeq',
            a.DEPT_NAME AS 'deptName',
            a.DEPT_TEAM_NAME AS 'teamName'
        FROM
            cam_hr.dj_emp_info AS a
        WHERE
            a.EMP_SEQ = #{empSeq};
    </select>
    <select id="getEducationalList" parameterType="map" resultType="map">
        /* getEducationalList */
        SELECT
            B.*,
            C.HR_DT_CODE_NM AS GUBUN_CODE_NM,
            C2.HR_DT_CODE_NM AS DEGREE_CODE_NM,
            C3.HR_DT_CODE_NM AS GRADUATION_CODE_NM
        FROM
            CAM_HR.DJ_EMP_EDUCATIONAL AS B
        LEFT JOIN
            CAM_HR.DJ_HR_CODE C
        on B.GUBUN_CODE = CONCAT(C.HR_MC_CODE, C.HR_MD_CODE, C.HR_DT_CODE)
        LEFT JOIN
            CAM_HR.DJ_HR_CODE C2
        on B.DEGREE_CODE = CONCAT(C2.HR_MC_CODE, C2.HR_MD_CODE, C2.HR_DT_CODE)
        LEFT JOIN
            CAM_HR.DJ_HR_CODE C3
        ON B.GRADUATION_CODE = CONCAT(C3.HR_MC_CODE, C3.HR_MD_CODE, C3.HR_DT_CODE)
        WHERE
            B.EMP_SEQ = #{empSeq}
        AND
            B.admin_approval = 'Y'
        AND
            B.ACTIVE = 'Y'
        ORDER BY B.EDUCATIONAL_ID DESC;
    </select>
    <select id="getMilitarySvcInfo" parameterType="map" resultType="map">
        /* getMilitarySvcInfo */
        SELECT
            A.*,
            B.HR_DT_CODE_NM AS MILITARY_SVC_TYPE_NM
        FROM
            CAM_HR.DJ_EMP_MILITARY_SVC_INFO A
        LEFT JOIN
            CAM_HR.DJ_HR_CODE B
        ON MILITARY_SVC_TYPE = CONCAT(B.HR_MC_CODE, B.HR_MD_CODE, B.HR_DT_CODE)
        WHERE
            A.EMP_SEQ = #{empSeq}
        AND
            A.ADMIN_APPROVAL = 'Y'
    </select>
    <select id="getCareerInfoList" parameterType="map" resultType="map">
        /* getCareerInfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_CAREER A
        WHERE
            A.EMP_SEQ = #{empSeq}
        AND
            A.admin_approval = 'Y'
        AND
            A.ACTIVE = 'Y'
        ORDER BY A.CAREER_ID DESC;
    </select>

    <select id="getFamilyInfoList" parameterType="map" resultType="map">
        /* getFamilyInfoList */
        SELECT
            A.*,
            CASE WHEN A.INCLUDE_YN = 'Y' THEN '예'
                ELSE '아니오'
            END INCLUDE_TXT,
            B.HR_DT_CODE_NM AS FAMILY_CODE_TYPE_NM
        FROM
            CAM_HR.DJ_EMP_FAMILY_INFO A
        LEFT JOIN
            CAM_HR.DJ_HR_CODE B
        ON A.FAMILY_CODE = CONCAT(B.HR_MC_CODE, B.HR_MD_CODE, B.HR_DT_CODE)
        WHERE
            A.EMP_SEQ = #{empSeq}
        AND
            A.ADMIN_APPROVAL = 'Y'
        AND
            A.ACTIVE = 'Y'
        ORDER BY A.FAMILY_ID DESC;
    </select>

    <select id="getLicenceInfoList" parameterType="map" resultType="map">   
        SELECT
            *
        FROM
            cam_hr.dj_emp_info AS a
        LEFT JOIN
            cam_hr.dj_emp_certificate AS b
        ON
            a.EMP_SEQ = b.EMP_SEQ
        WHERE
            a.EMP_SEQ = #{empSeq}
        AND
            b.admin_approval = 'Y'
        AND
            b.ACTIVE = 'Y'
        ORDER BY b.CERTIFICATE_ID DESC;
    </select>

    <select id="getAppointInfoList" parameterType="map" resultType="map">
        /* getAppointInfoList */
        SELECT
            A.*,
            DATE_FORMAT(HISTORY_DT, '%Y-%m-%d') AS historyDt
        FROM
            CAM_HR.DJ_APNT_INFO A
        WHERE
            A.EMP_SEQ = #{empSeq}
        ORDER BY A.APNT_SN DESC;
    </select>

    <select id="getRewardInfoList" parameterType="map" resultType="map">
        /* getRewardInfoList */
        SELECT
            IFNULL((SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 32 AND CM_CODE = HER.REWORD_NAME), HER.REWORD_NAME) AS REWORD_TYPE_NAME1,
            REWORD_ID,
            EMP_SEQ,
            ERP_EMP_SEQ,
            EMP_NAME,
            DEPT_SEQ,
            DEPT_NAME,
            TEAM_SEQ,
            TEAM_NAME,
            POSITION_CODE,
            DUTY_CODE,
            REWORD_TYPE,
            REWORD_TYPE_NAME,
            RWD_SN,
            REWORD_DAY,
            REWORD_NAME,
            RWD_OFM,
            RWD_ST_COMP,
            RWD_FILE_SN,
            RWD_ETC,
            REWORD_AGENCY_NAME,
            REWORD_REASON,
            ACTIVE,
            ADMIN_APPROVAL,
            RETURNYN,
            ADMIN_APPROVAL_DATE,
            RETURNYN_DATE,
            REG_EMP_SEQ,
            REG_DATE,
            MOD_EMP_SEQ,
            MOD_DATE,
            REWARD_ADD_NO
        FROM
            CAM_HR.DJ_EMP_REWORD HER
        WHERE
            EMP_SEQ = #{empSeq}
        AND
            ADMIN_APPROVAL = 'Y'
        AND
            ACTIVE = 'Y'
        ORDER BY REWORD_ID DESC;
    </select>
    <select id="getDutyInfoList" parameterType="map" resultType="map">
        /*getDutyInfoList*/
        SELECT
            *
        FROM
            cam_hr.dj_emp_info AS a
        LEFT JOIN
            cam_hr.dj_emp_duty_info AS b
        ON
            a.EMP_SEQ = b.EMP_SEQ
        WHERE
            a.EMP_SEQ = #{empSeq}
        and
            b.admin_approval = 'Y'
        AND
            b.ACTIVE = 'Y'
        ORDER BY b.DUTY_ID DESC;
    </select>
    <select id="getProposalInfoList" parameterType="map" resultType="map">
        /*getProposalInfoList*/
        SELECT
            *
        FROM
            cam_hr.dj_emp_info AS a
        LEFT join
            cam_hr.dj_emp_proposal_info AS b
        ON
            a.EMP_SEQ = b.EMP_SEQ
        WHERE
            a.EMP_SEQ = #{empSeq}
        AND
            b.admin_approval = 'Y'
        AND
            b.ACTIVE = 'Y'
        ORDER BY PROPOSAL_ID DESC;
    </select>
    <select id="getStudyInfoList" parameterType="map" resultType="map">
        /* getStudyInfoList */
        SELECT
            (
                SELECT COUNT(-1)
                FROM CAMPUS.DJ_EDU_RESULT SER
                WHERE SER.REG_EMP_SEQ = HEI.EMP_SEQ AND SER.ACTIVE = 'Y' AND SER.STATUS = 100 AND SER.MNG_CHECK = 'Y'
            ) AS PERSONAL_COUNT,
            (
                SELECT COUNT(-1) FROM CAMPUS.DJ_STUDY_JOURNAL SJ
                                          LEFT JOIN CAMPUS.DJ_STUDY_RESULT_USER SRU ON SJ.STUDY_JOURNAL_SN = SRU.STUDY_JOURNAL_SN
                                          LEFT JOIN CAMPUS.DJ_STUDY_INFO SSI ON SJ.STUDY_INFO_SN = SSI.STUDY_INFO_SN
                WHERE SRU.STUDY_EMP_SEQ = HEI.EMP_SEQ AND SJ.ACTIVE = 'Y' AND SSI.ADD_STATUS = 'S'
            ) AS STUDY_COUNT,
            (
                SELECT COUNT(-1) FROM CAMPUS.DJ_STUDY_PROPAG SP
                                          LEFT JOIN CAMPUS.DJ_PROPAG_USER SPU ON SP.STUDY_PROPAG_SN = SPU.STUDY_PROPAG_SN
                                          LEFT JOIN CAMPUS.DJ_STUDY_INFO SSI ON SP.STUDY_INFO_SN = SSI.STUDY_INFO_SN
                WHERE SPU.PROPAG_EMP_SEQ = HEI.EMP_SEQ AND SP.ACTIVE = 'Y' AND SSI.ADD_STATUS = 'S'
            ) AS PROPAG_COUNT,
            (
                SELECT COUNT(-1) FROM CAMPUS.DJ_OJT_USER SOU
                                          LEFT JOIN CAMPUS.DJ_OJT_RESULT SOR ON SOR.OJT_RESULT_SN = SOU.OJT_RESULT_SN
                                          LEFT JOIN CAMPUS.DJ_STUDY_INFO SSI ON SOR.STUDY_INFO_SN = SSI.STUDY_INFO_SN
                WHERE SOU.OJT_EMP_SEQ = HEI.EMP_SEQ AND SOR.ACTIVE = 'Y' AND SSI.ADD_STATUS = 'S'
            ) AS OJT_COUNT,
            (SELECT COUNT(CCEU.REAR_EDU_TIME) FROM CAMPUS.DJ_COMMON_EDU CCE LEFT JOIN CAMPUS.DJ_COMMON_EDU_USER CCEU ON CCE.COMMON_EDU_SN = CCEU.COMMON_EDU_SN WHERE CCEU.REG_EMP_SEQ = HEI.EMP_SEQ AND CCE.STATUS = 100 AND CCEU.PART_YN = 'Y' AND CCEU.ACTIVE = 'Y') AS COMMON_EDU_COUNT
        FROM
            CAM_HR.DJ_EMP_INFO HEI
        WHERE
            HEI.EMP_SEQ =  #{empSeq}
          AND WORK_STATUS_CODE = 'Y'
    </select>


<!--홈페이지 게시 포함
    <insert id="setUserReqDetailInsert" parameterType="map">
        /*setUserReqDetailInsert*/
        INSERT INTO CAM_HR.DJ_EMP_INFO(
            EMP_SEQ,
            EMP_NAME_KR,
            LOGIN_PASSWD,
            LOGIN_ID,
            RES_REGIS_NUM,
            CAPS_NUM,
            DUTY_CODE,
            DUTY_NAME,
            POSITION_CODE,
            POSITION_NAME,
            DEPT_NAME,
            DEPT_SEQ,
            DEPT_TEAM_NAME,
            JOB_DETAIL,
            BEFOR_CAREER,
            ACCOUNT_HOLDER,
            BANK_NAME,
            ACCOUNT_NUM,
            ZIP_CODE,
            ADDR,
            ADDR_DETAIL,
            OFFICE_TEL_NUM,
            MOBILE_TEL_NUM,
            EMAIL_ADDR,
            CAR_NUM,
            EMP_NAME_CN,
            EMP_NAME_EN,
            EMG_TEL_NUM,
            LEGAL_DOMICILE,
            HOBBY,
            RELIGION,
            SPECIALITY,
            WEIGHT,
            HEIGHT,
            VISIONL,
            VISIONR,
            HOME_PAGE_ACTIVE,
            WEDDING_ACTIVE,
            <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            WEDDING_DAY,
            </if>
            <if test="GRADE_NAME != null and GRADE_NAME != ''">
                GRADE_NAME,
            </if>
            <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
                DEGREE_CODE,
            </if>
            BLOOD_TYPE,
            DIVISION,
            DIVISION_SUB,
            REG_EMP_SEQ,
            ACTIVE,
            CAR_ACTIVE,
            OCCUPATION_CODE,
            JOIN_DAY,
            WORK_STATUS_CODE,
            LUNAR_CAL,
            CTR_ST_DAY,
            CTR_EN_DAY,
            WEEK_WORK_TIME,
            NICK_NAME,
            CONTRACT,
            SCHOOL,
            DEGREE,
            DEPARTMENT,
            GRADE,
            STUDENT_ID,
            QUALIFICATION,
            LAST_DEGREE,
            CAREER,
            MILITARY,
            SIGNIFICANT,
            BDAY,
            TEMP_DIVISION
        )VALUES(
            (SELECT MAX(CAST(A.EMP_SEQ AS UNSIGNED))+1 FROM CAM_HR.DJ_EMP_INFO A),
            #{EMP_NAME_KR},
            #{LOGIN_PASSWD},
            #{LOGIN_ID},
            #{RES_REGIS_NUM},
            #{CAPS_NUM},
            #{DUTY_CODE},
            #{DUTY_NAME},
            #{POSITION_CODE},
            #{POSITION_NAME},
            #{DEPT_NAME},
            #{DEPT_SEQ},
            #{DEPT_TEAM_NAME},
            #{JOB_DETAIL},
            #{BEFOR_CAREER},
            #{ACCOUNT_HOLDER},
            #{BANK_NAME},
            #{ACCOUNT_NUM},
            #{ZIP_CODE},
            #{ADDR},
            #{ADDR_DETAIL},
            #{OFFICE_TEL_NUM},
            #{MOBILE_TEL_NUM},
            #{EMAIL_ADDR},
            #{CAR_NUM},
            #{EMP_NAME_CN},
            #{EMP_NAME_EN},
            #{EMG_TEL_NUM},
            #{LEGAL_DOMICILE},
            #{HOBBY},
            #{RELIGION},
            #{SPECIALITY},
            #{WEIGHT},
            #{HEIGHT},
            #{VISIONL},
            #{VISIONR},
            #{HOME_PAGE_ACTIVE},
            #{WEDDING_ACTIVE},
            <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
                #{WEDDING_DAY},
            </if>
            <if test="GRADE_NAME != null and GRADE_NAME != ''">
                #{GRADE_NAME},
            </if>
            <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
                #{DEGREE_CODE},
            </if>
            #{BLOOD_TYPE},
            #{division},
            #{divisionSub},
            #{regEmpSeq},
            #{ACTIVE},
            #{CAR_ACTIVE},
            #{OCCUPATION_CODE},
            #{JOIN_DAY},
            'Y',
            #{LUNAR_CAL},
            #{CTR_ST_DAY},
            #{CTR_EN_DAY},
            #{WEEK_WORK_TIME},
            #{NICK_NAME},
            #{CONTRACT},
            #{SCHOOL},
            #{DEGREE},
            #{DEPARTMENT},
            #{GRADE},
            #{STUDENT_ID},
            #{QUALIFICATION},
            #{LAST_DEGREE},
            #{CAREER},
            #{MILITARY},
            #{SIGNIFICANT},
            #{BDAY},
            #{TEMP_DIVISION}
        )
    </insert>-->

    <insert id="setUserReqDetailInsert" parameterType="map">
        /*setUserReqDetailInsert*/
        INSERT INTO CAM_HR.DJ_EMP_INFO(
        EMP_SEQ,
        EMP_NAME_KR,
        LOGIN_PASSWD,
        LOGIN_ID,
        RES_REGIS_NUM,
        CAPS_NUM,
        DUTY_CODE,
        DUTY_NAME,
        POSITION_CODE,
        POSITION_NAME,
        DEPT_NAME,
        DEPT_SEQ,
        DEPT_TEAM_NAME,
        JOB_DETAIL,
        BEFOR_CAREER,
        ACCOUNT_HOLDER,
        BANK_NAME,
        ACCOUNT_NUM,
        ZIP_CODE,
        ADDR,
        ADDR_DETAIL,
        OFFICE_TEL_NUM,
        MOBILE_TEL_NUM,
        EMAIL_ADDR,
        CAR_NUM,
        EMP_NAME_CN,
        EMP_NAME_EN,
        EMG_TEL_NUM,
        LEGAL_DOMICILE,
        HOBBY,
        RELIGION,
        SPECIALITY,
        WEIGHT,
        HEIGHT,
        VISIONL,
        VISIONR,
        <if test="genderCode != null and genderCode != ''">
            GENDER_CODE,
        </if>
        WEDDING_ACTIVE,
        <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            WEDDING_DAY,
        </if>
        <if test="GRADE_NAME != null and GRADE_NAME != ''">
            GRADE_NAME,
        </if>
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            DEGREE_CODE,
        </if>
        BLOOD_TYPE,
        DIVISION,
        DIVISION_SUB,
        REG_EMP_SEQ,
        ACTIVE,
        CAR_ACTIVE,
        OCCUPATION_CODE,
        JOIN_DAY,
        WORK_STATUS_CODE,
        LUNAR_CAL,
        CTR_ST_DAY,
        CTR_EN_DAY,
        WEEK_WORK_TIME,
        NICK_NAME,
        CONTRACT,
        SCHOOL,
        DEGREE,
        DEPARTMENT,
        GRADE,
        STUDENT_ID,
        QUALIFICATION,
        LAST_DEGREE,
        CAREER,
        MILITARY,
        SIGNIFICANT,
        BDAY,
        TEMP_DIVISION,
        MY_COMENT
        )VALUES(
        (SELECT MAX(CAST(A.EMP_SEQ AS UNSIGNED))+1 FROM CAM_HR.DJ_EMP_INFO A),
        #{EMP_NAME_KR},
        #{LOGIN_PASSWD},
        #{LOGIN_ID},
        #{RES_REGIS_NUM},
        #{CAPS_NUM},
        #{DUTY_CODE},
        #{DUTY_NAME},
        #{POSITION_CODE},
        #{POSITION_NAME},
        #{DEPT_NAME},
        #{DEPT_SEQ},
        #{DEPT_TEAM_NAME},
        #{JOB_DETAIL},
        #{BEFOR_CAREER},
        #{ACCOUNT_HOLDER},
        #{BANK_NAME},
        #{ACCOUNT_NUM},
        #{ZIP_CODE},
        #{ADDR},
        #{ADDR_DETAIL},
        #{OFFICE_TEL_NUM},
        #{MOBILE_TEL_NUM},
        #{EMAIL_ADDR},
        #{CAR_NUM},
        #{EMP_NAME_CN},
        #{EMP_NAME_EN},
        #{EMG_TEL_NUM},
        #{LEGAL_DOMICILE},
        #{HOBBY},
        #{RELIGION},
        #{SPECIALITY},
        #{WEIGHT},
        #{HEIGHT},
        #{VISIONL},
        #{VISIONR},
        <if test="genderCode != null and genderCode != ''">
            #{genderCode},
        </if>
        #{WEDDING_ACTIVE},
        <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            #{WEDDING_DAY},
        </if>
        <if test="GRADE_NAME != null and GRADE_NAME != ''">
            #{GRADE_NAME},
        </if>
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            #{DEGREE_CODE},
        </if>
        #{BLOOD_TYPE},
        #{division},
        #{divisionSub},
        #{regEmpSeq},
        #{ACTIVE},
        #{CAR_ACTIVE},
        #{OCCUPATION_CODE},
        #{JOIN_DAY},
        'Y',
        #{LUNAR_CAL},
        #{CTR_ST_DAY},
        #{CTR_EN_DAY},
        #{WEEK_WORK_TIME},
        #{NICK_NAME},
        #{CONTRACT},
        #{SCHOOL},
        #{DEGREE},
        #{DEPARTMENT},
        #{GRADE},
        #{STUDENT_ID},
        #{QUALIFICATION},
        #{LAST_DEGREE},
        #{CAREER},
        #{MILITARY},
        #{SIGNIFICANT},
        #{BDAY},
        #{TEMP_DIVISION},
        #{MY_COMENT}
        )

        <selectKey keyProperty="empSeq" resultType="Integer" order="BEFORE">
            SELECT MAX(CAST(A.EMP_SEQ AS UNSIGNED))+1 FROM CAM_HR.DJ_EMP_INFO A
        </selectKey>
    </insert>

    <select id="getCodeList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            cam_hr.dj_hr_code
        WHERE
            ACTIVE = 'Y'
    </select>
    <select id="getDeptCodeList2" parameterType="map" resultType="map">
        /*getDeptCodeList2*/
        SELECT
            DI.DEPT_NAME AS deptName,
            DI.DEPT_SEQ AS deptSeq
        FROM
            CAM_HR.DJ_DEPT_INFO DI
        WHERE
            DI.DEPT_LEVEL = 1
        ORDER BY DI.DEPT_LEVEL, DI.ORDER_SN
    </select>

    <select id="getDeptCodeList" parameterType="map" resultType="map">
        /*getDeptCodeList*/
        SELECT
            DEPT_NAME AS text,
            DEPT_SEQ AS value
        FROM
            CAM_HR.DJ_DEPT_INFO
        WHERE
            PARENT_DEPT_SEQ = #{deptSeq}
        ORDER BY DEPT_LEVEL, ORDER_SN
    </select>
    <select id="getEmpInfoList" parameterType="map" resultType="map">
        SELECT
            HEI.*,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
            IFNULL(CASE WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END, "") AS SPOT,

            CASE WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
            WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
            ELSE 999 END SORT

        FROM
        CAM_HR.DJ_EMP_INFO	AS HEI
        LEFT JOIN
        CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
            HEI.ACTIVE = 'Y'
        <if test='userGender != null and !"".equals(userGender)'>
        AND
            HEI.GENDER_CODE = #{userGender}
        </if>
        <if test='startDate != null and !"".equals(startDate)'>
            <![CDATA[
	    AND
	        DATE_FORMAT(#{startDate}, '%Y%m%d') >= DATE_FORMAT(HEI.JOIN_DAY, '%Y%m%d')
	    ]]>
        </if>
        AND
            ${userKind} like concat('%', #{kindContent} ,'%')
        <if test='deptComp != null and !"".equals(deptComp)'>
            AND
            HEI.DEPT_SEQ = #{deptComp}
            <if test='deptTeam == deptTeam or "".equals(deptTeam)'>
                OR
                HEI.DEPT_SEQ IN (
                                    SELECT
                                        DEPT_SEQ
                                    FROM
                                        CAM_HR.DJ_DEPT_INFO
                                    WHERE
                                        DEPT_SEQ = #{deptComp}
                                    OR
                                        PARENT_DEPT_SEQ = #{deptComp}
                                    )
            </if>
        </if>
        <if test='userGender != null and !"".equals(userGender)'>
            AND
            HEI.GENDER_CODE = #{userGender}
        </if>
        <if test='deptTeam != null and !"".equals(deptTeam)'>
            AND
            HEI.DEPT_SEQ = #{deptTeam}
        </if>
        <if test='arr != null and !"".equals(arr)'>
        AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        <if test='dsI == "Y" or "Y".equals(dsI)'>
            AND
                TEMP_DIVISION = "Y"
        </if>
        ORDER BY SORT
    </select>
    <select id="getEmpInfoDetailList" parameterType="map" resultType="map">
        select
        A.*,
        SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire,
        SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1 AS hire_mon
        from
        (
        SELECT
        ROUND((TO_DAYS(NOW()) - (TO_DAYS(REPLACE(STR_TO_DATE(a.BDAY, '%Y-%m-%d'), "-", "")))) / 365) AS age,
        a.*,
        (select dept_seq from CAM_HR.dj_dept_info where dept_seq = a.dept_seq and dept_level =1) as dept_lv1,
        (select parent_dept_seq from cam_hr.dj_dept_info where dept_seq = a.dept_seq and dept_level =2) as parent_dept_seq,
        (select dept_seq from CAM_HR.dj_dept_info where dept_seq = a.dept_seq and dept_level =2) as dept_lv2,
        CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE a.DEPT_SEQ END AS DEPT_SEQ_NEW,
        CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE a.DEPT_NAME END AS DEPT_NAME1,
        CASE WHEN DDI.DEPT_LEVEL = 2 THEN a.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
        CASE WHEN DDI.DEPT_LEVEL = 2 THEN a.DEPT_NAME ELSE "" END AS TEAM_NAME,
        date_format(a.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
        date_format(a.RESIGN_DAY,'%Y-%m-%d') AS RESIGN_DAY2,
        case
        when a.appoint_gubun = '04' then (SELECT c.hr_dt_code_nm FROM CAM_HR.dj_hr_code AS c WHERE c.HR_MD_CODE = '07' and c.HR_DT_CODE = a.appoint_gubun_detail)
        else
        (SELECT c.hr_dt_code_nm FROM CAM_HR.dj_hr_code AS c WHERE c.HR_MD_CODE = '06' and c.HR_DT_CODE = a.appoint_gubun)
        END AS 'APPOINT_GUBUN_NM'
        FROM
        CAM_HR.dj_emp_info	AS a
        LEFT JOIN
        CAM_HR.DJ_DEPT_INFO DDI ON a.DEPT_SEQ = DDI.DEPT_SEQ) as A
        where
        1=1
            <if test='startDate != null and !"".equals(startDate)'>
                <![CDATA[
            AND
                DATE_FORMAT(#{startDate}, '%Y%m%d') >= DATE_FORMAT(a.JOIN_DAY, '%Y%m%d')
            ]]>
            </if>
            <if test='workStatusCode != null and !"".equals(workStatusCode)'>
                AND
                A.WORK_STATUS_CODE = #{workStatusCode}
            </if>
            <if test='searchDetail1 != null and !"".equals(searchDetail1)'>
                and
                A.DIVISION in (${searchDetail1})
            </if>
            <if test='searchDetail2 != null and !"".equals(searchDetail2)'>
                and
                A.GENDER_CODE in (${searchDetail2})
            </if>
            <if test='searchDetail3 != null and !"".equals(searchDetail3)'>
                and
                (A.DEPT_SEQ in (${searchDetail3})OR A.parent_dept_seq in (${searchDetail3})
                     <if test='searchDetail4 != null and !"".equals(searchDetail4)'>
                        or A.DEPT_SEQ in (${searchDetail4})
                     </if>
                )
            </if>
        <if test='searchDetail4 != null and !"".equals(searchDetail4)'>
            <if test='searchDetail3 == null or "".equals(searchDetail3)'>
                and
                    A.DEPT_SEQ in (${searchDetail4})
            </if>
        </if>
<!--            <if test='searchDetail3 != null and !"".equals(searchDetail3)'>-->
<!--                <if test='searchDetail4 != null and !"".equals(searchDetail4)'>-->
<!--                    and-->
<!--                    (A.parent_dept_seq in (${searchDetail3})-->
<!--                    or-->
<!--                    A.dept_lv2 in (${searchDetail4})-->
<!--                    or-->
<!--                    A.dept_lv1 in (${searchDetail3}))-->
<!--                </if>-->
<!--                <if test='searchDetail4 == null or "".equals(searchDetail4)'>-->
<!--                    and-->
<!--                    A.dept_lv1 in (${searchDetail3})-->
<!--                </if>-->
<!--            </if>-->
<!--            <if test='searchDetail4 != null and !"".equals(searchDetail4)'>-->
<!--                <if test='searchDetail3 != null and !"".equals(searchDetail3)'>-->
<!--                    and-->
<!--                    (A.parent_dept_seq in (${searchDetail3})-->
<!--                    or-->
<!--                    A.dept_lv2 in (${searchDetail4})-->
<!--                    or-->
<!--                    A.dept_lv1 in (${searchDetail3}))-->
<!--                </if>-->
<!--                <if test='searchDetail3 == null or "".equals(searchDetail3)'>-->
<!--                    and-->
<!--                    A.dept_lv2 in (${searchDetail4})-->
<!--                </if>-->
<!--            </if>-->
            <if test='searchDetail5 != null and !"".equals(searchDetail5)'>
                and
                A.DUTY_NAME in (${searchDetail5})
            </if>
            <if test='searchDetail6 != null and !"".equals(searchDetail6)'>
                <if test="sd6_flag > 1">
                    and
                    <![CDATA[
                        (A.age >= #{searchDetail6_1} AND A.age <= #{searchDetail6_2})
                   ]]>
                </if>
                <if test="sd6_flag == 1">
                    and
                    <![CDATA[
                        A.age >= #{searchDetail6}
                    ]]>
                </if>
            </if>
            <if test='searchDetail7 != null and !"".equals(searchDetail7)'>
                and
                SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) in (${searchDetail7})
            </if>
            <if test='searchDetail8 != null and !"".equals(searchDetail8)'>
                and
                A.DEGREE_CODE in (${searchDetail8})
            </if>
    </select>
    <insert id="setEducationalInfo" parameterType="map">
        /*setEducationalInfo*/
        INSERT INTO CAM_HR.DJ_EMP_EDUCATIONAL_TMP(
              EMP_SEQ
             ,EMP_NAME
             ,ADMISSION_DAY
             ,GRADUATION_DAY
             ,DEGREE_CODE
             ,REG_EMP_SEQ
             ,REG_DATE
             ,SCHOOL_NAME
             ,RMK
             ,GUBUN_CODE
             ,GRADUATION_CODE
             ,SCORE
             ,EDUCATIONAL_PK
             ,APPLICATION_ACTIVE
        )VALUES (
            #{EMP_SEQ}
            ,#{EMP_NAME}
            ,#{sDate}
            ,#{eDate}
            ,#{degree}
            ,#{EMP_SEQ}
            ,NOW()
            ,#{school}
            ,#{bmk}
            ,#{gubun}
            ,#{graduation}
            ,#{score}
            ,#{pk}
            ,#{applicationactive}
        )
        <selectKey keyProperty="educationalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_EDUCATIONAL_TMP'
        </selectKey>
    </insert>

    <insert id="setCareerInfo" parameterType="map">
        /*setCareerInfo*/
        INSERT INTO cam_hr.dj_emp_career_tmp(
              EMP_SEQ
             ,EMP_NAME
             ,EMPLOY_DEPT_NAME
             ,JOIN_DAY
             ,RESIGN_DAY
             ,POSITION_OR_DUTY
             ,CAREER_PERIOD
             ,REG_EMP_SEQ
             ,REG_DATE
             ,RMK
             ,MAIN_TASK
             ,CAREER_MONTH
            ,CAREER_PK
            ,APPLICATION_ACTIVE
        )VALUES (
            #{EMP_SEQ}
            ,#{EMP_NAME}
            ,#{place}
            ,#{sDate}
            ,#{eDate}
            ,#{position}
            ,#{dateY}
            ,#{EMP_SEQ}
            ,NOW()
            ,#{bmk}
            ,#{workType}
            ,#{dateM}
            ,#{pk}
            ,#{applicationactive}
            )
        <selectKey keyProperty="careerId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CAREER_TMP'
        </selectKey>
    </insert>

    <select id="getMilitaryInfo" parameterType="map" resultType="map">
        /* getMilitaryInfo */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_MILITARY_SVC_INFO
        WHERE
            MSI_INFO_ID = #{msiInfoId}
    </select>

    <insert id="setMilitaryInfo" parameterType="map">
        /*setMilitaryInfo*/
        INSERT INTO CAM_HR.DJ_EMP_MILITARY_SVC_INFO_TMP(
                 EMP_SEQ
                ,EMP_NAME
                ,MILITARY_SVC_TYPE
                ,M_UNFUL_REASON
                ,M_ENLIST_DAY
                ,M_DISCHARGE_DAY
                ,REG_EMP_SEQ
                ,REG_DATE
                ,M_LAST_RANK
                ,M_DIVISION
                ,MOS
                ,MSI_INFO_PK
                ,APPLICATION_ACTIVE
        )VALUES (
                #{EMP_SEQ}
                ,#{EMP_NAME}
                ,#{mGubun}
                ,#{reason}
                ,#{sDate}
                ,#{eDate}
                ,#{EMP_SEQ}
                ,now()
                ,#{rank}
                ,#{mType}
                ,#{mDept}
                ,#{pk}
                ,#{applicationactive}
                )
    </insert>
    <!--<update id="setMilitaryInfoUpd" parameterType="map">
        /* setMilitaryInfoUpd */
        UPDATE
            CAM_HR.DJ_EMP_MILITARY_SVC_INFO
        SET
            MILITARY_SVC_TYPE = #{mGubun},
            M_UNFUL_REASON = #{reason},
            M_ENLIST_DAY = #{sDate},
            M_DISCHARGE_DAY = #{eDate},
            M_LAST_RANK = #{rank},
            M_DIVISION = #{mType},
            MOS = #{mDept},
            MOD_EMP_SEQ = #{EMP_SEQ}
        WHERE
            MSI_INFO_ID = #{msiInfoId}
    </update>-->
    <insert id="setFmailyInfo" parameterType="map">
        /*setFmailyInfo*/
        INSERT INTO CAM_HR.DJ_EMP_FAMILY_INFO_TMP(
                EMP_SEQ
                ,EMP_NAME
                ,FAMILY_CODE
                ,FAMILY_NAME
                ,FAMILY_BIRTH
                ,FAMILY_JOB
                ,INCLUDE_YN
                ,REG_EMP_SEQ
                ,REG_DATE
                ,FAMILY_PK
                ,APPLICATION_ACTIVE
        )VALUES (
                #{EMP_SEQ}
                ,#{EMP_NAME}
                ,#{relation}
                ,#{fName}
                ,#{bDay}
                ,#{job}
                ,#{includeType}
                ,#{EMP_SEQ}
                ,now()
                ,#{pk}
                ,#{applicationactive}
                )
    </insert>
    <insert id="setLicenceInfo" parameterType="map">
        /*setLicenceInfo*/
        INSERT INTO CAM_HR.DJ_EMP_CERTIFICATE_TMP(
                  EMP_SEQ
                 ,EMP_NAME
                 ,CERTIFICATE_NAME
                 ,CERTIFICATE_NUM
                 ,ACQUISITION_DAY
                 ,ISSUER
                 ,RMK
                 ,REG_EMP_SEQ
                 ,REG_DATE
                 ,CERTIFICATE_PK
                 ,APPLICATION_ACTIVE
        )VALUES (
                #{EMP_SEQ}
                ,#{EMP_NAME}
                ,#{licenseName}
                ,#{licenseNum}
                ,#{sDate}
                ,#{agency}
                ,#{bmk}
                ,#{EMP_SEQ}
                ,now()
                ,#{pk}
                ,#{applicationactive}
                )
        <selectKey keyProperty="certificateId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CERTIFICATE_TMP'
        </selectKey>
    </insert>
    <insert id="setAppointingInfo" parameterType="map">
        INSERT INTO cam_hr.dj_emp_appoint(
                  EMP_SEQ
                 ,EMP_NAME
                 ,APPOINT_DAY
                 ,APPOINT_TITLE
                 ,APPOINT_COMMENT
                 ,RMK
                 ,REG_EMP_SEQ
                 ,REG_DATE
        )VALUES (
                #{EMP_SEQ}
                ,#{EMP_NAME}
                ,#{sDate}
                ,#{aGubun}
                ,#{reason}
                ,#{bmk}
                ,#{EMP_SEQ}
                ,now()
                )
    </insert>
    <!--인사기록카드 상벌 사항 추가-->
    <insert id="setRewardInfo" parameterType="map">
        /*setRewardInfo*/
        INSERT INTO CAM_HR.DJ_EMP_REWORD_TMP(
                  EMP_SEQ
                 ,ERP_EMP_SEQ
                 ,EMP_NAME
                 ,DEPT_SEQ
                 ,DEPT_NAME
                 ,TEAM_SEQ
                 ,TEAM_NAME
                 ,REWORD_DAY
                 ,REWORD_TYPE
                 ,REWORD_TYPE_NAME
                 ,REWORD_NAME
                 ,RWD_ST_COMP
                 ,RWD_OFM
                 ,REG_EMP_SEQ
                 ,REG_DATE
                 ,RWD_ETC
                 ,REWORD_PK
                 ,APPLICATION_ACTIVE
        )VALUES (
                #{EMP_SEQ}
                ,#{regErpEmpCd}
                ,#{EMP_NAME}
                ,#{regDeptSeq}
                ,#{regDeptName}
                ,#{regTeamSeq}
                ,#{regTeamName}
                ,#{sDate}
                ,#{rGubunOutInType}
                ,#{rGubunOutInTypeName}
                ,#{rGubun}
                ,#{agency}
                ,#{rIssue}
                ,#{EMP_SEQ}
                ,now()
                ,''
                ,#{pk}
                ,#{applicationactive}
                )
        <selectKey keyProperty="rewordId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_REWORD_TMP'
        </selectKey>
    </insert>
    <insert id="setJobInfo" parameterType="map">
        INSERT INTO cam_hr.dj_emp_duty_info_tmp(
                EMP_SEQ
                , EMP_NAME
                , POSITON_NAME
                , WORK_PAY
                , DUTY_DETAIL
                , WORK_JOIN_DAY
                , WORK_LEAVE_DAY
                , REG_EMP_SEQ
                , REG_DATE
                , DUTY_PK
                , APPLICATION_ACTIVE
        )VALUES (
                #{EMP_SEQ}
                , #{EMP_NAME}
                , #{POSITON_NAME}
                , #{WORK_PAY}
                , #{DUTY_DETAIL}
                , #{sDate}
                , #{eDate}
                , #{EMP_SEQ}
                , NOW()
                , #{pk}
                , #{applicationactive}
        )
    </insert>
    <insert id="setProposalInfo" parameterType="map">
        INSERT INTO cam_hr.dj_emp_proposal_info_tmp(
            EMP_SEQ
            ,EMP_NAME
            ,PROPOSAL_GUBUN
            ,PROPOSAL_DETAIL
            ,PROPOSAL_CHECK_CHOICE
            ,PROPOSAL_DATE
            ,REG_EMP_SEQ
            ,REG_DATE
            ,PROPOSAL_PK
            ,APPLICATION_ACTIVE
        )VALUES (
            #{EMP_SEQ}
            ,#{EMP_NAME}
            ,#{pGubun}
            ,#{PROPOSAL_DETAIL}
            ,#{PROPOSAL_CHECK_CHOICE}
            ,#{sDate}
            ,#{EMP_SEQ}
            ,NOW()
            ,#{pk}
            ,#{applicationactive}
        )
    </insert>

    <select id="getPersonRecordApplyList" parameterType="map" resultType="map">
        /*getPersonRecordApplyList*/
        SELECT
        row_number() over(ORDER BY a.reg_date DESC) num,
        A.*
        from
        (SELECT
        a.EDUCATIONAL_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_educational' AS 'type',
        '학력사항' AS 'typeName',
        'EDUCATIONAL_ID' AS 'key'
        FROM
        cam_hr.dj_emp_educational_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        union
        SELECT
        a.CAREER_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_career' AS 'type',
        '경력사항' AS 'typeName',
        'CAREER_ID' AS 'key'
        FROM
        cam_hr.dj_emp_career_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        UNION
        SELECT
        a.MSI_INFO_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_military_svc_info' AS 'type',
        '병력사항' AS 'typeName',
        'MSI_INFO_ID' AS 'key'
        FROM
        cam_hr.dj_emp_military_svc_info_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        UNION
        SELECT
        a.FAMILY_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_family_info' AS 'type',
        '가족사항' AS 'typeName',
        'FAMILY_ID' AS 'key'
        FROM
        cam_hr.dj_emp_family_info_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        UNION
        SELECT
        a.CERTIFICATE_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_certificate' AS 'type',
        '보유면허' AS 'typeName',
        'CERTIFICATE_ID' AS 'key'
        FROM
        cam_hr.dj_emp_certificate_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        UNION
        SELECT
        a.REWORD_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_reword' AS 'type',
        '상벌사항' AS 'typeName',
        'REWORD_ID' AS 'key'
        FROM
        cam_hr.dj_emp_reword_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        WHERE a.RWD_ETC = ''
        UNION
        SELECT
        a.DUTY_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_duty_info' AS 'type',
        '직무사항' AS 'typeName',
        'DUTY_ID' AS 'key'
        FROM
        cam_hr.dj_emp_duty_info_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq
        UNION
        SELECT
        a.PROPOSAL_ID AS 'ID',
        b.EMP_SEQ,
        b.DEPT_NAME,
        b.DEPT_TEAM_NAME,
        b.POSITION_NAME,
        a.EMP_NAME,
        date_format(IFNULL(a.mod_date, a.reg_date), '%Y-%m-%d') AS REG_DATE,
        a.REG_DATE as 'REG_DATE2',
        a.admin_approval,
        a.returnyn,
        a.APPLICATION_ACTIVE,
        'dj_emp_proposal_info' AS 'type',
        '제안제도' AS 'typeName',
        'PROPOSAL_ID' AS 'key'
        FROM
        cam_hr.dj_emp_proposal_info_tmp AS a
        LEFT join
        cam_hr.dj_emp_info AS b
        on
        a.emp_seq = b.emp_seq) AS A
        WHERE
        1=1
        <if test='name != null and !"".equals(name)'>
            and
            A.EMP_NAME LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='drop1 != null and !"".equals(drop1)'>
            and
        <choose>
            <when test='"1".equals(drop1)'>
                A.typeName = '학력사항'
            </when>
            <when test='"2".equals(drop1)'>
                A.typeName = '경력사항'
            </when>
            <when test='"3".equals(drop1)'>
                A.typeName = '병력사항'
            </when>
            <when test='"4".equals(drop1)'>
                A.typeName = '가족사항'
            </when>
            <when test='"5".equals(drop1)'>
                A.typeName = '보유면허'
            </when>
            <!--<when test='"6".equals(drop1)'>
                A.typeName = '발령사항'
            </when>-->
            <when test='"7".equals(drop1)'>
                A.typeName = '상벌사항'
            </when>
            <when test='"8".equals(drop1)'>
                A.typeName = '직무사항'
            </when>
            <when test='"9".equals(drop1)'>
                A.typeName = '제안제도'
            </when>
        </choose>
        </if>
        <if test='status != null and !"".equals(status)'>
            and
        <choose>
            <when test='"1".equals(status)'>
                A.admin_approval ='N'
                and
        		A.returnyn ='N'
            </when>
            <when test='"2".equals(status)'>
                A.admin_approval ='N'
                and
        		A.returnyn ='Y'
            </when>
            <when test='"3".equals(status)'>
                A.admin_approval ='Y'
                and
        		A.returnyn ='N'
            </when>
        </choose>
        </if>
        <if test='startDate != null and !"".equals(startDate)'>
            <![CDATA[
		AND
		DATE_FORMAT(#{startDate}, '%Y%m%d') <= DATE_FORMAT(A.REG_DATE, '%Y%m%d')
		AND
		DATE_FORMAT(#{endDate}, '%Y%m%d') >= DATE_FORMAT(A.REG_DATE, '%Y%m%d')
		]]>
        </if>
        <if test='dept != null and !"".equals(dept)'>
            and
            A.DEPT_NAME = #{dept}
        </if>
        <if test='team != null and !"".equals(team)'>
            and
            A.DEPT_TEAM_NAME = #{team}
        </if>

        ORDER BY A.REG_DATE DESC
    </select>

    <select id="getPersonRecordApplyList2" parameterType="map" resultType="map">
        /* getPersonRecordApplyList2 */
        SELECT
            A.*
        from
            (SELECT
            a.EDUCATIONAL_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_educational' AS 'type',
            '학력사항' AS 'typeName',
            'EDUCATIONAL_ID' AS 'key'
            FROM
            cam_hr.dj_emp_educational AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            union
            SELECT
            a.CAREER_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_career' AS 'type',
            '경력사항' AS 'typeName',
            'CAREER_ID' AS 'key'
            FROM
            cam_hr.dj_emp_career AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            UNION
            SELECT
            a.MSI_INFO_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_military_svc_info' AS 'type',
            '병력사항' AS 'typeName',
            'MSI_INFO_ID' AS 'key'
            FROM
            cam_hr.dj_emp_military_svc_info AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            UNION
            SELECT
            a.FAMILY_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_family_info' AS 'type',
            '가족사항' AS 'typeName',
            'FAMILY_ID' AS 'key'
            FROM
            cam_hr.dj_emp_family_info AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            UNION
            SELECT
            a.CERTIFICATE_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_certificate' AS 'type',
            '보유면허' AS 'typeName',
            'CERTIFICATE_ID' AS 'key'
            FROM
            cam_hr.dj_emp_certificate AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            UNION
            SELECT
            a.REWORD_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_reword' AS 'type',
            '상벌사항' AS 'typeName',
            'REWORD_ID' AS 'key'
            FROM
            cam_hr.dj_emp_reword AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            WHERE a.RWD_ETC = ''
            UNION
            SELECT
            a.DUTY_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_duty_info' AS 'type',
            '직무사항' AS 'typeName',
            'DUTY_ID' AS 'key'
            FROM
            cam_hr.dj_emp_duty_info AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq
            UNION
            SELECT
            a.PROPOSAL_ID AS 'ID',
            b.EMP_SEQ,
            b.DEPT_NAME,
            b.DEPT_TEAM_NAME,
            b.POSITION_NAME,
            a.EMP_NAME,
            date_format(a.reg_date, '%Y-%m-%d') AS REG_DATE,
            a.REG_DATE as 'REG_DATE2',
            a.admin_approval,
            a.returnyn,
            'dj_emp_proposal_info' AS 'type',
            '제안제도' AS 'typeName',
            'PROPOSAL_ID' AS 'key'
            FROM
            cam_hr.dj_emp_proposal_info AS a
            LEFT join
            cam_hr.dj_emp_info AS b
            on
            a.emp_seq = b.emp_seq) AS A
        WHERE
            1=1
        AND
            A.EMP_SEQ = #{empSeq}

        <if test='drop1 != null and !"".equals(drop1)'>
            and
            <choose>
                <when test='"1".equals(drop1)'>
                    A.typeName = '학력사항'
                </when>
                <when test='"2".equals(drop1)'>
                    A.typeName = '경력사항'
                </when>
                <when test='"3".equals(drop1)'>
                    A.typeName = '병력사항'
                </when>
                <when test='"4".equals(drop1)'>
                    A.typeName = '가족사항'
                </when>
                <when test='"5".equals(drop1)'>
                    A.typeName = '보유면허'
                </when>
                <!--<when test='"6".equals(drop1)'>
                    A.typeName = '발령사항'
                </when>-->
                <when test='"7".equals(drop1)'>
                    A.typeName = '상벌사항'
                </when>
                <when test='"8".equals(drop1)'>
                    A.typeName = '직무사항'
                </when>
                <when test='"9".equals(drop1)'>
                    A.typeName = '제안제도'
                </when>
            </choose>
        </if>
        <if test='status != null and !"".equals(status)'>
            and
            <choose>
                <when test='"1".equals(status)'>
                    A.admin_approval ='N'
                    and
                    A.returnyn ='N'
                </when>
                <when test='"2".equals(status)'>
                    A.admin_approval ='N'
                    and
                    A.returnyn ='Y'
                </when>
                <when test='"3".equals(status)'>
                    A.admin_approval ='Y'
                    and
                    A.returnyn ='N'
                </when>
            </choose>
        </if>
        <if test='startDate != null and !"".equals(startDate)'>
            <![CDATA[
		AND
		DATE_FORMAT(#{startDate}, '%Y%m%d') <= DATE_FORMAT(A.REG_DATE, '%Y%m%d')
		AND
		DATE_FORMAT(#{endDate}, '%Y%m%d') >= DATE_FORMAT(A.REG_DATE, '%Y%m%d')
		]]>
        </if>

        ORDER BY a.reg_date2 DESC
    </select>

    <update id="setUpdateUserInfoModY" parameterType="map">
        UPDATE cam_hr.${TYPE}_tmp
        SET
            ADMIN_APPROVAL = 'Y',
            ADMIN_APPROVAL_DATE = NOW()
        WHERE
            EMP_SEQ = #{EMP_SEQ}
            and
            ${KEY} = #{ID}
    </update>
    <update id="setUpdateUserInfoModN" parameterType="map">
        UPDATE cam_hr.${TYPE}_tmp
        SET
            ADMIN_APPROVAL = 'N',
            ADMIN_APPROVAL_DATE = NOW()
        WHERE
            EMP_SEQ = #{EMP_SEQ}
          and
            ${KEY} = #{ID}
    </update>
        <update id="setUpdateUserInfoReturnY" parameterType="map">
        UPDATE cam_hr.${TYPE}_tmp
        SET
            RETURNYN = 'Y',
            RETURNYN_DATE = NOW()
        WHERE
            EMP_SEQ = #{EMP_SEQ}
            and
            ${KEY} = #{ID}
    </update>
    <update id="setUpdateUserInfoReturnN" parameterType="map">
        UPDATE cam_hr.${TYPE}_tmp
        SET
            RETURNYN = 'N',
            RETURNYN_DATE = NOW()
        WHERE
            EMP_SEQ = #{EMP_SEQ}
          and
            ${KEY} = #{ID}
    </update>

    <update id="setCommissionerPassWdUpd" parameterType="map">
        /* setCommissionerPassWdUpd */
        UPDATE
            CAM_HR.DJ_EMP_INFO
        SET
            LOGIN_PASSWD = #{loginPassWd},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            EMP_SEQ in (${evalEmpSeq})
    </update>

    <select id="getUserPersonnelinformList" parameterType="map" resultType="map">
        /* getUserPersonnelinformList */
        SELECT
            <![CDATA[
            (CASE WHEN CAST(SUBSTRING_INDEX(a.BEFOR_CAREER/12, '.', 1) AS UNSIGNED) >= 1
                  THEN CAST(SUBSTRING_INDEX(a.BEFOR_CAREER/12, '.', 1) AS UNSIGNED) ELSE 0
            END) AS prev_hire,
            (CASE WHEN CAST(SUBSTRING_INDEX(a.BEFOR_CAREER/12, '.', 1) AS UNSIGNED) >= 1
                  THEN CONCAT(CAST(a.BEFOR_CAREER AS UNSIGNED) - (CAST(SUBSTRING_INDEX(a.BEFOR_CAREER/12, '.', 1) AS UNSIGNED) * 12))
                  ELSE a.BEFOR_CAREER
            END) AS prev_hire_mon,
            ]]>
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, a.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire,
            CONCAT(SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, a.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1) AS hire_mon,
            a.EMP_SEQ,
            a.ERP_EMP_SEQ,
            a.LOGIN_ID,
            a.LOGIN_PASSWD,
            a.EMP_NAME_KR,
            a.EMP_NAME_EN,
            a.EMP_NAME_CN,
            a.ATT_CARD_NUM,
            a.DEPT_SEQ,
            a.DEPT_NAME,
            a.DEPT_TEAM_NAME,
            (select dept_name from cam_hr.dj_dept_info where dept_seq = (select parent_dept_seq from cam_hr.dj_dept_info where dept_seq= a.DEPT_SEQ)) PARENT_DEPT_NAME,
            (select parent_dept_seq from cam_hr.dj_dept_info where dept_seq= a.DEPT_SEQ) AS DEPT_PARENT_SEQ,
            a.POSITION_CODE,
            a.POSITION_NAME,
            a.DUTY_CODE,
            /*a.DUTY_NAME,*/
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = '3' AND CM_CODE = a.DUTY_CODE AND ACTIVE = 'Y') AS DUTY_NAME,
            a.GRADE_CODE,
            a.GRADE_NAME,
            a.POSITION_OR_DUTY,
            a.OCCUPATION_CODE,
            a.EMPLOY_GUBUN,
            a.JOIN_DAY,
            a.APPOINT_DAY,
            a.APPOINT_GUBUN,
            a.APPOINT_GUBUN_DETAIL,
            a.CTR_ST_DAY,
            a.CTR_EN_DAY,
            a.WEEK_WORK_TIME_TYPE,
            a.WEEK_WORK_TIME,
            a.BF_APPOINT_DAY,
            a.LOCAL_TALENT,
            a.WORK_FIELD_NAME,
            a.ZIP_CODE,
            a.ADDR,
            a.OLD_ADDR,
            a.ADDR_DETAIL,
            a.ADDR_REFERENCES,
            a.LEGAL_DOMICILE,
            a.HOME_TEL_NUM,
            a.MOBILE_TEL_NUM,
            a.OFFICE_TEL_NUM,
            a.EMAIL_ADDR,
            a.BDAY,
            a.GENDER_CODE,
            a.WEDDING_ACTIVE,
            a.IMPAIR_LEVEL_CODE,
            a.DEGREE_CODE,
            a.JOB_DETAIL,
            a.SPEC_CODE,
            a.DIV_FACTION,
            a.WORK_STATUS_CODE,
            a.RESIGN_DAY,
            a.PHOTO_FILE_ID,
            a.DEPT_MG_YN,
            a.ADMIN_APPROVE_YN,
            a.SECRET_YN,
            a.SEC_AUTHORIZE_DATE,
            a.SEC_RELEASE_DATE,
            a.ACTIVE,
            a.REG_EMP_SEQ,
            a.REG_DATE,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = a.MOD_EMP_SEQ GROUP BY EMP_SEQ) AS MOD_EMP_NAME,
            DATE_FORMAT(a.MOD_DATE, '%Y-%m-%d %H:%i:%s') AS MOD_DATE,
            a.RES_REGIS_NUM,
            a.CHECK_PASSWD,
            a.CAPS_NUM,
            a.HOME_PAGE_ACTIVE,
            a.BEFOR_CAREER,
            a.BS_ELAPSED_YEAR,
            a.ELAPSED_YEAR,
            a.ACCOUNT_HOLDER,
            a.BANK_NAME,
            a.ACCOUNT_NUM,
            a.CAR_ACTIVE,
            a.CAR_NUM,
            a.EMG_TEL_NUM,
            a.BLOOD_TYPE,
            a.WEDDING_DAY,
            a.HOBBY,
            a.SPECIALITY,
            a.RELIGION,
            a.HEIGHT,
            a.WEIGHT,
            a.VISIONL,
            a.VISIONR,
            a.DIVISION,
            a.DIVISION_SUB,
            a.DUZON_CODE,
            a.LUNAR_CAL,
            a.CTR_ST_DAY,
            a.CTR_EN_DAY,
            a.WEEK_WORK_TIME,
            a.NICK_NAME,
            a.CONTRACT,
            a.SCHOOL,
            a.DEGREE,
            a.DEPARTMENT,
            a.GRADE,
            a.STUDENT_ID,
            a.QUALIFICATION,
            a.LAST_DEGREE,
            a.CAREER,
            a.MILITARY,
            a.SIGNIFICANT,
            a.TEMP_DIVISION,
            a.MY_COMENT
        FROM
            cam_hr.dj_emp_info AS a
        WHERE
            a.EMP_SEQ = #{empSeq};
    </select>

    <update id="setUserResignReg" parameterType="map">
        /* setUserResignReg */
        UPDATE
            CAM_HR.DJ_EMP_INFO
        SET
            WORK_STATUS_CODE = 'N',
            DIVISION = '9999',
            RESIGN_DAY = #{resignDay},
            RESIGN_REASON = #{resignReason},
            MOD_DATE = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EMP_SEQ = #{empSeq}
    </update>

    <update id="setUserDel" parameterType="map">
        /* setUserDel */
        UPDATE
            CAM_HR.DJ_EMP_INFO
        SET
            ACTIVE = 'N',
            MOD_DATE = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EMP_SEQ = #{empSeq}
    </update>

    <update id="setUserInfoReqUpd" parameterType="map">
        /* setUserInfoReqUpd */
        UPDATE
        CAM_COMMON.DJ_FILE_INFO
        SET
        <if test='photoFileId != null and !"".equals(photoFileId)'>
            PHOTO_FILE_ID = #{photoFileId}
        </if>
        WHERE
        EMP_SEQ = #{empSeq}
    </update>

    <select id="getUserInfoModDetail" resultType="map" parameterType="map">
        select
            a.*
        from
            CAM_HR.${type} as a
        where
            a.${key} = #{id}
    </select>

    <select id="getKeyInfo" resultType="map" parameterType="map">
        /* getKeyInfo */
        select
            a.*
        from
            CAM_HR.${type} as a
        where
            a.${key} = #{id}
    </select>

<!--홈페이지 게시 포함
    <update id="setUserReqDetailUpdate" parameterType="map">
            /*setUserReqDetailUpdate*/
            UPDATE CAM_HR.DJ_EMP_INFO
            SET EMP_NAME_KR = #{EMP_NAME_KR},
            <if test="PASSCHANGE != null and PASSCHANGE != ''">
                LOGIN_PASSWD = #{LOGIN_PASSWD},
            </if>
            <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            WEDDING_DAY = #{WEDDING_DAY},
            </if>
            <if test="GRADE_NAME != null and GRADE_NAME != ''">
                GRADE_NAME = #{GRADE_NAME},
            </if>
            <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
                DEGREE_CODE = #{DEGREE_CODE},
            </if>
            RES_REGIS_NUM = #{RES_REGIS_NUM},
            CAPS_NUM = #{CAPS_NUM},
            DUTY_CODE = #{DUTY_CODE},
            DUTY_NAME = #{DUTY_NAME},
            POSITION_CODE = #{POSITION_CODE},
            POSITION_NAME = #{POSITION_NAME},
            DEPT_NAME = #{DEPT_NAME},
            DEPT_SEQ = #{DEPT_SEQ},
            DEPT_TEAM_NAME = #{DEPT_TEAM_NAME},
            JOB_DETAIL = #{JOB_DETAIL},
            BEFOR_CAREER = #{BEFOR_CAREER},
            ACCOUNT_HOLDER = #{ACCOUNT_HOLDER},
            BANK_NAME = #{BANK_NAME},
            ACCOUNT_NUM = #{ACCOUNT_NUM},
            ZIP_CODE = #{ZIP_CODE},
            ADDR = #{ADDR},
            ADDR_DETAIL = #{ADDR_DETAIL},
            OFFICE_TEL_NUM = #{OFFICE_TEL_NUM},
            MOBILE_TEL_NUM = #{MOBILE_TEL_NUM},
            EMAIL_ADDR = #{EMAIL_ADDR},
            CAR_NUM = #{CAR_NUM},
            EMP_NAME_CN = #{EMP_NAME_CN},
            EMP_NAME_EN = #{EMP_NAME_EN},
            EMG_TEL_NUM = #{EMG_TEL_NUM},
            LEGAL_DOMICILE = #{LEGAL_DOMICILE},
            HOBBY = #{HOBBY},
            RELIGION = #{RELIGION},
            SPECIALITY = #{SPECIALITY},
            WEIGHT = #{WEIGHT},
            HEIGHT = #{HEIGHT},
            VISIONL = #{VISIONL},
            VISIONR = #{VISIONR},
            HOME_PAGE_ACTIVE = #{HOME_PAGE_ACTIVE},
            WEDDING_ACTIVE = #{WEDDING_ACTIVE},
            BLOOD_TYPE = #{BLOOD_TYPE},
            DIVISION = #{division},
            DIVISION_SUB = #{divisionSub},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DATE = NOW(),
            CAR_ACTIVE = #{CAR_ACTIVE},
            JOIN_DAY = #{JOIN_DAY},
            OCCUPATION_CODE = #{OCCUPATION_CODE},
            LUNAR_CAL = #{LUNAR_CAL},
            CTR_ST_DAY = #{CTR_ST_DAY},
            CTR_EN_DAY = #{CTR_EN_DAY},
            WEEK_WORK_TIME = #{WEEK_WORK_TIME},
            NICK_NAME = #{NICK_NAME},
            CONTRACT = #{CONTRACT},
            SCHOOL = #{SCHOOL},
            DEGREE = #{DEGREE},
            DEPARTMENT = #{DEPARTMENT},
            GRADE = #{GRADE},
            STUDENT_ID = #{STUDENT_ID},
            QUALIFICATION = #{QUALIFICATION},
            LAST_DEGREE = #{LAST_DEGREE},
            CAREER = #{CAREER},
            MILITARY = #{MILITARY},
            SIGNIFICANT = #{SIGNIFICANT},
            BDAY = #{BDAY},
            TEMP_DIVISION = #{TEMP_DIVISION}
        WHERE EMP_SEQ = #{TARGET_EMP_SEQ}
    </update>-->

    <update id="setUserReqDetailUpdate" parameterType="map">
        /*setUserReqDetailUpdate*/
        UPDATE CAM_HR.DJ_EMP_INFO
        SET EMP_NAME_KR = #{EMP_NAME_KR},
        <if test="password != null and !''.equals(password)">
            LOGIN_PASSWD = #{password},
        </if>
        <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            WEDDING_DAY = #{WEDDING_DAY},
        </if>
        <if test="GRADE_NAME != null and GRADE_NAME != ''">
            GRADE_NAME = #{GRADE_NAME},
        </if>
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            DEGREE_CODE = #{DEGREE_CODE},
        </if>
        RES_REGIS_NUM = #{RES_REGIS_NUM},
        CAPS_NUM = #{CAPS_NUM},
        DUTY_CODE = #{DUTY_CODE},
        DUTY_NAME = #{DUTY_NAME},
        POSITION_CODE = #{POSITION_CODE},
        POSITION_NAME = #{POSITION_NAME},
        DEPT_NAME = #{DEPT_NAME},
        DEPT_SEQ = #{DEPT_SEQ},
        DEPT_TEAM_NAME = #{DEPT_TEAM_NAME},
        JOB_DETAIL = #{JOB_DETAIL},
        BEFOR_CAREER = #{BEFOR_CAREER},
        ACCOUNT_HOLDER = #{ACCOUNT_HOLDER},
        BANK_NAME = #{BANK_NAME},
        ACCOUNT_NUM = #{ACCOUNT_NUM},
        ZIP_CODE = #{ZIP_CODE},
        ADDR = #{ADDR},
        ADDR_DETAIL = #{ADDR_DETAIL},
        OFFICE_TEL_NUM = #{OFFICE_TEL_NUM},
        MOBILE_TEL_NUM = #{MOBILE_TEL_NUM},
        HOME_TEL_NUM = #{HOME_TEL_NUM},
        EMAIL_ADDR = #{EMAIL_ADDR},
        CAR_NUM = #{CAR_NUM},
        EMP_NAME_CN = #{EMP_NAME_CN},
        EMP_NAME_EN = #{EMP_NAME_EN},
        EMG_TEL_NUM = #{EMG_TEL_NUM},
        LEGAL_DOMICILE = #{LEGAL_DOMICILE},
        HOBBY = #{HOBBY},
        RELIGION = #{RELIGION},
        SPECIALITY = #{SPECIALITY},
        WEIGHT = #{WEIGHT},
        HEIGHT = #{HEIGHT},
        VISIONL = #{VISIONL},
        VISIONR = #{VISIONR},
        WEDDING_ACTIVE = #{WEDDING_ACTIVE},
        BLOOD_TYPE = #{BLOOD_TYPE},
        DIVISION = #{division},
        DIVISION_SUB = #{divisionSub},
        MOD_EMP_SEQ = #{regEmpSeq},
        MOD_DATE = NOW(),
        CAR_ACTIVE = #{CAR_ACTIVE},
        JOIN_DAY = #{JOIN_DAY},
        OCCUPATION_CODE = #{OCCUPATION_CODE},
        LUNAR_CAL = #{LUNAR_CAL},
--         CTR_ST_DAY = NULL,
--         CTR_EN_DAY = NULL,
        WEEK_WORK_TIME = #{WEEK_WORK_TIME},
        NICK_NAME = #{NICK_NAME},
        CONTRACT = #{CONTRACT},
        SCHOOL = #{SCHOOL},
        DEGREE = #{DEGREE},
        DEPARTMENT = #{DEPARTMENT},
        GRADE = #{GRADE},
        STUDENT_ID = #{STUDENT_ID},
        QUALIFICATION = #{QUALIFICATION},
        LAST_DEGREE = #{LAST_DEGREE},
        CAREER = #{CAREER},
        MILITARY = #{MILITARY},
        SIGNIFICANT = #{SIGNIFICANT},
        BDAY = #{BDAY},
        TEMP_DIVISION = #{TEMP_DIVISION},
        MY_COMENT = #{MY_COMENT}
        WHERE EMP_SEQ = #{TARGET_EMP_SEQ}
    </update>

    <select id="getUserImageInfo" resultType="map" parameterType="map">
        /* getUserImageInfo */
        SELECT
            IM.IMAGE_ID,
            IM.EMP_SEQ,
            IM.SIGN_IMAGE_PK,
            IM.SIGN2_IMAGE_PK,
            IM.ID_IMAGE_PK,
            IM.PERSONAL_IMAGE_PK
        FROM
            CAM_INSIDE.DJ_IMAGE_MANAGE IM
        WHERE
            IM.EMP_SEQ = #{empSeq}
    </select>

    <insert id="setUserImageReq" parameterType="map">
        /* setUserImageReq */
        INSERT INTO CAM_INSIDE.DJ_IMAGE_MANAGE(
            EMP_SEQ,
        <if test='signImg != 0'>
            SIGN_IMAGE_PK,
        </if>
        <if test='idImg != 0'>
            ID_IMAGE_PK,
        </if>
        <if test='sign2Img != 0'>
            SIGN2_IMAGE_PK,
        </if>
            REG_EMP_SEQ,
            REG_DATE
        ) VALUES (
            #{empSeq},
        <if test='signImg != 0'>
            #{signImg},
        </if>
        <if test='idImg != 0'>
            #{idImg},
        </if>
        <if test='sign2Img != 0'>
            #{sign2Img},
        </if>
            #{loginEmpSeq},
            NOW()
        )
    </insert>

    <update id="setUserImageUpd" parameterType="map">
        /* setUserImageUpd */
        UPDATE
            CAM_INSIDE.DJ_IMAGE_MANAGE
        SET
            <if test='signImg != 0'>
                SIGN_IMAGE_PK = #{signImg},
            </if>
            <if test='idImg != 0'>
                ID_IMAGE_PK = #{idImg},
            </if>
            <if test='sign2Img != 0'>
                SIGN2_IMAGE_PK = #{sign2Img},
            </if>
            MOD_EMP_SEQ = #{loginEmpSeq},
            MOD_DATE = NOW()
        WHERE
            EMP_SEQ = #{empSeq}
    </update>

    <update id="setBasicInfo" parameterType="map">
        /* setBasicInfo */
        UPDATE
            CAM_HR.DJ_EMP_INFO
        SET
            EMP_NAME_CN = #{empNameCn},
            BDAY = #{bDay},
            ZIP_CODE = #{zipCode},
            ADDR = #{addr},
            OLD_ADDR = #{oldAddr},
            ADDR_DETAIL = #{addrDetail},
            OFFICE_TEL_NUM = #{officeTelNum},
            EMG_TEL_NUM = #{emgTelNum},
            CAR_ACTIVE = #{carActive},
            CAR_NUM = #{carNum},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DATE = NOW()
        WHERE
            EMP_SEQ = #{empSeq}
    </update>

    <!--인사기록카드 - 삭제할 학력사항 선택-->
    <select id="getEduDeleteList" parameterType="java.util.List" resultType="map">
        /* getEduDeleteList */
         SELECT
            *
        FROM
            CAM_HR.DJ_EMP_EDUCATIONAL
        WHERE
        EDUCATIONAL_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <!-- 인사기록카드 - 학력사항 삭제 요청 데이터 카피-->
    <insert id="setEduDeleteTmp" parameterType="map">
        /*setEduDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_EDUCATIONAL_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,ADMISSION_DAY
        ,GRADUATION_DAY
        ,DEGREE_CODE
        ,REG_EMP_SEQ
        ,REG_DATE
        ,SCHOOL_NAME
        ,RMK
        ,ACTIVE
        ,GUBUN_CODE
        ,GRADUATION_CODE
        ,SCORE
        ,ADMIN_APPROVAL
        ,APPLICATION_ACTIVE
        ,EDUCATIONAL_PK
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{ADMISSION_DAY}
        ,#{GRADUATION_DAY}
        ,#{DEGREE_CODE}
        ,#{EMP_SEQ}
        ,NOW()
        ,#{SCHOOL_NAME}
        ,#{RMK}
        ,'N'
        ,#{GUBUN_CODE}
        ,#{GRADUATION_CODE}
        ,#{SCORE}
        ,'N'
        ,'삭제'
        ,#{EDUCATIONAL_ID}
        )
        <selectKey keyProperty="educationalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_EDUCATIONAL'
        </selectKey>
    </insert>

    <!--인사기록카드 - 학력사항 삭제-->
    <update id="setEduDelete" parameterType="java.util.List">
        /* setEduDelete */
        UPDATE
        CAM_HR.DJ_EMP_EDUCATIONAL
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        EDUCATIONAL_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--인사기록카드 - 삭제할 경력사항 선택-->
    <select id="getCareerDeleteList" parameterType="java.util.List" resultType="map">
        /* getCareerDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_CAREER
        WHERE
        CAREER_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <!-- 인사기록카드 - 학력사항 삭제 요청 데이터 카피-->
    <insert id="setCareerDeleteTmp" parameterType="map">
        /*setCareerDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_CAREER_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,JOIN_DAY
        ,RESIGN_DAY
        ,CAREER_PERIOD
        ,CAREER_MONTH
        ,EMPLOY_DEPT_NAME
        ,POSITION_OR_DUTY
        ,MAIN_TASK
        ,RMK
        ,ADMIN_APPROVAL
        ,RETURNYN
        ,APPROVAL_REQUEST_REASON
        ,ACTIVE
        ,REG_EMP_SEQ
        ,REG_DATE
        ,APPLICATION_ACTIVE
        ,ADD_NO
        ,CAREER_PK
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{JOIN_DAY}
        ,#{RESIGN_DAY}
        ,#{CAREER_PERIOD}
        ,#{CAREER_MONTH}
        ,#{EMPLOY_DEPT_NAME}
        ,#{POSITION_OR_DUTY}
        ,#{MAIN_TASK}
        ,#{RMK}
        ,'N'
        ,#{RETURNYN}
        ,#{APPROVAL_REQUEST_REASON}
        ,'N'
        ,#{EMP_SEQ}
        ,NOW()
        ,'삭제'
        ,#{ADD_NO}
        ,#{CAREER_ID}
        )
        <selectKey keyProperty="careerId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CAREER'
        </selectKey>
    </insert>

    <!--인사기록카드 - 삭제할 가족사항 선택 -->
    <select id="getFamilyDeleteList" parameterType="java.util.List" resultType="map">
        /* getFamilyDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_FAMILY_INFO
        WHERE
        FAMILY_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>


    <!--인사기록카드 - 가족사항 삭제 요청 데이터 카피-->
    <insert id="setFamilyDeleteTmp" parameterType="map">
        /*setFamilyDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_FAMILY_INFO_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,ADMIN_APPROVAL
        ,RETURNYN
        ,ACTIVE
        ,REG_EMP_SEQ
        ,REG_DATE
        ,FAMILY_CODE
        ,FAMILY_NAME
        ,FAMILY_BIRTH
        ,FAMILY_JOB
        ,INCLUDE_YN
        ,APPLICATION_ACTIVE
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,'N'
        ,#{RETURNYN}
        ,'N'
        ,#{EMP_SEQ}
        ,NOW()
        ,#{FAMILY_CODE}
        ,#{FAMILY_NAME}
        ,#{FAMILY_BIRTH}
        ,#{FAMILY_JOB}
        ,#{INCLUDE_YN}
        ,'삭제'
        )
        <selectKey keyProperty="familyId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_FAMILY_INFO'
        </selectKey>
    </insert>


    <!--인사기록카드 - 가족사항 삭제    -->
    <update id="setFamilyDelete" parameterType="java.util.List">
        /* setFamilyDelete */
        UPDATE
        CAM_HR.DJ_EMP_FAMILY_INFO
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        FAMILY_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>



    <!--인사기록카드 - 삭제할 보유면허 선택-->
    <select id="getLicenseDeleteList" parameterType="java.util.List" resultType="map">
        /* getLicenseDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_CERTIFICATE
        WHERE
        CERTIFICATE_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>


    <!--인사기록카드 - 보유면허 삭제 요청 데이터 카피-->
    <insert id="setLicenseDeleteTmp" parameterType="map">
        /*setLicenseDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_CERTIFICATE_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,CERTIFICATE_NAME
        ,CERTIFICATE_NUM
        ,ACQUISITION_DAY
        ,ISSUER
        ,RMK
        ,ACTIVE
        ,ADMIN_APPROVAL
        ,RETURNYN
        ,REG_EMP_SEQ
        ,REG_DATE
        ,CERTIFICATE_ADD_NO
        ,APPLICATION_ACTIVE
        ,CERTIFICATE_PK
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{CERTIFICATE_NAME}
        ,#{CERTIFICATE_NUM}
        ,#{ACQUISITION_DAY}
        ,#{ISSUER}
        ,#{RMK}
        ,'N'
        ,'N'
        ,#{RETURNYN}
        ,#{EMP_SEQ}
        ,NOW()
        ,#{CERTIFICATE_ADD_NO}
        ,'삭제'
        ,#{CERTIFICATE_ID}
        )
        <selectKey keyProperty="certificateId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CERTIFICATE'
        </selectKey>
    </insert>


    <!--인사기록카드 - 보유면허 삭제-->
    <update id="setLicenseDelete" parameterType="java.util.List">
        /* setLicenseDelete */
        UPDATE
        CAM_HR.DJ_EMP_CERTIFICATE
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        CERTIFICATE_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>



    <!--인사기록카드 - 삭제할 직무사항 선택-->
    <select id="getJobDeleteList" parameterType="java.util.List" resultType="map">
        /* getJobDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_DUTY_INFO
        WHERE
        DUTY_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>


    <!--인사기록카드 - 직무사항 삭제 요청 데이터 카피-->
    <insert id="setJobDeleteTmp" parameterType="map">
        /*setJobDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_DUTY_INFO_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,POSITON_NAME
        ,WORK_PAY
        ,DUTY_DETAIL
        ,WORK_JOIN_DAY
        ,WORK_LEAVE_DAY
        ,RMK
        ,ADMIN_APPROVAL
        ,RETURNYN
        ,ACTIVE
        ,REG_EMP_SEQ
        ,REG_DATE
        ,APPLICATION_ACTIVE
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{POSITON_NAME}
        ,#{WORK_PAY}
        ,#{DUTY_DETAIL}
        ,#{WORK_JOIN_DAY}
        ,#{WORK_LEAVE_DAY}
        ,#{RMK}
        ,'N'
        ,#{RETURNYN}
        ,'N'
        ,#{EMP_SEQ}
        ,NOW()
        ,'삭제'
        )
        <selectKey keyProperty="jobId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_DUTY_INFO'
        </selectKey>
    </insert>



    <!--인사기록카드 - 직무사항 삭제-->
    <update id="setJobDelete" parameterType="java.util.List">
        /* setJobDelete */
        UPDATE
        CAM_HR.DJ_EMP_DUTY_INFO
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        DUTY_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>


    <!--인사기록카드 - 삭제할 상벌사항 선택-->
    <select id="getRewordDeleteList" parameterType="java.util.List" resultType="map">
        /* getRewordDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_REWORD
        WHERE
        REWORD_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>


    <!--인사기록카드 - 상벌사항 삭제 요청 데이터 카피-->
    <insert id="setRewordDeleteTmp" parameterType="map">
        /*setRewordDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_REWORD_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,ERP_EMP_SEQ
        ,DEPT_SEQ
        ,TEAM_SEQ
        ,TEAM_NAME
        ,REWORD_TYPE
        ,REWORD_TYPE_NAME
        ,RWD_SN
        ,REWORD_DAY
        ,REWORD_NAME
        ,RWD_OFM
        ,RWD_ST_COMP
        ,RETURNYN
        ,RWD_ETC
        ,REWORD_AGENCY_NAME
        ,REWORD_REASON
        ,ACTIVE
        ,ADMIN_APPROVAL
        ,REG_EMP_SEQ
        ,REG_DATE
        ,REWARD_ADD_NO
        ,APPLICATION_ACTIVE
        ,REWORD_PK
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{ERP_EMP_SEQ}
        ,#{DEPT_SEQ}
        ,#{TEAM_SEQ}
        ,#{TEAM_NAME}
        ,#{REWORD_TYPE}
        ,#{REWORD_TYPE_NAME}
        ,#{RWD_SN}
        ,#{REWORD_DAY}
        ,#{REWORD_NAME}
        ,#{RWD_OFM}
        ,#{RWD_ST_COMP}
        ,#{RETURNYN}
        ,#{RWD_ETC}
        ,#{REWORD_AGENCY_NAME}
        ,#{REWORD_REASON}
        ,'N'
        ,'N'
        ,#{EMP_SEQ}
        ,NOW()
        ,#{REWARD_ADD_NO}
        ,'삭제'
        ,#{REWORD_ID}
        )
        <selectKey keyProperty="rewordId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_REWORD'
        </selectKey>
    </insert>


    <!--인사기록카드 - 상벌사항 삭제-->
    <update id="setRewordDelete" parameterType="java.util.List">
        /* setRewordDelete */
        UPDATE
        CAM_HR.DJ_EMP_REWORD
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        REWORD_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>



    <!--인사기록카드 - 삭제할 제안제도 선택-->
    <select id="getProposalDeleteList" parameterType="java.util.List" resultType="map">
        /* getProposalDeleteList */
        SELECT
        *
        FROM
        CAM_HR.DJ_EMP_PROPOSAL_INFO
        WHERE
        PROPOSAL_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>


    <!--인사기록카드 - 제안제도 삭제 요청 데이터 카피-->
    <insert id="setProposalDeleteTmp" parameterType="map">
        /*setProposalDeleteTmp*/
        INSERT INTO CAM_HR.DJ_EMP_PROPOSAL_INFO_TMP(
        EMP_SEQ
        ,EMP_NAME
        ,PROPOSAL_GUBUN
        ,PROPOSAL_DETAIL
        ,PROPOSAL_CHECK_CHOICE
        ,PROPOSAL_DATE
        ,RETURNYN
        ,ACTIVE
        ,ADMIN_APPROVAL
        ,REG_EMP_SEQ
        ,REG_DATE
        ,APPLICATION_ACTIVE
        ,PROPOSAL_PK
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{PROPOSAL_GUBUN}
        ,#{PROPOSAL_DETAIL}
        ,#{PROPOSAL_CHECK_CHOICE}
        ,#{PROPOSAL_DATE}
        ,#{RETURNYN}
        ,'N'
        ,'N'
        ,#{EMP_SEQ}
        ,NOW()
        ,'삭제'
        ,#{PROPOSAL_ID}
        )
        <selectKey keyProperty="proposalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_PROPOSAL_INFO'
        </selectKey>
    </insert>



    <!--인사기록카드 - 제안제도 삭제-->
    <update id="setProposalDelete" parameterType="java.util.List">
        /* setProposalDelete */
        UPDATE
        CAM_HR.DJ_EMP_PROPOSAL_INFO
        SET
        APPLICATION_ACTIVE = 'D', MOD_DATE = NOW()
        WHERE
        PROPOSAL_ID IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>


    <select id="getRewinfoList" parameterType="map" resultType="map">
        /* getRewinfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_REWORD
        WHERE
            REWORD_ID = #{pk}
    </select>

    <select id="getProinfoList" parameterType="map" resultType="map">
        /* getProinfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_PROPOSAL_INFO
        WHERE
            PROPOSAL_ID = #{pk}
    </select>

    <select id="getEduinfoList" parameterType="map" resultType="map">
        /* getEduinfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_EDUCATIONAL
        WHERE
            EDUCATIONAL_ID = #{pk}
    </select>

    <select id="getCarinfoList" parameterType="map" resultType="map">
        /* getCarinfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_CAREER
        WHERE
            CAREER_ID = #{pk}
    </select>

    <select id="getFaminfoList" parameterType="map" resultType="map">
        /* getFaminfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_FAMILY_INFO
        WHERE
            FAMILY_ID = #{pk}
    </select>

    <select id="getLininfoList" parameterType="map" resultType="map">
        /* getLininfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_CERTIFICATE
        WHERE
            CERTIFICATE_ID = #{pk}
    </select>

    <select id="getJobinfoList" parameterType="map" resultType="map">
        /* getJobinfoList */
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_DUTY_INFO
        WHERE
            DUTY_ID = #{pk}
    </select>

    <update id="setInGradeFileNoUpd" parameterType="map">
        /* setInGradeFileNoUpd */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL_TMP
        SET
            GRADE_NO = #{gradeFileNo}
        WHERE
            EDUCATIONAL_ID = #{educationalId}
    </update>

    <update id="setInGradeFileNoUpdAdmin" parameterType="map">
        /* setInGradeFileNoUpdAdmin */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL
        SET
            GRADE_NO = #{gradeFileNo}
        WHERE
            EDUCATIONAL_ID = #{educationalId}
    </update>

    <update id="setInScoreFileNoUpd" parameterType="map">
        /* setInScoreFileNoUpd */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL_TMP
        SET
            SCORE_NO = #{socreFileNo}
        WHERE
            EDUCATIONAL_ID = #{educationalId}
    </update>

    <update id="setInScoreFileNoUpdAdmin" parameterType="map">
        /* setInScoreFileNoUpdAdmin */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL
        SET
            SCORE_NO = #{socreFileNo}
        WHERE
            EDUCATIONAL_ID = #{educationalId}
    </update>

    <update id="setInAddFileNoUpd" parameterType="map">
        /* setInAddFileNoUpd */
        UPDATE
            CAM_HR.DJ_EMP_CAREER_TMP
        SET
            ADD_NO = #{addFileNo}
        WHERE
            CAREER_ID = #{careerId}
    </update>

    <update id="setInAddFileNoUpdAdmin" parameterType="map">
        /* setInAddFileNoUpdAdmin */
        UPDATE
            CAM_HR.DJ_EMP_CAREER
        SET
            ADD_NO = #{addFileNo}
        WHERE
            CAREER_ID = #{careerId}
    </update>

    <update id="setInCertificateFileNoUpd" parameterType="map">
        /* setInCertificateFileNoUpd */
        UPDATE
            CAM_HR.DJ_EMP_CERTIFICATE_TMP
        SET
            CERTIFICATE_ADD_NO = #{certificateFileNo}
        WHERE
            CERTIFICATE_ID = #{certificateId}
    </update>

    <update id="setInCertificateFileNoUpdAdmin" parameterType="map">
        /* setInCertificateFileNoUpdAdmin */
        UPDATE
            CAM_HR.DJ_EMP_CERTIFICATE
        SET
            CERTIFICATE_ADD_NO = #{certificateFileNo}
        WHERE
            CERTIFICATE_ID = #{certificateId}
    </update>

    <update id="setInRewardAddFileNoUpd" parameterType="map">
        /* setInRewardAddFileNoUpd */
        UPDATE
            CAM_HR.DJ_EMP_REWORD_TMP
        SET
            REWARD_ADD_NO = #{rewardAddFileNo}
        WHERE
            REWORD_ID = #{rewordId}
    </update>

    <update id="setInRewardAddFileNoUpdAdmin" parameterType="map">
        /* setInRewardAddFileNoUpdAdmin */
        UPDATE
            CAM_HR.DJ_EMP_REWORD
        SET
            REWARD_ADD_NO = #{rewardAddFileNo}
        WHERE
            REWORD_ID = #{rewordId}
    </update>

    <select id="getEmpBirthDayInfoList" parameterType="map" resultType="map">
        /*getEmpBirthDayInfoList*/
        <![CDATA[
        SELECT
            CASE
                WHEN DATE_FORMAT(NOW(), '%m') < DATE_FORMAT(HEI.BDAY, '%m') THEN DATE_FORMAT(HEI.BDAY, '%m/%d')
                WHEN DATE_FORMAT(NOW(), '%m') = DATE_FORMAT(HEI.BDAY, '%m') AND DATE_FORMAT(NOW(), '%d') <= DATE_FORMAT(HEI.BDAY, '%d') THEN DATE_FORMAT(HEI.BDAY, '%m/%d')
                WHEN DATE_FORMAT(NOW(), '%m') > DATE_FORMAT(HEI.BDAY, '%m') AND DATE_FORMAT(NOW(), '%Y/%m/%d') < DATE_FORMAT(CONCAT(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL +1 YEAR), '%Y'), DATE_FORMAT(HEI.BDAY, '/%m/%d')), '%Y/%m/%d') THEN DATE_FORMAT(CONCAT(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL +1 YEAR), '%Y'), DATE_FORMAT(HEI.BDAY, '/%m/%d')), '%Y/%m/%d')
                END AS b_day,
            EMP_NAME_KR,
            BDAY,
            CASE
                WHEN HDI.DEPT_LEVEL = 2 THEN HDI.PARENT_DEPT_SEQ
                ELSE HEI.DEPT_SEQ
                END AS DEPT_SEQ,
            CASE
                WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ)
                ELSE HEI.DEPT_NAME
                END AS DEPT_NAME1,
            CASE
                WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ
                ELSE ""
                END AS TEAM_SEQ,
            CASE
                WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME
                ELSE ""
                END AS TEAM_NAME,
            DATE_FORMAT(HEI.BDAY, '%m/%d') AS EMPBDAY,
            IFNULL(CASE
                       WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME
                       ELSE HEI.DUTY_NAME
                       END, "") AS SPOT,
            CASE
                WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
                WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
                ELSE 999
                END AS SORT
        FROM
            CAM_HR.DJ_EMP_INFO AS HEI
                LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
            HEI.BDAY != '' AND HEI.BDAY IS NOT NULL
        AND (
            DATE_FORMAT(NOW(), '%m') < DATE_FORMAT(HEI.BDAY, '%m') OR
            (
                DATE_FORMAT(NOW(), '%m') = DATE_FORMAT(HEI.BDAY, '%m') AND
                DATE_FORMAT(NOW(), '%d') <= DATE_FORMAT(HEI.BDAY, '%d')
            ) OR
            (
                DATE_FORMAT(NOW(), '%m') > DATE_FORMAT(HEI.BDAY, '%m') AND
                DATE_FORMAT(NOW(), '%Y/%m/%d') < DATE_FORMAT(CONCAT(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL +1 YEAR), '%Y'), DATE_FORMAT(HEI.BDAY, '/%m/%d')), '%Y/%m/%d')
            )
        )
        AND HEI.WORK_STATUS_CODE = 'Y'
        AND HEI.ACTIVE = 'Y'
        ORDER BY
            b_day ASC,
            EMP_NAME_KR ASC
        LIMIT 3
        ]]>
    </select>

    <select id="getEmpInfo" parameterType="map" resultType="map">
        /*getEmpInfo*/
        SELECT
            A.*,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AS DEPT_NAME,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ)) AS PARENT_DEPT_NAME,
            CASE WHEN A.DIVISION = '0' THEN '정규직원'
                WHEN A.DIVISION = '4' AND A.DIVISION_SUB = '1' THEN '계약직원'
                WHEN A.DIVISION = '4' AND A.DIVISION_SUB = '2' THEN '인턴사원'
            END AS DIVISION
        FROM
            CAM_HR.DJ_EMP_INFO A
        WHERE
            A.EMP_SEQ = #{empSeq}
    </select>

    <!--인사관리(관리자) -->
    <select id="getCountForDsA" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 0;
    </select>

    <select id="getCountForDsB" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 4 AND DIVISION_SUB = '1';
    </select>

    <select id="getCountForDsC" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 4 AND DIVISION_SUB = '2';
    </select>

    <select id="getCountForDsD" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 4 AND DIVISION_SUB = 3;
    </select>

    <select id="getCountForDsE" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 3;
    </select>

    <select id="getCountForDsF" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 1 AND DIVISION_SUB = 6;
    </select>

    <select id="getCountForDsG" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 2;
    </select>

    <select id="getCountForDsH" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 10;
    </select>

    <select id="getCountForDsI" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND TEMP_DIVISION = "Y";
    </select>

    <select id="getCountForDsJ" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 9999;
    </select>

    <!--인사관리 -->
    <select id="getCountForDsA2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND ((DIVISION IN (0)) OR(DIVISION IN (4) AND DIVISION_SUB IN (1, 2)))
    </select>

    <select id="getCountForDsB2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 3;
    </select>

    <select id="getCountForDsC2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 1 AND DIVISION_SUB = 6;
    </select>

    <select id="getCountForDsD2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 4 AND DIVISION_SUB = 3;
    </select>

    <select id="getCountForDsE2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 10;
    </select>

    <select id="getCountForDsG2" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*) FROM CAM_HR.DJ_EMP_INFO	AS HEI LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ WHERE HEI.ACTIVE = 'Y' AND DIVISION = 2;
    </select>

    <select id="getTotalEmpCount" parameterType="java.util.Map" resultType="map">
        /*getTotalEmpCount*/
        SELECT
            join_year,
            employees_joined,
            employees_resigned,
            active_emp_count
        FROM (
                 SELECT
                     YEAR(JOIN_DAY) AS join_year,
                     COUNT(*) AS employees_joined
                 FROM
                     cam_hr.dj_emp_info
                 WHERE
                     JOIN_DAY IS NOT NULL AND YEAR(JOIN_DAY) BETWEEN 1999 AND 2023
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
                 GROUP BY
                     join_year
             ) AS joined
                 LEFT JOIN (
            SELECT
                YEAR(RESIGN_DAY) AS resign_year,
                COUNT(*) AS employees_resigned
            FROM
                cam_hr.dj_emp_info
            WHERE
                RESIGN_DAY IS NOT NULL AND YEAR(RESIGN_DAY) BETWEEN 1999 AND 2023
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
            GROUP BY
                resign_year
        ) AS resigned ON joined.join_year = resigned.resign_year
                 LEFT JOIN (
            SELECT
                YEAR(JOIN_DAY) AS active_year,
                COUNT(*) AS active_emp_count
            FROM
                cam_hr.dj_emp_info
            WHERE
                JOIN_DAY IS NOT NULL AND YEAR(JOIN_DAY) BETWEEN 1999 AND 2023
              AND WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
            GROUP BY
                active_year
        ) AS active ON joined.join_year = active.active_year
        ORDER BY
            join_year desc
    </select>

    <select id="getJoinResignEmpList" parameterType="map" resultType="map">
            /*getJoinResignEmpList*/
        SELECT
            HEI.*,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1 AS hire_mon,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
            IFNULL(CASE WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END, "") AS SPOT,
            CASE WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
                 WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
                 ELSE 999 END SORT
        FROM
            CAM_HR.DJ_EMP_INFO AS HEI
                LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
        <choose>
        <when test='joinYear != null and joinYear != ""'>
            YEAR(HEI.JOIN_DAY) = #{joinYear}
        </when>
        <when test='resignDay != null and resignDay != ""'>
            YEAR(HEI.RESIGN_DAY) = #{resignDay}
        </when>
        </choose>
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <insert id="userDegreeInfoInsert" parameterType="map">
        /* userDegreeInfoInsert */

            INSERT INTO CAM_HR.DJ_EMP_EDUCATIONAL(
            EMP_SEQ
            ,EMP_NAME
            ,ADMISSION_DAY
            ,GRADUATION_DAY
            ,DEGREE_CODE
            ,REG_EMP_SEQ
            ,REG_DATE
            ,SCHOOL_NAME
            ,RMK
            ,GUBUN_CODE
            ,GRADUATION_CODE
            ,SCORE
            ,admin_approval
            )VALUES (
            #{empSeq1}
            ,#{empName1}
            ,#{sDate}
            ,#{eDate}
            ,#{degree}
            ,#{empSeq}
            ,NOW()
            ,#{school}
            ,#{bmk}
            ,#{gubun}
            ,#{graduation}
            ,#{score}
            ,'Y'
            )
        <selectKey keyProperty="educationalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_EDUCATIONAL'
        </selectKey>
    </insert>

    <update id="userDegreeInfoModify" parameterType="map">
        /* userDegreeInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL
        SET
             GUBUN_CODE = #{gubun}
            ,ADMISSION_DAY = #{sDate}
            ,GRADUATION_DAY = #{eDate}
            ,SCHOOL_NAME = #{school}
            ,DEGREE_CODE = #{degree}
            ,GRADUATION_CODE = #{graduation}
            ,SCORE = #{score}
            ,RMK = #{bmk}
            ,MOD_EMP_SEQ = #{empSeq}
            ,MOD_DATE = NOW()
        WHERE
            EDUCATIONAL_ID = #{pk}
    </update>

    <update id="userDegreeInfoDelete" parameterType="map">
        /* userDegreeInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_EDUCATIONAL
        SET
            ACTIVE = 'N'
        WHERE
            EDUCATIONAL_ID = #{key}
    </update>

    <insert id="userCareerInfoInsert" parameterType="map">
        /* userCareerInfoInsert */
        INSERT INTO CAM_HR.DJ_EMP_CAREER(
        EMP_SEQ
        ,EMP_NAME
        ,EMPLOY_DEPT_NAME
        ,JOIN_DAY
        ,RESIGN_DAY
        ,POSITION_OR_DUTY
        ,CAREER_PERIOD
        ,REG_EMP_SEQ
        ,REG_DATE
        ,RMK
        ,MAIN_TASK
        ,CAREER_MONTH
        ,ADMIN_APPROVAL
        )VALUES (
        #{empSeq1}
        ,#{empName1}
        ,#{place}
        ,#{sDate}
        ,#{eDate}
        ,#{position}
        ,#{dateY}
        ,#{empSeq}
        ,NOW()
        ,#{bmk}
        ,#{workType}
        ,#{dateM}
        ,'Y'
        )
        <selectKey keyProperty="careerId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CAREER'
        </selectKey>
    </insert>

    <update id="userCareerInfoModify" parameterType="map">
        /* userCareerInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_CAREER
        SET
            EMPLOY_DEPT_NAME = #{place}
          ,JOIN_DAY = #{sDate}
          ,RESIGN_DAY = #{eDate}
          ,POSITION_OR_DUTY = #{position}
          ,CAREER_PERIOD = #{dateY}
          ,CAREER_MONTH = #{dateM}
          ,RMK = #{bmk}
          ,MAIN_TASK = #{workType}
          ,MOD_EMP_SEQ = #{empSeq}
          ,MOD_DATE = NOW()
        WHERE
            CAREER_ID = #{pk}
    </update>

    <update id="userCareerInfoDelete" parameterType="map">
        /* userCareerInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_CAREER
        SET
            ACTIVE = 'N'
        WHERE
            CAREER_ID = #{key}
    </update>

    <update id="userMilitaryInfoModify" parameterType="map">
        /* userMilitaryInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_MILITARY_SVC_INFO
        SET
            MILITARY_SVC_TYPE = #{mGubun}
            ,M_UNFUL_REASON = #{reason}
            ,M_ENLIST_DAY = #{sDate}
            ,M_DISCHARGE_DAY = #{eDate}
            ,MOD_EMP_SEQ = #{empSeq}
            ,MOD_DATE = now()
            ,M_LAST_RANK = #{rank}
            ,M_DIVISION = #{mType}
            ,MOS = #{mDept}
        WHERE
            MSI_INFO_ID = #{pk}
    </update>

    <insert id="userFamilyInfoInsert" parameterType="map">
        /* userFamilyInfoInsert */
        INSERT INTO CAM_HR.DJ_EMP_FAMILY_INFO(
                  EMP_SEQ
                 ,EMP_NAME
                 ,FAMILY_CODE
                 ,FAMILY_NAME
                 ,FAMILY_BIRTH
                 ,FAMILY_JOB
                 ,INCLUDE_YN
                 ,REG_EMP_SEQ
                 ,REG_DATE
                 ,ADMIN_APPROVAL
        )VALUES (
                #{empSeq1}
                ,#{empName1}
                ,#{relation}
                ,#{fName}
                ,#{bDay}
                ,#{job}
                ,#{includeType}
                ,#{empSeq}
                ,now()
                ,'Y'
                )
    </insert>

    <update id="userFamilyInfoModify" parameterType="map">
        /* userFamilyInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_FAMILY_INFO
        SET
            FAMILY_CODE = #{relation}
            ,FAMILY_NAME = #{fName}
            ,FAMILY_BIRTH = #{bDay}
            ,FAMILY_JOB = #{job}
            ,INCLUDE_YN = #{includeType}
        WHERE
            FAMILY_ID = #{pk}
    </update>

    <update id="userFamilyInfoDelete" parameterType="map">
        /* userFamilyInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_FAMILY_INFO
        SET
            ACTIVE = 'N'
        WHERE
            FAMILY_ID = #{key}
    </update>

    <insert id="userLinInfoInsert" parameterType="map">
        /* userLinInfoInsert */
        INSERT INTO CAM_HR.DJ_EMP_CERTIFICATE(
                  EMP_SEQ
                 ,EMP_NAME
                 ,CERTIFICATE_NAME
                 ,CERTIFICATE_NUM
                 ,ACQUISITION_DAY
                 ,ISSUER
                 ,RMK
                 ,REG_EMP_SEQ
                 ,REG_DATE
                 ,ADMIN_APPROVAL
        )VALUES (
                #{empSeq1}
                ,#{empName1}
                ,#{licenseName}
                ,#{licenseNum}
                ,#{sDate}
                ,#{agency}
                ,#{bmk}
                ,#{empSeq}
                ,now()
                ,'Y'
                )
        <selectKey keyProperty="certificateId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CERTIFICATE'
        </selectKey>
    </insert>

    <update id="userLinInfoModify" parameterType="map">
        /* userLinInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_CERTIFICATE
        SET
          CERTIFICATE_NAME = #{licenseName}
          ,CERTIFICATE_NUM = #{licenseNum}
          ,ACQUISITION_DAY = #{sDate}
          ,ISSUER = #{agency}
          ,RMK = #{bmk}
          ,MOD_EMP_SEQ = #{empSeq}
          ,MOD_DATE = NOW()
        WHERE
            CERTIFICATE_ID = #{pk}
    </update>

    <update id="userLinInfoDelete" parameterType="map">
        /* userLinInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_CERTIFICATE
        SET
            ACTIVE = 'N'
        WHERE
            CERTIFICATE_ID = #{key}
    </update>

    <insert id="userJobInfoInsert" parameterType="map">
        /* userJobInfoInsert */
        INSERT INTO CAM_HR.DJ_EMP_DUTY_INFO(
                 EMP_SEQ
               , EMP_NAME
               , POSITON_NAME
               , WORK_PAY
               , DUTY_DETAIL
               , WORK_JOIN_DAY
               , WORK_LEAVE_DAY
               , REG_EMP_SEQ
               , REG_DATE
                , ADMIN_APPROVAL

        )VALUES (
                #{empSeq1}
                , #{empName1}
                , #{POSITON_NAME}
                , #{WORK_PAY}
                , #{DUTY_DETAIL}
                , #{sDate}
                , #{eDate}
                , #{empSeq}
                , NOW()
                , 'Y'
                )
    </insert>

    <update id="userJobInfoModify" parameterType="map">
        /* userJobInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_DUTY_INFO
        SET
            POSITON_NAME = #{POSITON_NAME}
          , WORK_PAY = #{WORK_PAY}
          , DUTY_DETAIL = #{DUTY_DETAIL}
          , WORK_JOIN_DAY = #{sDate}
          , WORK_LEAVE_DAY = #{eDate}
          ,MOD_EMP_SEQ = #{empSeq}
          ,MOD_DATE = NOW()
        WHERE
            DUTY_ID = #{pk}
    </update>

    <update id="userJobInfoDelete" parameterType="map">
        /* userJobInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_DUTY_INFO
        SET
            ACTIVE = 'N'
        WHERE
            DUTY_ID = #{key}
    </update>

    <insert id="userRewInfoInsert" parameterType="map">
        /* userRewInfoInsert */
        INSERT INTO CAM_HR.DJ_EMP_REWORD(
                 EMP_SEQ
                ,ERP_EMP_SEQ
                ,EMP_NAME
                ,DEPT_SEQ
                ,DEPT_NAME
                ,TEAM_SEQ
                ,TEAM_NAME
                ,REWORD_DAY
                ,RWD_SN
                ,REWORD_TYPE
                ,REWORD_TYPE_NAME
                ,RWD_ST_COMP
                ,RWD_OFM
                ,REG_EMP_SEQ
                ,REG_DATE
                ,RWD_ETC
                ,ADMIN_APPROVAL
        )VALUES (
                #{empSeq1}
                ,#{erpEmpSeq1}
                ,#{empName}
                ,#{deptSeq}
                ,#{deptName}
                ,#{deptSeq}
                ,#{teamName}
                ,#{sDate}
                ,#{rwdSn}
                ,#{rGubunOutInType}
                ,#{rGubunAll}
                ,#{agency}
                ,#{rIssue}
                ,#{empSeq}
                ,now()
                ,''
                ,'Y'
                )
        <selectKey keyProperty="rewordId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_REWORD'
        </selectKey>
    </insert>

    <update id="userRewInfoModify" parameterType="map">
        /* userRewInfoModify */
        UPDATE
            CAM_HR.DJ_EMP_REWORD
        SET
          REWORD_DAY = #{sDate}
          ,REWORD_TYPE = #{rGubunOutInType}
          ,REWORD_TYPE_NAME = #{rGubunOutInName}
          ,REWORD_NAME = #{rGubun}
          ,RWD_ST_COMP = #{agency}
          ,RWD_OFM = #{rIssue}
          ,MOD_EMP_SEQ = #{empSeq}
          ,MOD_DATE = NOW()
          ,RWD_SN = #{rwdSn}
        WHERE
            REWORD_ID = #{pk}
    </update>

    <update id="userRewInfoDelete" parameterType="map">
        /* userRewInfoDelete */
        UPDATE
            CAM_HR.DJ_EMP_REWORD
        SET
            ACTIVE = 'N'
        WHERE
            REWORD_ID = #{key}
    </update>

    <!-- 인사통계 - 소속현황 : 부서 정보 조회 (부서 레벨 1) -->
    <select id="getDeptEmpCount" resultType="map" parameterType="map">
        /*getDeptEmpCount*/
        SELECT
        dept.DEPT_SEQ AS DeptID,
        dept.DEPT_NAME AS DeptName,
        IFNULL(SUM(CASE WHEN emp.WORK_STATUS_CODE = 'Y' THEN 1 ELSE 0 END), 0) AS DeptEmployeesCount
        FROM
        cam_hr.dj_dept_info AS dept
        LEFT JOIN
        cam_hr.dj_emp_info AS emp
        ON emp.DEPT_SEQ = dept.DEPT_SEQ
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
        WHERE
        dept.DEPT_LEVEL = 1
        GROUP BY
        dept.DEPT_SEQ, dept.DEPT_NAME
    </select>

    <!-- 인사통계 - 소속현황 :  팀 정보 조회 (부서 레벨 2) -->
    <select id="getTeamEmpCount" resultType="map" parameterType="map">
        /*getTeamEmpCount*/
        SELECT
        dept.DEPT_SEQ AS TeamID,
        dept.PARENT_DEPT_SEQ AS ParentDeptID,
        dept.DEPT_NAME AS TeamName,
        IFNULL(SUM(CASE WHEN emp.WORK_STATUS_CODE = 'Y' THEN 1 ELSE 0 END), 0) AS TeamEmployeesCount
        FROM
        cam_hr.dj_dept_info AS dept
        LEFT JOIN
        cam_hr.dj_emp_info AS emp
        ON emp.DEPT_SEQ = dept.DEPT_SEQ
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator=" OR " open="(" close=")">
                ${item}
            </foreach>
        </if>
        WHERE
        dept.DEPT_LEVEL = 2
        GROUP BY
        dept.PARENT_DEPT_SEQ, dept.DEPT_NAME
    </select>

<!--    년도별 직급 현황-->
    <select id="getPositionNameByYear" parameterType="map" resultType="map">
        SELECT COUNT(*) AS emp_count, position_name, YEAR(join_day) AS join_year
        FROM cam_hr.dj_emp_info
        WHERE position_name IN (
        '수석연구원', '수석매니저', '수석행정원', '책임행정원', '책임매니저', '책임연구원',
        '선임연구원', '선임매니저', '선임행정원', '주임행정원', '행정원', '주임매니저',
        '매니저', '주임연구원', '연구원'
        )
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        GROUP BY join_year, position_name
        ORDER BY join_year DESC, (SELECT SORT FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 4 AND TRIM(SUBSTRING_INDEX(CM_CODE_NM, '/', 1)) = POSITION_NAME)
    </select>

    <select id="getPositionListByYear" parameterType="map" resultType="map">
        SELECT
            HEI.*,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1 AS hire_mon,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
            IFNULL(CASE WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END, "") AS SPOT,
            CASE WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
                 WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
                 ELSE 999 END SORT
        FROM
            CAM_HR.DJ_EMP_INFO AS HEI
        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        where year(HEI.join_day) = #{year}
          and position_name = #{positionName}
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getApntNameByYear" parameterType="map" resultType="map">
        SELECT YEAR(a.HISTORY_DT) AS his_year, a.apnt_name AS apnt_name, COUNT(*) AS emp_count
        FROM cam_hr.dj_apnt_info a
            JOIN cam_hr.dj_emp_info e ON a.EMP_SEQ = e.EMP_SEQ
        WHERE a.apnt_name IN (
            '임용 (정규직)', '승진 (직급)', '전보', '겸직', '직무 대리', '파견',
            '면직', '강등', '조직 개편', '호칭 변경', '기타', '임용 (계약직)',
            '임용 (인턴 사원)', '임용 (단기 직원)', '임용 (위촉 직원)', '임용 (경비 / 환경)', '승진 (직위)'
            )
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        GROUP BY YEAR(a.HISTORY_DT), a.apnt_name
        ORDER BY YEAR(a.HISTORY_DT)
    </select>

    <select id="getApntListByYear" parameterType="map" resultType="map">
        SELECT
            HEI.*,
            history_dt as his_year,
            apnt_name as apnt_name,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire,
            SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, HEI.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1 AS hire_mon,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
            IFNULL(CASE WHEN HEI.DUTY_NAME = "" THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END, "") AS SPOT,
            CASE WHEN HEI.DUTY_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 3 AND CM_CODE = HEI.DUTY_CODE)
                 WHEN HEI.POSITION_CODE IS NOT NULL THEN (SELECT SORT FROM CAM_COMMON.dj_com_code WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE)
                 ELSE 999 END SORT
        FROM
            CAM_HR.DJ_EMP_INFO AS HEI
                LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
                left join CAM_HR.DJ_APNT_INFO HAI on HEI.EMP_SEQ = HAI.EMP_SEQ
        where year(history_dt) = #{year}
        and apnt_name = #{apntName}
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getEmpCountsByPosition" resultType="map" parameterType="map">
        /*getEmpCountsByPosition*/
        SELECT
            POSITION_NAME,
            SUM(EMPLOYEE_COUNT) AS TotalPositionEmpCount
        FROM (
                 SELECT
                    POSITION_NAME,
                    (SELECT SORT FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 4 AND TRIM(SUBSTRING_INDEX(CM_CODE_NM, '/', 1)) = POSITION_NAME) AS SORT,
                    COUNT(*) AS EMPLOYEE_COUNT
                 FROM
                     cam_hr.dj_emp_info
                 WHERE
                     WORK_STATUS_CODE = 'Y'
                   AND POSITION_NAME IS NOT NULL
                   AND POSITION_NAME != ''
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
                 GROUP BY
                     POSITION_NAME
             ) AS subquery
        GROUP BY
            POSITION_NAME
        ORDER BY
            SORT
    </select>

    <select id="getGenderCount" parameterType="map" resultType="map">
        select
            case
                GENDER_CODE
                when 'F' then '여성'
                when 'M' then '남성'
                else '기타'
                end as gender_code,
            COUNT(*) as emp_count
        from
            cam_hr.dj_emp_info
        where
            WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        group by
            GENDER_CODE
    </select>

    <select id="getAgeCount" parameterType="map" resultType="map">
        select
            case
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 15 and 25 then '15세~25세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 26 and 30 then '26세~30세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 31 and 35 then '31세~35세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 36 and 40 then '36세~40세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 41 and 45 then '41세~45세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 46 and 50 then '46세~50세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 51 and 55 then '51세~55세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) between 56 and 60 then '56세~60세'
                when TIMESTAMPDIFF(year, BDAY, CURDATE()) >= 61 then '61세 이상'
                else '기타'
                end as age,
            COUNT(*) as emp_count
        from
            cam_hr.dj_emp_info
        where
            WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        group by
            Age
    </select>

    <select id="getDegreeCount" parameterType="map" resultType="map">
        select
            DEGREE_CODE,
            COUNT(*) as emp_count
        from
            cam_hr.dj_emp_info dei
        where
            WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        group by
            DEGREE_CODE
    </select>

    <select id="getDeptListByCount" parameterType="map" resultType="map">
        SELECT HEI.*,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
        DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2
        FROM cam_hr.dj_emp_info AS HEI
        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE HEI.DEPT_SEQ IN (
        SELECT DEPT_SEQ
        FROM cam_hr.dj_dept_info
        WHERE DEPT_SEQ = #{deptID}
        OR PARENT_DEPT_SEQ = #{deptID}
        )
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getTeamListByCount" parameterType="map" resultType="map">
        SELECT
        HEI.*,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
        DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2
        FROM CAM_HR.DJ_EMP_INFO AS HEI
        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        where HEI.DEPT_SEQ = #{teamID}
        and WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getPositionListByCount" parameterType="map" resultType="map">
        SELECT
        HEI.*,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
        DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2
        FROM
        CAM_HR.DJ_EMP_INFO AS HEI
        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        where POSITION_NAME = #{positionName}
        and work_status_code = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getGenderListByCount" parameterType="map" resultType="map">
        SELECT
            HEI.*,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2
        FROM
            CAM_HR.DJ_EMP_INFO AS HEI
            LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        where gender_code = #{genderName}
          and work_status_code = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        GROUP BY HEI.EMP_SEQ
    </select>

    <select id="getAgeListByCount" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            (
                SELECT
                    HEI.*,
                    CASE
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 15 AND 25 THEN '15세~25세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 26 AND 30 THEN '26세~30세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 31 AND 35 THEN '31세~35세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 36 AND 40 THEN '36세~40세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 41 AND 45 THEN '41세~45세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 46 AND 50 THEN '46세~50세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 51 AND 55 THEN '51세~55세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) BETWEEN 56 AND 60 THEN '56세~60세'
                        WHEN TIMESTAMPDIFF(year, HEI.BDAY, CURDATE()) >= 61 THEN '61세 이상'
                        ELSE '기타'
                        END AS AGE_NAME,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ_NEW,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
                    DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2
                FROM
                    CAM_HR.DJ_EMP_INFO AS HEI
                        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
            ) AS subquery
        WHERE
        AGE_NAME = #{ageName}
          AND work_status_code = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        GROUP BY subquery.EMP_SEQ
    </select>

    <select id="getDegreeListByCount" parameterType="map" resultType="map">
        SELECT
        HEI.*,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_SEQ END AS DEPT_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME1,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_SEQ ELSE "" END AS TEAM_SEQ,
        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
        DATE_FORMAT(HEI.JOIN_DAY,'%Y-%m-%d') AS JOIN_DAY2,
        degree_code
        FROM
        CAM_HR.DJ_EMP_INFO AS HEI
        LEFT JOIN CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        where degree_code = #{degreeName}
        and work_status_code = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
        GROUP BY HEI.EMP_SEQ
    </select>

    <select id="getTotalEmployeeCount" parameterType="map" resultType="map">
        /*getTotalEmployeeCount*/
        SELECT
        COUNT(*) AS EmployeeCount
        FROM
        cam_hr.dj_emp_info
        WHERE
        WORK_STATUS_CODE = 'Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>
    </select>

    <select id="getCurrentPositionByYear" parameterType="map" resultType="map">
        /*getCurrentPositionByYear*/
        SELECT
            YEAR(CURRENT_DATE) AS defaultYear,
            SUM(CASE WHEN POSITION_NAME = '수석연구원' THEN 1 ELSE 0 END) AS 수석연구원,
            SUM(CASE WHEN POSITION_NAME = '수석매니저' THEN 1 ELSE 0 END) AS 수석매니저,
            SUM(CASE WHEN POSITION_NAME = '수석행정원' THEN 1 ELSE 0 END) AS 수석행정원,
            SUM(CASE WHEN POSITION_NAME = '책임행정정' THEN 1 ELSE 0 END) AS 책임행정정,
            SUM(CASE WHEN POSITION_NAME = '책임매니저' THEN 1 ELSE 0 END) AS 책임매니저,
            SUM(CASE WHEN POSITION_NAME = '책임연구원' THEN 1 ELSE 0 END) AS 책임연구원,
            SUM(CASE WHEN POSITION_NAME = '선임연구원' THEN 1 ELSE 0 END) AS 선임연구원,
            SUM(CASE WHEN POSITION_NAME = '선임매니저' THEN 1 ELSE 0 END) AS 선임매니저,
            SUM(CASE WHEN POSITION_NAME = '선임행정원' THEN 1 ELSE 0 END) AS 선임행정원,
            SUM(CASE WHEN POSITION_NAME = '주임행정원' THEN 1 ELSE 0 END) AS 주임행정원,
            SUM(CASE WHEN POSITION_NAME = '행정원' THEN 1 ELSE 0 END) AS 행정원,
            SUM(CASE WHEN POSITION_NAME = '주임매니저' THEN 1 ELSE 0 END) AS 주임매니저,
            SUM(CASE WHEN POSITION_NAME = '매니저' THEN 1 ELSE 0 END) AS 매니저,
            SUM(CASE WHEN POSITION_NAME = '주임연구원' THEN 1 ELSE 0 END) AS 주임연구원,
            SUM(CASE WHEN POSITION_NAME = '연구원' THEN 1 ELSE 0 END) AS 연구원
        FROM cam_hr.dj_emp_info
        where WORK_STATUS_CODE ='Y'
        <if test='arr != null and !"".equals(arr)'>
            AND
            <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                ${item}
            </foreach>
        </if>;
    </select>
    <!--
    <insert id="setAppToUserDetailInsert" parameterType="map">
        /*setAppToUserDetailInsert*/
        INSERT INTO CAM_HR.DJ_EMP_INFO(
        EMP_SEQ,
        EMP_NAME_KR,
        LOGIN_ID,
        RES_REGIS_NUM,
        DUTY_CODE,
        DUTY_NAME,
        POSITION_CODE,
        POSITION_NAME,
        DEPT_NAME,
        DEPT_SEQ,
        DEPT_TEAM_NAME,
        JOB_DETAIL,
        BEFOR_CAREER,
        ACCOUNT_HOLDER,
        BANK_NAME,
        ACCOUNT_NUM,
        ZIP_CODE,
        ADDR,
        ADDR_DETAIL,
        OFFICE_TEL_NUM,
        MOBILE_TEL_NUM,
        EMAIL_ADDR,
        CAR_NUM,
        EMP_NAME_CN,
        EMP_NAME_EN,
        EMG_TEL_NUM,
        LEGAL_DOMICILE,
        HOBBY,
        RELIGION,
        SPECIALITY,
        WEIGHT,
        HEIGHT,
        VISIONL,
        VISIONR,
        <if test="genderCode != null and genderCode != ''">
            GENDER_CODE,
        </if>
        WEDDING_ACTIVE,
        <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            WEDDING_DAY,
        </if>
        <if test="GRADE_NAME != null and GRADE_NAME != ''">
            GRADE_NAME,
        </if>
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            DEGREE_CODE,
        </if>
        BLOOD_TYPE,
        DIVISION,
        DIVISION_SUB,
        REG_EMP_SEQ,
        ACTIVE,
        CAR_ACTIVE,
        OCCUPATION_CODE,
        JOIN_DAY,
        WORK_STATUS_CODE,
        LUNAR_CAL,
        CTR_ST_DAY,
        CTR_EN_DAY,
        WEEK_WORK_TIME,
        NICK_NAME,
        CONTRACT,
        SCHOOL,
        DEGREE,
        DEPARTMENT,
        GRADE,
        STUDENT_ID,
        QUALIFICATION,
        LAST_DEGREE,
        CAREER,
        MILITARY,
        SIGNIFICANT,
        BDAY,
        TEMP_DIVISION,
        MY_COMENT
        )VALUES(
        (SELECT MAX(CAST(A.EMP_SEQ AS UNSIGNED))+1 FROM CAM_HR.DJ_EMP_INFO A),
        #{USER_NAME},
        #{LOGIN_ID},
        #{RES_REGIS_NUM},
        #{DUTY_CODE},
        #{DUTY_NAME},
        #{POSITION_CODE},
        #{POSITION_NAME},
        #{DEPT_NAME},
        #{DEPT_SEQ},
        #{DEPT_TEAM_NAME},
        #{JOB_DETAIL},
        #{BEFOR_CAREER},
        #{ACCOUNT_HOLDER},
        #{BANK_NAME},
        #{ACCOUNT_NUM},
        #{ZIP_CODE},
        #{ADDR},
        #{ADDR_DETAIL},
        #{OFFICE_TEL_NUM},
        #{MOBILE_TEL_NUM},
        #{EMAIL_ADDR},
        #{CAR_NUM},
        #{EMP_NAME_CN},
        #{EMP_NAME_EN},
        #{EMG_TEL_NUM},
        #{LEGAL_DOMICILE},
        #{HOBBY},
        #{RELIGION},
        #{SPECIALITY},
        #{WEIGHT},
        #{HEIGHT},
        #{VISIONL},
        #{VISIONR},
        <if test="genderCode != null and genderCode != ''">
            #{genderCode},
        </if>
        #{WEDDING_ACTIVE},
        <if test="WEDDING_DAY != null and WEDDING_DAY != ''">
            #{WEDDING_DAY},
        </if>
        <if test="GRADE_NAME != null and GRADE_NAME != ''">
            #{GRADE_NAME},
        </if>
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            #{DEGREE_CODE},
        </if>
        #{BLOOD_TYPE},
        #{division},
        #{divisionSub},
        #{regEmpSeq},
        #{ACTIVE},
        #{CAR_ACTIVE},
        #{OCCUPATION_CODE},
        #{JOIN_DAY},
        'Y',
        #{LUNAR_CAL},
        #{CTR_ST_DAY},
        #{CTR_EN_DAY},
        #{WEEK_WORK_TIME},
        #{NICK_NAME},
        #{CONTRACT},
        #{SCHOOL},
        #{DEGREE},
        #{DEPARTMENT},
        #{GRADE},
        #{STUDENT_ID},
        #{QUALIFICATION},
        #{LAST_DEGREE},
        #{CAREER},
        #{MILITARY},
        #{SIGNIFICANT},
        #{BDAY},
        #{TEMP_DIVISION},
        #{MY_COMENT}
        )

        <selectKey keyProperty="empSeq" resultType="Integer" order="BEFORE">
            SELECT MAX(CAST(A.EMP_SEQ AS UNSIGNED))+1 FROM CAM_HR.DJ_EMP_INFO A
        </selectKey>
    </insert>
    -->
    <insert id="setEduReqDetailInsert" parameterType="map">
    /*setEduReqDetailInsert*/
        INSERT INTO CAM_HR.DJ_EMP_EDUCATIONAL(
        EMP_SEQ
        ,EMP_NAME
        ,ADMISSION_DAY
        ,GRADUATION_DAY
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
        ,DEGREE_CODE
        </if>
        ,REG_EMP_SEQ
        ,REG_DATE
        ,SCHOOL_NAME
        ,GUBUN_CODE
        ,GRADUATION_CODE
        ,SCORE
        ,GRADE_NO
        ,SCORE_NO
        ,admin_approval
        )VALUES (
        #{EMP_SEQ},
        #{EMP_NAME},
        #{ADMISSION_DAY},
        #{GRADUATION_DAY},
        <if test="DEGREE_CODE != null and DEGREE_CODE != ''">
            #{DEGREE_CODE},
        </if>
        #{REG_EMP_SEQ},
        NOW(),
        #{SCHOOL_NAME},
        #{GUBUN_CODE},
        #{GRADUATION_CODE},
        #{SCORE},
        #{GRADE_NO},
        #{SCORE_NO},
        'Y'
        )
        <selectKey keyProperty="educationalId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_EDUCATIONAL'
        </selectKey>
    </insert>

    <insert id="setCareerReqDetailInsert" parameterType="map">
        /* setCareerReqDetailInsert */
        INSERT INTO CAM_HR.DJ_EMP_CAREER(
        EMP_SEQ
        ,EMP_NAME
        ,EMPLOY_DEPT_NAME
        ,JOIN_DAY
        ,RESIGN_DAY
        ,POSITION_OR_DUTY
        ,CAREER_PERIOD
        ,REG_EMP_SEQ
        ,REG_DATE
        ,MAIN_TASK
        ,CAREER_MONTH
        ,ADMIN_APPROVAL
        ,ADD_NO
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{CAREER_ORG_NAME}
        ,#{WORK_ST_DT}
        ,#{WORK_EN_DT}
        ,#{POSITION}
        ,#{CAREER_PERIOD}
        ,#{REG_EMP_SEQ}
        ,NOW()
        ,#{CHARGE_WORK}
        ,#{CAREER_MONTH}
        ,'Y'
        ,#{CAREER_FILE}
        )
        <selectKey keyProperty="careerId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CAREER'
        </selectKey>
    </insert>

    <insert id="setCertReqDetailInsert" parameterType="map">
        /* setCertReqDetailInsert */
        INSERT INTO CAM_HR.DJ_EMP_CERTIFICATE(
        EMP_SEQ
        ,EMP_NAME
        ,CERTIFICATE_NAME
        ,CERTIFICATE_NUM
        ,ACQUISITION_DAY
        ,ISSUER
        ,REG_EMP_SEQ
        ,REG_DATE
        ,ADMIN_APPROVAL
        ,CERTIFICATE_ADD_NO
        )VALUES (
        #{EMP_SEQ}
        ,#{EMP_NAME}
        ,#{CERT_NAME}
        ,#{CERT_CLASS}
        ,#{ACQUISITION_DAY}
        ,#{CERT_ISSUER}
        ,#{REG_EMP_SEQ}
        ,now()
        ,'Y'
        ,#{CERT_FILE}
        )
        <selectKey keyProperty="certificateId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_HR' AND TABLE_NAME = 'DJ_EMP_CERTIFICATE'
        </selectKey>
    </insert>

</mapper>
