<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardCt">
    <select id="selectBoardList" resultType="egovframework.com.devjitsu.hp.board.util.PostResponse" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*selectBoardList*/
        SELECT
            *,
            (case when (select count(fr_key) from cam_common.dj_file_info where fr_key = dba.board_article_id and file_cd = #{searchCategory}) != 0 then 'Y'
                  else 'N' end) AS FILE_YN,
            (case when <![CDATA[ now() between start_dt AND end_dt THEN '진행 중' when start_dt > now() then '공고 전' else '마감' end ]]>) as state
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE DBA
        WHERE
            BOARD_CATEGORY_ID = #{searchCategory}
        AND
            ACTIVE = 'Y'
        <if test="searchInput != null and searchInput != ''">
        AND
            BOARD_ARTICLE_TITLE LIKE CONCAT('%', #{searchInput}, '%')
        </if>
        ORDER BY REG_DATE DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="selectPrBoardList" resultType="egovframework.com.devjitsu.hp.board.util.PostResponse" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*selectPrBoardList*/
        SELECT
            *,
            (select concat(file_path,file_uuid) from cam_common.dj_file_info where fr_key = dba.board_article_id and file_cd = #{searchCategory}) AS FILE_PATH
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE DBA
        WHERE
            BOARD_CATEGORY_ID = #{searchCategory}
        AND
            ACTIVE = 'Y'
        <if test="searchInput != null and searchInput != ''">
            AND
            BOARD_ARTICLE_TITLE LIKE CONCAT('%', #{searchInput}, '%')
        </if>
        ORDER BY REG_DATE DESC
            LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="selectMainList" resultType="map" parameterType="map">
        /*selectMainList*/
        SELECT
            BOARD_ARTICLE_ID
             ,BOARD_ID
             ,BOARD_CATEGORY_ID
             ,BOARD_ARTICLE_TITLE
             ,BOARD_ARTICLE_CONTENT
             ,BOARD_ARTICLE_VIEW_COUNT
             ,REG_EMP_NAME
             ,REG_DATE
             ,DATE_FORMAT(REG_DATE, '%Y-%m-%d') AS regDate
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
        <if test="category != 'all'">
            BOARD_CATEGORY_ID = #{category}
        AND

        </if>
            ACTIVE = 'Y'
        ORDER BY REG_DATE DESC
            LIMIT 3
    </select>

    <select id="selectBsnsMainList" resultType="map" parameterType="map">
        /*selectBsnsMainList*/
        SELECT
             BOARD_ARTICLE_ID
             ,BOARD_ID
             ,BOARD_ARTICLE_TITLE
             ,IFNULL(DATE_FORMAT(START_DT, '%Y-%m-%d %H:%i'), "-") as startDt
             ,IFNULL(DATE_FORMAT(END_DT, '%Y-%m-%d %H:%i'), "-") as endDt
             ,IFNULL(DATE_FORMAT(END_DT, '%Y-%m-%d'), "-") as endDay
             ,(case when now() between start_dt AND end_dt THEN '진행중'
                    when start_dt > now() then '공고전'
                    else '마감' end ) as state
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
            BOARD_CATEGORY_ID = 'business'
        AND
            ACTIVE = 'Y'
        ORDER BY REG_DATE DESC
    </select>

    <select id="selectBoardListCount" resultType="int" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*selectBoardListCount*/
        SELECT
            COUNT(*)
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
            BOARD_CATEGORY_ID = #{searchCategory}
        AND
            ACTIVE = 'Y'
        <if test="searchInput != null and searchInput != ''">
            AND
            BOARD_ARTICLE_TITLE LIKE CONCAT('%', #{searchInput}, '%')
        </if>
    </select>

    <select id="selectBoard" resultType="map" parameterType="map">
        /*selectBoard*/
        SELECT
            *,
            (SELECT BOARD_ARTICLE_ID FROM CAM_COMMON.DJ_BOARD_ARTICLE
            WHERE <![CDATA[BOARD_ARTICLE_ID <  #{boardArticleId}]]> AND BOARD_CATEGORY_ID = #{category} AND ACTIVE = 'Y' ORDER BY BOARD_ARTICLE_ID DESC LIMIT 1) as 'beforeKey',
            (SELECT BOARD_ARTICLE_TITLE FROM CAM_COMMON.DJ_BOARD_ARTICLE
            WHERE <![CDATA[BOARD_ARTICLE_ID <  #{boardArticleId}]]> AND BOARD_CATEGORY_ID = #{category} AND ACTIVE = 'Y' ORDER BY BOARD_ARTICLE_ID DESC LIMIT 1) as 'beforeName',
            (SELECT BOARD_ARTICLE_ID FROM CAM_COMMON.DJ_BOARD_ARTICLE
            WHERE <![CDATA[BOARD_ARTICLE_ID > #{boardArticleId}]]> AND BOARD_CATEGORY_ID = #{category} AND ACTIVE = 'Y' ORDER BY BOARD_ARTICLE_ID asc LIMIT 1) as 'afterKey',
            (SELECT BOARD_ARTICLE_TITLE FROM CAM_COMMON.DJ_BOARD_ARTICLE
            WHERE <![CDATA[BOARD_ARTICLE_ID > #{boardArticleId}]]> AND BOARD_CATEGORY_ID = #{category} AND ACTIVE = 'Y' ORDER BY BOARD_ARTICLE_ID asc LIMIT 1) as 'afterName'
            <if test="category == 'business'">
            ,DATE_FORMAT(START_DT, '%Y-%m-%d %H:%i') as startDt
            ,DATE_FORMAT(END_DT, '%Y-%m-%d %H:%i') as endDt
            </if>
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
            BOARD_CATEGORY_ID = #{category}
        AND
            BOARD_ARTICLE_ID = #{boardArticleId}
        AND
            ACTIVE = 'Y'
    </select>

    <select id="selectNewsBoard" resultType="map" parameterType="map">
        /*selectNewsBoard*/
        SELECT
            DNB.*
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE DBA
        LEFT JOIN
            CAM_COMMON.DJ_NEWS_BOARD DNB
        ON DBA.BOARD_ARTICLE_ID = DNB.FR_KEY
        WHERE
            BOARD_CATEGORY_ID = 'news'
          AND
            BOARD_ARTICLE_ID = #{boardArticleId}
          AND
            ACTIVE = 'Y'
        ORDER BY DNB.INDEX_NUM
    </select>

    <select id="selectBoardFile" resultType="map" parameterType="map">
        /*selectBoardFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = #{category}
        AND
            FR_KEY = #{boardArticleId}

    </select>

    <update id="setBoardArticleViewCount" parameterType="map">
        /*setBoardArticleViewCount*/
        UPDATE
            CAM_COMMON.DJ_BOARD_ARTICLE
        SET
            BOARD_ARTICLE_VIEW_COUNT = (BOARD_ARTICLE_VIEW_COUNT + 1)
        WHERE
            BOARD_ARTICLE_ID = #{boardArticleId}
    </update>

    <insert id="insertBoard" parameterType="map">
        /*insertBoard*/
        INSERT INTO CAM_COMMON.DJ_BOARD_ARTICLE
            (BOARD_ID, BOARD_CATEGORY_ID, BOARD_ARTICLE_TITLE, BOARD_ARTICLE_CONTENT, BOARD_ARTICLE_CONTENT_URL, REG_EMP_NAME,
            <if test="boardId == 'business'">START_DT, END_DT,</if>
            <if test="boardId == 'sns'">SNS_TYPE, SNS_URL,</if>
            REG_DATE
            )
        VALUE
            (#{boardId}, #{boardCategoryId}, #{noticeTitle}, #{content}, #{urlText}, #{writer},
            <if test="boardId == 'business'">#{startDt}, #{endDt},</if>
            <if test="boardId == 'sns'">#{snsType}, #{snsUrl},</if>
            <choose>
                <when test="boardId == 'sns' or boardId == 'report'">
                    #{modifyDate}
                </when>
                <otherwise>
                    current_timestamp()
                </otherwise>
            </choose>
            )
        <selectKey keyProperty="boardArticleId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_COMMON' AND TABLE_NAME = 'DJ_BOARD_ARTICLE'
        </selectKey>
    </insert>

    <update id="updateBoard" parameterType="map">
        /*updateBoard*/
        UPDATE CAM_COMMON.DJ_BOARD_ARTICLE
        SET
            BOARD_ARTICLE_TITLE = #{noticeTitle},
            BOARD_ARTICLE_CONTENT_URL = #{urlText},
            BOARD_ARTICLE_CONTENT = #{content},
            REG_EMP_NAME = #{writer},
            START_DT = #{startDt},
            END_DT = #{endDt},
            SNS_TYPE = #{snsType},
            SNS_URL = #{snsUrl},
            MOD_DATE = now(),
            REG_DATE =
                CASE
                    WHEN BOARD_ID = 'sns' THEN #{modifyDate}
                    WHEN BOARD_ID = 'report' THEN #{modifyDate}
                    ELSE current_timestamp()
                    END
        WHERE
            BOARD_ARTICLE_ID = #{boardArticleId}
        AND
            BOARD_ID = #{boardId}
        AND
            BOARD_CATEGORY_ID = #{category}
    </update>

    <update id="deleteBoard" parameterType="map">
        /*deleteBoard*/
        UPDATE CAM_COMMON.DJ_BOARD_ARTICLE
        SET
            ACTIVE = 'N'
        WHERE
            BOARD_ARTICLE_ID = #{boardArticleId}
          AND
            BOARD_ID = #{boardId}
          AND
            BOARD_CATEGORY_ID = #{category}
    </update>

    <select id="checkNews" parameterType="map" resultType="int">
        /*checkNews*/
        SELECT
            COUNT(*)
        FROM
            CAM_COMMON.DJ_NEWS_BOARD
        WHERE
            FR_KEY = #{frKey}
    </select>

    <insert id="insertNews" parameterType="map">
        /*insertNews*/
        INSERT INTO CAM_COMMON.DJ_NEWS_BOARD
            (FR_KEY, GROUP_KEY, LINK_KEY, INDEX_NUM, CONTENT, TITLE, LINK)
        VALUES
            (#{frKey}, #{groupKey}, #{linkKey}, #{index}, #{contents}, #{title}, #{link})
    </insert>

    <delete id="deleteNews" parameterType="map">
        /*deleteNews*/
        DELETE FROM CAM_COMMON.DJ_NEWS_BOARD WHERE FR_KEY = #{frKey}
    </delete>

    <select id="selectNewsPop" parameterType="map" resultType="map">
        /*selectNewsPop*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_NEWS_BOARD
        WHERE
            GROUP_KEY = #{groupKey}
        AND
            LINK_KEY = #{linkKey}
    </select>

    <select id="selectNewsView" parameterType="map" resultType="map">
        /*selectNewsView*/
        SELECT
            BOARD_ARTICLE_TITLE as title
            ,BOARD_ARTICLE_CONTENT as content
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
            BOARD_ID = 'news'
        AND
            BOARD_ARTICLE_ID = #{boardArticleId}
    </select>

    <insert id="insSubscribe" parameterType="map">
        /*insSubscribe*/
        INSERT INTO CAM_COMMON.DJ_NEWS_BOARD_SUBSCRIBE
            (APPLICANT, EMAIL, BELONG, CONFIRM1, CONFIRM2)
        VALUES
            (#{applicant}, #{email}, #{belong}, #{confirm1}, #{confirm2})
    </insert>

    <update id="cancleSubscribe" parameterType="map">
        /*cancleSubscribe*/
        UPDATE
            CAM_COMMON.DJ_NEWS_BOARD_SUBSCRIBE
        SET
            CANCLE_DATE = NOW()
        WHERE
            EMAIL = #{email}
        ORDER BY APPLY_DATE DESC
        LIMIT 1
    </update>

    <select id="getSubscribeChk" parameterType="map" resultType="map">
        /*getSubscribeChk*/
        SELECT
            COUNT(*) as chk
        FROM
            CAM_COMMON.DJ_NEWS_BOARD_SUBSCRIBE
        WHERE
            EMAIL = #{email}
          AND
            CANCLE_DATE IS NULL
    </select>

    <select id="getNewsSubscribeList" resultType="egovframework.com.devjitsu.hp.board.util.PostResponse" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*getNewsSubscribeList*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_NEWS_BOARD_SUBSCRIBE
        ORDER BY APPLY_DATE DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="getNewsSubscribeListCnt" resultType="int" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*getNewsSubscribeListCnt*/
        SELECT
            COUNT(*)
        FROM
            CAM_COMMON.DJ_NEWS_BOARD_SUBSCRIBE
    </select>

    <select id="getLetterListOld" parameterType="map" resultType="map">
        /*getLetterListOld*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_NEWS_OLD
        WHERE
            SOSIK_YEAR = #{year}
    </select>

    <select id="getFocusList" resultType="map" parameterType="map">
        /*getFocusList*/
        SELECT
            *,
            (select concat(file_path,file_uuid) from cam_common.dj_file_info where fr_key = dba.board_article_id and file_cd = 'photo') AS FILE_PATH
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE DBA
        WHERE
            BOARD_CATEGORY_ID = 'photo'
          AND
            ACTIVE = 'Y'
        ORDER BY
            REG_DATE DESC
        LIMIT 3
    </select>

    <select id="getMainRecruitList" resultType="map" parameterType="map">
        /*getRecruitList*/
        SELECT
            IRI.*,
            AAA.USER_NAME,
            GROUP_CONCAT(DISTINCT AI.CAREER_TYPE) AS CAREER_TYPE,
            (SELECT SUM(SAI.RECRUITMENT) FROM CAM_INSIDE.DJ_RECRUIT_AREA_INFO SAI WHERE SAI.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN) AS RECRUITMENT,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN WHERE RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND SAVE_TYPE = 'S') as APPLICATION_CNT,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT != 'S') AS DOC_SCREEN_CNT,
            (
        SELECT
            COUNT(*)
        FROM (
            SELECT
            SB.*,
            AM.RECRUIT_INFO_SN
            FROM
            CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
            JOIN
            CAM_INSIDE.DJ_APPLICATION_MAIN AM
            ON SB.APPLICATION_ID = AM.APPLICATION_ID
            WHERE
            SB.EVAL_SCREEN_TYPE = 'doc'
            GROUP BY
            SB.APPLICATION_ID
            )A
        WHERE
            IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
            ) AS DOC_SCREEN_RESULT,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N') AS IN_SCREEN_CNT,
                                                                        (
        SELECT
            COUNT(*)
        FROM (
            SELECT
            SB.*,
            AM.RECRUIT_INFO_SN,
            AM.USER_NAME
            FROM
            CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
            JOIN
            CAM_INSIDE.DJ_APPLICATION_MAIN AM
            ON SB.APPLICATION_ID = AM.APPLICATION_ID
            WHERE
            SB.EVAL_SCREEN_TYPE = 'in' AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N'
            GROUP BY
            SB.APPLICATION_ID
            )A
        WHERE
            IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
            ) AS IN_SCREEN_RESULT
        FROM
            CAM_INSIDE.DJ_RECRUIT_INFO IRI
            JOIN
            CAM_INSIDE.DJ_RECRUIT_AREA_INFO AI
        ON IRI.RECRUIT_INFO_SN = AI.RECRUIT_INFO_SN
            LEFT JOIN CAM_INSIDE.DJ_APPLICATION_MAIN AAA
            ON IRI.RECRUIT_INFO_SN = AAA.RECRUIT_INFO_SN
        WHERE
            1=1
          AND
            IRI.ACTIVE = 'Y'
          AND
            IRI.RECRUIT_STATUS_SN IN ('2', '3', '4', 'E')
        GROUP BY IRI.RECRUIT_INFO_SN
        ORDER BY IRI.REG_DT DESC
        LIMIT 3
    </select>

    <select id="getSnsPosts" resultType="map" parameterType="map">
        /*selectPrBoardList*/
        SELECT
        *,
        (SELECT CONCAT(file_path, file_uuid) FROM cam_common.dj_file_info WHERE fr_key = board_article_id AND file_cd = 'sns') AS FILE_PATH
        FROM (
        SELECT
        DBA.*,
        ROW_NUMBER() OVER (PARTITION BY SNS_TYPE ORDER BY REG_DATE DESC) AS rn
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE DBA
        WHERE
            BOARD_CATEGORY_ID = 'sns'
        AND ACTIVE = 'Y'
        ) AS RankedData
        WHERE <![CDATA[ rn <= 3 ]]>
        ORDER BY rn, SNS_TYPE, REG_DATE DESC;
    </select>

    <select id="getRecruitmentList" resultType="egovframework.com.devjitsu.hp.board.util.PostResponse" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*getRecruitmentList*/
        SELECT
        IRI.*,
        AAA.USER_NAME,
        GROUP_CONCAT(DISTINCT AI.CAREER_TYPE) AS CAREER_TYPE,
        (SELECT SUM(SAI.RECRUITMENT) FROM CAM_INSIDE.DJ_RECRUIT_AREA_INFO SAI WHERE SAI.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN) AS RECRUITMENT,
        (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN WHERE RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND SAVE_TYPE = 'S') as APPLICATION_CNT,
        (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT != 'S') AS DOC_SCREEN_CNT,
        (
        SELECT
        COUNT(*)
        FROM (
        SELECT
        SB.*,
        AM.RECRUIT_INFO_SN
        FROM
        CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
        JOIN
        CAM_INSIDE.DJ_APPLICATION_MAIN AM
        ON SB.APPLICATION_ID = AM.APPLICATION_ID
        WHERE
        SB.EVAL_SCREEN_TYPE = 'doc'
        GROUP BY
        SB.APPLICATION_ID
        )A
        WHERE
        IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
        ) AS DOC_SCREEN_RESULT,
        (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N') AS IN_SCREEN_CNT,
        (
        SELECT
        COUNT(*)
        FROM (
        SELECT
        SB.*,
        AM.RECRUIT_INFO_SN,
        AM.USER_NAME
        FROM
        CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
        JOIN
        CAM_INSIDE.DJ_APPLICATION_MAIN AM
        ON SB.APPLICATION_ID = AM.APPLICATION_ID
        WHERE
        SB.EVAL_SCREEN_TYPE = 'in' AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N'
        GROUP BY
        SB.APPLICATION_ID
        )A
        WHERE
        IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
        ) AS IN_SCREEN_RESULT
        FROM
        CAM_INSIDE.DJ_RECRUIT_INFO IRI
        JOIN
        CAM_INSIDE.DJ_RECRUIT_AREA_INFO AI
        ON IRI.RECRUIT_INFO_SN = AI.RECRUIT_INFO_SN
        LEFT JOIN CAM_INSIDE.DJ_APPLICATION_MAIN AAA
        ON IRI.RECRUIT_INFO_SN = AAA.RECRUIT_INFO_SN
        WHERE
        1=1
        AND
            IRI.ACTIVE = 'Y'
        AND
            IRI.RECRUIT_STATUS_SN IN ('2', '3', '4', '5', 'E')
        <if test="searchInput != null and searchInput != ''">
            AND
            IRI.RECRUIT_TITLE LIKE CONCAT('%', #{searchInput}, '%')
        </if>
        GROUP BY IRI.RECRUIT_INFO_SN
        ORDER BY IRI.REG_DT DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="getRecruitmentListCount" resultType="int" parameterType="egovframework.com.devjitsu.hp.board.util.ArticlePage">
        /*getRecruitmentListCount*/
        SELECT COUNT(*) AS cnt
        FROM (
                 SELECT
                     IRI.*,
                     AAA.USER_NAME,
                     GROUP_CONCAT(DISTINCT AI.CAREER_TYPE) AS CAREER_TYPE,
                     (SELECT SUM(SAI.RECRUITMENT) FROM CAM_INSIDE.DJ_RECRUIT_AREA_INFO SAI WHERE SAI.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN) AS RECRUITMENT,
                     (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN WHERE RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND SAVE_TYPE = 'S') as APPLICATION_CNT,
                     (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT != 'S') AS DOC_SCREEN_CNT,
             (
                 SELECT
                     COUNT(*)
                 FROM (
                          SELECT
                              SB.*,
                              AM.RECRUIT_INFO_SN
                          FROM
                              CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
                                  JOIN
                              CAM_INSIDE.DJ_APPLICATION_MAIN AM
                              ON SB.APPLICATION_ID = AM.APPLICATION_ID
                          WHERE
                              SB.EVAL_SCREEN_TYPE = 'doc'
                          GROUP BY
                              SB.APPLICATION_ID
                      ) A
                 WHERE
                     IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
             ) AS DOC_SCREEN_RESULT,
             (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN AM WHERE AM.RECRUIT_INFO_SN = IRI.RECRUIT_INFO_SN AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N') AS IN_SCREEN_CNT,
             (
                 SELECT
                     COUNT(*)
                 FROM (
                          SELECT
                              SB.*,
                              AM.RECRUIT_INFO_SN,
                              AM.USER_NAME
                          FROM
                              CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
                                  JOIN
                              CAM_INSIDE.DJ_APPLICATION_MAIN AM
                              ON SB.APPLICATION_ID = AM.APPLICATION_ID
                          WHERE
                              SB.EVAL_SCREEN_TYPE = 'in' AND AM.SAVE_TYPE = 'S' AND AM.APPLICATION_STAT = 'I' AND AM.IN_AVOID = 'N'
                          GROUP BY
                              SB.APPLICATION_ID
                      ) A
                 WHERE
                     IRI.RECRUIT_INFO_SN = A.RECRUIT_INFO_SN
             ) AS IN_SCREEN_RESULT
            FROM
        CAM_INSIDE.DJ_RECRUIT_INFO IRI
    JOIN
        CAM_INSIDE.DJ_RECRUIT_AREA_INFO AI
        ON IRI.RECRUIT_INFO_SN = AI.RECRUIT_INFO_SN
            LEFT JOIN CAM_INSIDE.DJ_APPLICATION_MAIN AAA
            ON IRI.RECRUIT_INFO_SN = AAA.RECRUIT_INFO_SN
        WHERE
            1=1
        AND
            IRI.ACTIVE = 'Y'
        AND
            IRI.RECRUIT_STATUS_SN IN ('2', '3', '4', '5', 'E')
        <if test="searchInput != null and searchInput != ''">
            AND
            IRI.RECRUIT_TITLE LIKE CONCAT('%', #{searchInput}, '%')
        </if>
        GROUP BY IRI.RECRUIT_INFO_SN
            ) AS cnt
    </select>

    <select id="getArticleFileList" parameterType="map" resultType="map">
        /* getArticleFileList */
        SELECT
            BA.BOARD_ARTICLE_TITLE,
            BAF.*,
            BAF.FILE_UUID AS fileUUID,
            CONCAT(BAF.FILE_ORG_NAME, '.', BAF.FILE_EXT) AS filename
        FROM
            CAM_BOARD.DJ_BOARD_ARTICLE_FILE BAF
        LEFT JOIN
            CAM_BOARD.DJ_BOARD_ARTICLE BA ON BAF.BOARD_ARTICLE_ID = BA.BOARD_ARTICLE_ID
        WHERE
            BAF.BOARD_ARTICLE_ID = #{boardArticleId}
    </select>

    <select id="selectAlarmList" resultType="map" parameterType="map">
        /*selectAlarmListt*/
        SELECT
            BOARD_ARTICLE_ID
            ,BOARD_ID
            ,BOARD_CATEGORY_ID
            ,BOARD_ARTICLE_TITLE
            ,BOARD_ARTICLE_CONTENT
            ,BOARD_ARTICLE_VIEW_COUNT
            ,REG_EMP_NAME
            ,REG_DATE
            ,DATE_FORMAT(REG_DATE, '%Y-%m-%d') AS regDate
            ,CASE WHEN LOCATE('img', BOARD_ARTICLE_CONTENT) > 0
             THEN SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING(BOARD_ARTICLE_CONTENT, LOCATE('img', BOARD_ARTICLE_CONTENT)), 'src="', -1), '"', 1)
             ELSE NULL
            END AS imgSrc
        FROM
            CAM_COMMON.DJ_BOARD_ARTICLE
        WHERE
            BOARD_CATEGORY_ID = 'study'
        OR
            BOARD_CATEGORY_ID = 'partner'
        AND
            ACTIVE = 'Y'
        ORDER BY REG_DATE DESC
            LIMIT 120
    </select>
</mapper>