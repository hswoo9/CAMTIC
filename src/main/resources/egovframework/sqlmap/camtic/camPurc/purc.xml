<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="purc">

    <select id="getPurcReqList" parameterType="map" resultType="map">
        /* getPurcReqList */
        SELECT
            MP.PURC_SN,
            DATE_FORMAT(MP.PURC_REQ_DATE, '%Y. %m. %d') AS PURC_REQ_DATE,
            DI.DOC_NO,
            EI.EMP_NAME_KR,
            MP.PURC_REQ_PURPOSE,
            COUNT(CASE WHEN MPI.STATUS = 'C' THEN 1 END) AS CP_CNT,
            COUNT(CASE WHEN MPI.STATUS = 'R' THEN 1 END) AS RP_CNT,
            MP.STATUS
        FROM
            CAM_MNG.DJ_MNG_PURC MP
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
        JOIN
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
        ON MP.PURC_SN = MPI.PURC_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            MP.DOC_ID = DI.DOC_ID
        WHERE
            1=1

        <if test='searchDept != null and !"".equals(searchDept)'>
            AND MP.PURC_REQ_EMP_SEQ = #{empSeq}
        </if>

        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchKeyword},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_ITEM_NAME".equals(searchKeyword)'>
                AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                    DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                    MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                )
            </otherwise>
        </choose>
        GROUP BY MP.PURC_SN
        ORDER BY MP.PURC_REQ_DATE DESC
    </select>

    <select id="getMngReqPurcList" parameterType="map" resultType="map">
        /*getMngReqPurcList*/
        SELECT
            MP.PURC_SN,
            DI.DOC_NO,
            DATE_FORMAT(MP.PURC_REQ_DATE, '%Y. %m. %d') AS PURC_REQ_DATE,
            EI.EMP_NAME_KR,
            MP.PURC_REQ_PURPOSE,
            COUNT(CASE WHEN MPI.STATUS = 'C' THEN 1 END) AS CP_CNT,
            COUNT(CASE WHEN MPI.STATUS = 'R' THEN 1 END) AS RP_CNT,
            MP.STATUS
        FROM
            CAM_MNG.DJ_MNG_PURC MP
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
        JOIN
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
        ON MP.PURC_SN = MPI.PURC_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            MP.DOC_ID = DI.DOC_ID
        WHERE 1=1
            AND
            MP.DOC_STATUS = 100
            <if test='searchDept != null and !"".equals(searchDept)'>
                AND MP.PURC_REQ_EMP_SEQ = #{empSeq}
            </if>

            <choose>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                    AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchKeyword},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_ITEM_NAME".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <otherwise>
                    AND
                    (
                    DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                    MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                    )
                </otherwise>
            </choose>
            GROUP BY MP.PURC_SN
            ORDER BY MP.PURC_REQ_DATE DESC
    </select>

    <insert id="setPurcReq" parameterType="map">
        /* setPurcReq */
        INSERT INTO CAM_MNG.DJ_MNG_PURC
        (
            PURC_REQ_DATE,
            PURC_REQ_EMP_SEQ,
            PURC_REQ_DEPT_SEQ,
            PURC_REQ_PURPOSE,
            PURC_TYPE,
            PJT_SN,
            PJT_NM,
            STATUS,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{purcReqDate},
            #{purcReqEmpSeq},
            #{purcReqDeptSeq},
            #{purcReqPurpose},
            #{purcType},
            #{pjtSn},
            #{pjtNm},
            #{status},
            #{empSeq}
        )
        <selectKey keyProperty="purcSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_MNG_PURC'
        </selectKey>
    </insert>

    <update id="setPurcReqUpd" parameterType="map">
        /* setPurcReqUpd */
        UPDATE
            CAM_MNG.DJ_MNG_PURC
        SET
            PJT_SN = #{pjtSn},
            PJT_NM = #{pjtNm},
            PURC_REQ_DATE = #{purcReqDate},
            PURC_REQ_PURPOSE = #{purcReqPurpose},
            PURC_TYPE = #{purcType},
            MOD_EMP_SEQ = #{empSeq},
            STATUS = #{status},
            MOD_DATE = NOW()
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <insert id="setPurcItem" parameterType="map">
        /* setPurcItem */
        INSERT INTO CAM_MNG.DJ_MNG_PURC_ITEM
            (
                PURC_SN,
                PURC_ITEM_TYPE,
                PRODUCT_A,
                PRODUCT_B,
                PRODUCT_C,
                PURC_ITEM_NAME,
                PURC_ITEM_STD,
                PURC_ITEM_UNIT_PRICE,
                PURC_ITEM_QTY,
                PURC_ITEM_UNIT,
                PURC_ITEM_AMT,
                CRM_SN,
                RMK,
                STATUS,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{purcSn},
                #{purcItemType},
                #{productA},
                #{productB},
                #{productC},
                #{purcItemName},
                #{purcItemStd},
                #{purcItemUnitPrice},
                #{purcItemQty},
                #{purcItemUnit},
                #{purcItemAmt},
                #{crmSn},
                #{rmk},
                #{status},
                #{empSeq}
            )
    </insert>

    <update id="setPurcItemUpd" parameterType="map">
        /* setPurcItemUpd */
        UPDATE
            CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            PURC_ITEM_TYPE = #{purcItemType},
            PRODUCT_A = #{productA},
            PRODUCT_B = #{productB},
            PRODUCT_C = #{productC},
            PURC_ITEM_NAME = #{purcItemName},
            PURC_ITEM_STD = #{purcItemStd},
            PURC_ITEM_UNIT_PRICE = #{purcItemUnitPrice},
            PURC_ITEM_QTY = #{purcItemQty},
            PURC_ITEM_UNIT = #{purcItemUnit},
            PURC_ITEM_AMT = #{purcItemAmt},
            CRM_SN = #{crmSn},
            RMK = #{rmk},
            STATUS = #{status},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            PURC_ITEM_SN = #{purcItemSn}
    </update>

    <select id="getPurcReq" parameterType="map" resultType="map">
        /* getPurcReq */
        SELECT
            MP.*,
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            EI.DEPT_SEQ,
            DI.DOC_NO,
            CAM_HR.FN_GetName('DEPT', EI.DEPT_SEQ, NULL) AS DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_MNG.DJ_MNG_PURC MP
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            MP.DOC_ID = DI.DOC_ID
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getPurcItemList" parameterType="map" resultType="map">
        /* getPurcItemList */
        SELECT
            MPI.PURC_ITEM_SN,
            MPI.PRODUCT_A,
            MPI.PRODUCT_B,
            MPI.PRODUCT_C,
            MPI.PURC_ITEM_TYPE,
            MPI.PURC_ITEM_NAME,
            MPI.PURC_ITEM_STD,
            MPI.PURC_ITEM_UNIT_PRICE,
            MPI.PURC_ITEM_QTY,
            MPI.PURC_ITEM_UNIT,
            MPI.PURC_ITEM_AMT,
            MPI.RMK,
            MPI.STATUS,
            CI.CRM_SN,
            CI.CRM_NM,
            FORMAT(PURC_ITEM_UNIT_PRICE , 0) AS PURC_ITEM_UNIT_PRICE_COMMA,
            FORMAT(PURC_ITEM_AMT , 0) AS PURC_ITEM_AMT_COMMA
        FROM
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON MPI.CRM_SN = CI.CRM_SN
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getPurcClaimItemList" parameterType="map" resultType="map">
        /*getPurcClaimItemList*/
        SELECT
            *,
            FORMAT(ITEM_UNIT_AMT , 0) AS ITEM_UNIT_AMT_COMMA,
            FORMAT(ITEM_AMT , 0) AS ITEM_AMT_COMMA
        FROM
            CAM_MNG.DJ_PURC_CLAIM_ITEM
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getPurcClaimItemAmtTotal" parameterType="map" resultType="map">
        /* getPurcItemList A합계 B세액 C소계 */
        SELECT
            IFNULL(FORMAT(SUM(ITEM_AMT) , 0), 0) AS TOTAL_SUM_COMMA_A,
            IFNULL(FORMAT(SUM(ITEM_AMT)/10 , 0), 0) AS TOTAL_SUM_COMMA_B,
            IFNULL(FORMAT((SUM(ITEM_AMT)) - (SUM(ITEM_AMT)/10) , 0), 0) AS TOTAL_SUM_COMMA_C
        FROM
            CAM_MNG.DJ_PURC_CLAIM_ITEM MPI
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getPurcItemAmtTotal" parameterType="map" resultType="map">
        /* getPurcItemList */
        SELECT
            IFNULL(FORMAT(SUM(PURC_ITEM_AMT) , 0), 0) AS TOTAL_SUM_COMMA
        FROM
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
                LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON MPI.CRM_SN = CI.CRM_SN
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getPurcReqFileInfo" parameterType="map" resultType="map">
        /* getPurcReqFileInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
    </select>

    <update id="updatePurcApprStat" parameterType="map">
        /* updatePurcApprStat */
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updatePurcFinalApprStat" parameterType="map">
        /* updatePurcFinalApprStat */
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            STATUS = 'C',
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updateClaimApprStat" parameterType="map">
        /* updateClaimApprStat */
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updateClaimFinalApprStat" parameterType="map">
        /* updateClaimFinalApprStat */
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updPurcItemStat" parameterType="map">
        /*updPurcItemStat*/
        UPDATE CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            STATUS = 'R'
        WHERE
            PURC_ITEM_SN = #{purcItemSn}
    </update>

    <insert id="insPurcClaimItem" parameterType="map">
        /*insPurcClaimItem*/
        INSERT CAM_MNG.DJ_PURC_CLAIM_ITEM
            (
                CLAIM_SN,
                ITEM_NM,
                ITEM_STD,
                ITEM_EA,
                ITEM_UNIT_AMT,
                ITEM_UNIT,
                ITEM_AMT,
                ITEM_ETC,
                PROD_CD,
                PROD_SN
            )
        VALUES
            (
                #{claimSn},
                #{itemNm},
                #{itemStd},
                #{itemEa},
                #{itemUnitAmt},
                #{itemUnit},
                #{itemAmt},
                #{itemEtc},
                #{prodCd},
                #{prodSn}
            )
    </insert>

    <update id="updPurcClaimItem" parameterType="map">
        /*updPurcClaimItem*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM_ITEM
        SET
            ITEM_NM = #{itemNm},
            ITEM_STD = #{itemStd},
            ITEM_EA = #{itemEa},
            ITEM_UNIT_AMT = #{itemUnitAmt},
            ITEM_UNIT = #{itemUnit},
            ITEM_AMT = #{itemAmt},
            ITEM_ETC = #{itemEtc},
            PROD_CD = #{prodCd},
            PROD_SN = #{prodSn}
        WHERE
            CLAIM_ITEM_SN = #{claimItemSn}
    </update>

    <select id="getPurcClaimData" parameterType="map" resultType="map">
        /*getPurcClaimData*/
        SELECT
            A.*,
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            EI.DEPT_SEQ,
            DI.DOC_NO,
            CAM_HR.FN_GetName('DEPT', EI.DEPT_SEQ, NULL) AS DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON A.CLAIM_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
        WHERE
            1=1
            <if test='(claimSn == null or "".equals(claimSn)) and (purcSn == null or "".equals(purcSn))'>
                AND
                    PURC_SN = NULL
            </if>
            <if test='claimSn != null and !"".equals(claimSn)'>
               AND
                    CLAIM_SN = #{claimSn}
            </if>
            <if test='purcSn != null and !"".equals(purcSn)'>
                AND
                    PURC_SN = #{purcSn}
            </if>

    </select>

    <insert id="insPurcClaimData" parameterType="map">
        /*insPurcClaimData*/
        INSERT INTO CAM_MNG.DJ_PURC_CLAIM
            (
                PURC_SN,
                CLAIM_EMP_SEQ,
                PURC_EMP_SEQ,
                PURC_TYPE,
                EXP_TYPE,
                PJT_SN,
                PJT_NM,
                CLAIM_DE,
                EXP_DE,
                CLAIM_TITLE,
                PURC_REQ_PURPOSE,
                CRM_SN,
                CRM_NM,
                VAT,
                EST_AMT,
                VAT_AMT,
                TOT_AMT
            )
        VALUES
            (
                <if test="purcSn != null and !purcSn.equals('')">
                    #{purcSn},
                </if>
                <if test="purcSn == null or purcSn.equals('')">
                    NULL,
                </if>
                #{loginEmpSeq},
                #{purcEmpSeq},
                #{purcType},
                #{expType},
                #{pjtSn},
                #{pjtNm},
                #{claimDe},
                #{expDe},
                #{claimTitle},
                #{purcReqPurpose},
                #{crmSn},
                #{crmNm},
                #{vat},
                #{estAmt},
                #{vatAmt},
                #{totAmt}
            )
        <selectKey keyProperty="claimSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PURC_CLAIM'
        </selectKey>
    </insert>

    <update id="updPurcClaimData" parameterType="map">
        /*updPurcClaimData*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            <if test="purcSn != null and !purcSn.equals('')">
                PURC_SN = #{purcSn},
            </if>
            <if test="purcSn == null or purcSn.equals('')">
                PURC_SN = NULL,
            </if>
            CLAIM_EMP_SEQ = #{loginEmpSeq},
            PURC_EMP_SEQ = #{purcEmpSeq},
            PURC_TYPE = #{purcType},
            EXP_TYPE = #{expType},
            PJT_SN = #{pjtSn},
            PJT_NM = #{pjtNm},
            CLAIM_DE = #{claimDe},
            EXP_DE = #{expDe},
            CLAIM_TITLE = #{claimTitle},
            PURC_REQ_PURPOSE = #{purcReqPurpose},
            CRM_SN = #{crmSn},
            CRM_NM = #{crmNm},
            VAT = #{vat},
            EST_AMT = #{estAmt},
            VAT_AMT = #{vatAmt},
            TOT_AMT = #{totAmt}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <delete id="delPurcClaimItem" parameterType="map">
        /*delPurcClaimItem*/
        DELETE FROM CAM_MNG.DJ_PURC_CLAIM_ITEM
        WHERE
            CLAIM_SN = #{claimSn}
    </delete>

    <delete id="delPurcItem" parameterType="map">
        /*delPurcItem*/
        DELETE FROM CAM_MNG.DJ_MNG_PURC_ITEM
        WHERE
            PURC_SN = #{purcSn}
    </delete>

    <select id="getPurcClaimList" parameterType="map" resultType="map">
        /*getPurcClaimList*/
        SELECT
            A.CLAIM_SN,
            A.PURC_SN,
            A.PURC_TYPE,
            A.CLAIM_DE,
            A.EXP_DE,
            A.CLAIM_TITLE,
            A.CRM_NM,
            A.TOT_AMT,
            B.EMP_NAME_KR AS CLAIM_EMP_NAME,
            CAM_HR.FN_GetName('DEPT', B.DEPT_SEQ, NULL) AS CLAIM_DEPT_NAME,
            D.EMP_NAME_KR AS PURC_EMP_NAME,
            CAM_HR.FN_GetName('DEPT', D.DEPT_SEQ, NULL) AS PURC_DEPT_NAME,
            C.DELV_DE,
            DI.DOC_NO,
            A.STATUS
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B
        ON
            A.CLAIM_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO D
        ON
            A.PURC_EMP_SEQ = D.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
    </select>
</mapper>