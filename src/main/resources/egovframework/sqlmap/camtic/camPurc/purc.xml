<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="purc">

    <select id="getPurcReqList" parameterType="map" resultType="map">
        /* getPurcReqList */
        SELECT
            RE.*,
            IFNULL((SELECT SUM(PURC_ITEM_AMT) FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = RE.PURC_SN AND CLAIM_STAT = 'Y' ), 0) AS PURC_ITEM_AMT_SUM,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = RE.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = RE.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "") AS EXNP_DOC_STATUS
        FROM (
            SELECT
            MP.PURC_SN,
            PC.CLAIM_SN,
            MP.PJT_UNIT_SN,
            MP.UNIT_CRM_SN,
            DATE_FORMAT(MP.PURC_REQ_DATE, '%Y. %m. %d') AS PURC_REQ_DATE,
            DI.DOC_NO,
            EI.EMP_NAME_KR,
            MP.PURC_REQ_PURPOSE,
            MP.PAYMENT_METHOD,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = MP.PURC_SN AND CLAIM_STAT = 'N') AS CP_CNT,
            COUNT(CASE WHEN MPI.STATUS = 'R' THEN 1 END) AS RP_CNT,
            MP.STATUS,
            MP.DOC_STATUS,
            IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
            CASE WHEN PC.CLAIM_SN IS NULL THEN 'CN'
            WHEN PC.CLAIM_SN IS NOT NULL AND PC.DOC_ID IS NULL THEN 'CAN'
            WHEN PC.CLAIM_SN IS NOT NULL AND PC.DOC_ID IS NOT NULL AND PC.STATUS != '100' AND PC.STATUS != '101' THEN
            'CAYSN'
            WHEN PC.CLAIM_SN IS NOT NULL AND PC.DOC_ID IS NOT NULL AND (PC.STATUS = '100' OR PC.STATUS = '101') THEN 'CAYSY'
            ELSE '' END CLAIM_STATUS,
            IFNULL(PC.ORDER_DT, "") AS ORDER_DT,
            MP.INSPECT_STATUS,
            MP.INSPECT_YN,
            PA.PAY_APP_SN,
            PA.DOC_STATUS AS PAY_DOC_STATUS,
            PC.PRI_PAY
            FROM
            CAM_MNG.DJ_MNG_PURC MP
            JOIN
            CAM_HR.DJ_EMP_INFO EI
            ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
            JOIN
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
            ON MP.PURC_SN = MPI.PURC_SN
            LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
            ON MP.DOC_ID = DI.DOC_ID
            LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM PC
            ON MP.PURC_SN = PC.PURC_SN
            LEFT JOIN
            CAM_MNG.DJ_PAY_APP PA
            ON PA.LINK_KEY = MP.PURC_SN
            WHERE
            1=1

            <if test='searchDept != null and !"".equals(searchDept)'>
                AND MP.PURC_REQ_EMP_SEQ = #{empSeq}
            </if>
            <if test='pjtSn != null and !"".equals(pjtSn)'>
                AND MP.PJT_SN = #{pjtSn}
            </if>

            <choose>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                    AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchKeyword},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_ITEM_NAME".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <otherwise>
                    AND
                    (
                    DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                    MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                    )
                </otherwise>
            </choose>

            <choose>
                <when test='"1".equals(inspectStat)'>
                    AND MP.INSPECT_YN = 'N'
                </when>
                <when test='"2".equals(inspectStat)'>
                    AND MP.INSPECT_YN = 'Y' AND INSPECT_STATUS = '0'
                </when>
                <when test='"3".equals(inspectStat)'>
                    AND MP.INSPECT_YN = 'Y' AND INSPECT_STATUS = '100'
                </when>
            </choose>
            GROUP BY MP.PURC_SN
            ORDER BY MP.PURC_SN DESC
        ) RE
    </select>

    <select id="getPjtPurcItemList" parameterType="map" resultType="map">
        /* getPjtPurcItemList */
        SELECT
            PCI.ITEM_NM,
            PCI.ITEM_STD,
            PCI.ITEM_EA,
            PCI.ITEM_UNIT,
            PCI.ITEM_UNIT_AMT,
            PCI.ITEM_AMT,
            CI.CRM_NM,
            PCI.ITEM_ETC,
            DI.DOC_NO,
            PC.INSPECT_STATUS,
            PC.INSPECT_YN
        FROM
            CAM_MNG.DJ_PURC_CLAIM PC
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PC.CLAIM_SN = PCI.CLAIM_SN
        LEFT JOIN
            CAM_MNG.DJ_MNG_PURC MP ON MP.PURC_SN = PC.PURC_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI ON PC.CRM_SN = CI.CRM_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON PC.DOC_ID = DI.DOC_ID
        WHERE
            PC.PJT_SN = #{pjtSn}
    </select>

    <select id="getMngReqPurcList" parameterType="map" resultType="map">
        /*getMngReqPurcList*/
        SELECT SS.* FROM (
            SELECT
                MP.PURC_SN,
                DI.DOC_NO,
                DATE_FORMAT(MP.PURC_REQ_DATE, '%Y. %m. %d') AS PURC_REQ_DATE,
                EI.DEPT_NAME,
                EI.EMP_NAME_KR,
                MP.PURC_REQ_PURPOSE,
                DP.BUSN_CLASS,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = MP.PURC_SN AND CLAIM_STAT = 'N') AS CP_CNT,
                COUNT(CASE WHEN MPI.STATUS = 'R' THEN 1 END) AS RP_CNT,
                MP.STATUS,
                MC.STATUS AS MC_STATUS,
                MC.DOC_ID AS MC_DOC_ID,
                MDI.APPRO_KEY AS MC_APPRO_KEY,
                MDI.DOC_MENU_CD AS MC_DOC_MENU_CD,
                MC.INSPECT_YN,
                MC.INSPECT_STATUS
            FROM
                CAM_MNG.DJ_MNG_PURC MP
            JOIN
                CAM_HR.DJ_EMP_INFO EI
            ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
            JOIN
                (SELECT * FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE CLAIM_STAT = 'N') MPI
            ON MP.PURC_SN = MPI.PURC_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI
            ON MP.DOC_ID = DI.DOC_ID
            LEFT JOIN
                CAM_PJT_MNG.DJ_PROJECT DP
            ON MP.PJT_SN = DP.PJT_SN
            LEFT JOIN
                CAM_MNG.DJ_PURC_CLAIM MC
            ON MP.PURC_SN = MC.PURC_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO MDI
            ON MC.DOC_ID = MDI.DOC_ID
        WHERE 1=1
        AND
            MP.DOC_STATUS = 100 AND (MDI.APPRO_KEY IS NULL OR MPI.PURC_SN IS NOT NULL)
            <if test='searchDept != null and !"".equals(searchDept)'>
            AND  MP.PURC_REQ_EMP_SEQ = #{empSeq}
            </if>
            <choose>
                <when test='busnClass != null and !"".equals(busnClass) and "C".equals(busnClass)'>
                    AND DP.BUSN_CLASS IS NULL
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "R".equals(busnClass)'>
                    AND DP.BUSN_CLASS = 'R'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "S".equals(busnClass)'>
                    AND DP.BUSN_CLASS = 'S'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "D".equals(busnClass)'>
                    AND DP.BUSN_CLASS = 'D'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "V".equals(busnClass)'>
                    AND DP.BUSN_CLASS = 'V'
                </when>
            </choose>
            <choose>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                    AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_ITEM_NAME".equals(searchKeyword)'>
                    AND MPI.PURC_ITEM_NAME LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PJT_NM".equals(searchKeyword)'>
                    AND MP.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <otherwise>
                    AND
                    (
                        DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                        MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                        MPI.PURC_ITEM_NAME LIKE CONCAT('%',#{searchValue},'%') OR
                        MP.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
                    )
                </otherwise>
            </choose>
            <choose>
                <when test='"1".equals(inspectStat)'>
                    AND MC.INSPECT_YN = 'N'
                </when>
                <when test='"2".equals(inspectStat)'>
                    AND MC.INSPECT_YN = 'Y' AND MC.INSPECT_STATUS = '0'
                </when>
                <when test='"3".equals(inspectStat)'>
                    AND MC.INSPECT_YN = 'Y' AND MC.INSPECT_STATUS = '100'
                </when>
            </choose>
            GROUP BY MP.PURC_SN
            ORDER BY MP.PURC_SN DESC
        ) SS
        WHERE SS.CP_CNT != SS.RP_CNT
    </select>

    <insert id="setPurcReq" parameterType="map">
        /* setPurcReq */
        INSERT INTO CAM_MNG.DJ_MNG_PURC
        (
            PURC_REQ_DATE,
            PURC_REQ_EMP_SEQ,
            PURC_REQ_DEPT_SEQ,
            PURC_REQ_PURPOSE,
            PURC_TYPE,
            PJT_SN,
            PJT_NM,
            PAYMENT_METHOD,
            PURC_LINK,
            VAT,
            STATUS,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{purcReqDate},
            #{purcReqEmpSeq},
            #{purcReqDeptSeq},
            #{purcReqPurpose},
            #{purcType},
            #{pjtSn},
            #{pjtNm},
            #{paymentMethod},
            #{purcLink},
            #{vat},
            #{status},
            #{empSeq}
        )
        <selectKey keyProperty="purcSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_MNG_PURC'
        </selectKey>
    </insert>

    <update id="setPurcReqUpd" parameterType="map">
        /* setPurcReqUpd */
        UPDATE
            CAM_MNG.DJ_MNG_PURC
        SET
            PJT_SN = #{pjtSn},
            PJT_NM = #{pjtNm},
            PURC_REQ_DATE = #{purcReqDate},
            PURC_REQ_PURPOSE = #{purcReqPurpose},
            PURC_TYPE = #{purcType},
            PAYMENT_METHOD = #{paymentMethod},
            PURC_LINK = #{purcLink},
            VAT = #{vat},
            MOD_EMP_SEQ = #{empSeq},
            STATUS = #{status},
            MOD_DATE = NOW()
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <insert id="setPurcItem" parameterType="map">
        /* setPurcItem */
        INSERT INTO CAM_MNG.DJ_MNG_PURC_ITEM
            (
                PURC_SN,
                PURC_ITEM_TYPE,
                PRODUCT_A,
                PRODUCT_B,
                PRODUCT_C,
                PURC_ITEM_NAME,
                PURC_ITEM_STD,
                PURC_ITEM_UNIT_PRICE,
                PURC_ITEM_QTY,
                PURC_ITEM_UNIT,
                PURC_ITEM_AMT,
                CRM_SN,
                DISCOUNT_AMT,
                RMK,
                STATUS,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{purcSn},
                #{purcItemType},
                #{productA},
                #{productB},
                #{productC},
                #{purcItemName},
                #{purcItemStd},
                #{purcItemUnitPrice},
                #{purcItemQty},
                #{purcItemUnit},
                #{purcItemAmt},
                #{crmSn},
                #{discountAmt},
                #{rmk},
                #{status},
                #{empSeq}
            )
    </insert>

    <update id="setPurcItemUpd" parameterType="map">
        /* setPurcItemUpd */
        UPDATE
            CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            PURC_ITEM_TYPE = #{purcItemType},
            PRODUCT_A = #{productA},
            PRODUCT_B = #{productB},
            PRODUCT_C = #{productC},
            PURC_ITEM_NAME = #{purcItemName},
            PURC_ITEM_STD = #{purcItemStd},
            PURC_ITEM_UNIT_PRICE = #{purcItemUnitPrice},
            PURC_ITEM_QTY = #{purcItemQty},
            PURC_ITEM_UNIT = #{purcItemUnit},
            PURC_ITEM_AMT = #{purcItemAmt},
            CRM_SN = #{crmSn},
            RMK = #{rmk},
            STATUS = #{status},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            PURC_ITEM_SN = #{purcItemSn}
    </update>

    <select id="getPurcReq" parameterType="map" resultType="map">
        /* getPurcReq */
        SELECT
            MP.*,
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            EI.DEPT_SEQ,
            DI.DOC_NO,
            CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)), ' ', (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)) AS DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            IFNULL((SELECT BUSN_CLASS FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = MP.PJT_SN), '') AS BUSN_CLASS,
            IFNULL((SELECT SUM(PURC_ITEM_AMT) FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = MP.PURC_SN), 0) AS PURC_ITEM_AMT_SUM
        FROM
            CAM_MNG.DJ_MNG_PURC MP
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON MP.PURC_REQ_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            MP.DOC_ID = DI.DOC_ID
        WHERE
            PURC_SN = #{purcSn}
        <if test='pjtSn != null and !"".equals(pjtSn)'>
            AND MP.PURC_REQ_EMP_SEQ = #{empSeq}
        </if>
    </select>

    <select id="getPurcItemList" parameterType="map" resultType="map">
        /* getPurcItemList */
        SELECT
            MPI.PURC_ITEM_SN,
            MPI.PRODUCT_A,
            MPI.PRODUCT_B,
            MPI.PRODUCT_C,
            MPI.PURC_ITEM_TYPE,
            MPI.PURC_ITEM_NAME,
            MPI.PURC_ITEM_STD,
            MPI.PURC_ITEM_UNIT_PRICE,
            MPI.PURC_ITEM_QTY,
            MPI.PURC_ITEM_UNIT,
            MPI.PURC_ITEM_AMT,
            MPI.RMK,
            MPI.STATUS,
            MPI.CLAIM_STAT,
            MPI.DISCOUNT_AMT,
            CI.CRM_SN,
            CI.CRM_NM,
            CI.MON_CHECK,
            REPLACE(CI.CRM_NO,'-','') AS CRM_NO_TMP,
            CI.CRM_BN,
            CI.CRM_BN_NUM,
            CI.BN_DEPO,
            FORMAT(PURC_ITEM_UNIT_PRICE , 0) AS PURC_ITEM_UNIT_PRICE_COMMA,
            FORMAT(PURC_ITEM_AMT , 0) AS PURC_ITEM_AMT_COMMA
        FROM
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON MPI.CRM_SN = CI.CRM_SN
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getPurcClaimItemList" parameterType="map" resultType="map">
        /*getPurcClaimItemList*/
        SELECT
            A.*,
            CI.CRM_SN,
            CI.CRM_NM,
            REPLACE(CI.CRM_NO,'-','') AS CRM_NO_TMP,
            CI.CRM_BN,
            CI.CRM_BN_NUM,
            CI.BN_DEPO,
            FORMAT(A.ITEM_UNIT_AMT , 0) AS ITEM_UNIT_AMT_COMMA,
            FORMAT(A.ITEM_AMT , 0) AS ITEM_AMT_COMMA
        FROM
            CAM_MNG.DJ_PURC_CLAIM_ITEM A
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM B ON A.CLAIM_SN = B.CLAIM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI ON B.CRM_SN = CI.CRM_SN
        WHERE
            A.CLAIM_SN = #{claimSn}
    </select>

    <select id="getPurcClaimItemData" parameterType="map" resultType="map">
        /*getPurcClaimItemData*/
        SELECT
            PC.CLAIM_DE,
            PC.PURC_SN,
            PC.CRM_SN,
            PC.CRM_NM,
            PCI.*
        FROM
            CAM_MNG.DJ_PURC_CLAIM PC
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PC.CLAIM_SN = PCI.CLAIM_SN
        WHERE
            CLAIM_ITEM_SN = #{claimItemSn}
    </select>

    <select id="getPurcClaimItemAmtTotal" parameterType="map" resultType="map">
        /* getPurcItemList A합계 B세액 C소계 */
        SELECT
            IFNULL(FORMAT(MPI.TOT_AMT , 0), 0) AS TOTAL_SUM_COMMA_A,
            IFNULL(FORMAT(MPI.VAT_AMT , 0), 0) AS TOTAL_SUM_COMMA_B,
            IFNULL(FORMAT(MPI.EST_AMT , 0), 0) AS TOTAL_SUM_COMMA_C,
            IFNULL(FORMAT(MPI.DISCOUNT_AMT, 0), 0) AS DISCOUNT_AMT
        FROM
            CAM_MNG.DJ_PURC_CLAIM MPI
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getPurcItemAmtTotal" parameterType="map" resultType="map">
        /* getPurcItemAmtTotal */
        SELECT
            IFNULL(FORMAT(SUM(PURC_ITEM_AMT) , 0), 0) AS TOTAL_SUM_COMMA,
            REPLACE(IFNULL(FORMAT(SUM(PURC_ITEM_AMT) , 0), 0), ',','') AS TOTAL_SUM_UNCOMMA,
            (SELECT DISCOUNT_AMT FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN = MPI.PURC_SN) AS DISCOUNT_AMT
        FROM
            CAM_MNG.DJ_MNG_PURC_ITEM MPI
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
        ON MPI.CRM_SN = CI.CRM_SN
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getPurcReqFileInfo" parameterType="map" resultType="map">
        /* getPurcReqFileInfo */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
        ORDER BY REG_DATE DESC
    </select>

    <select id="getClaimExnpFileList" parameterType="map" resultType="map">
        /* getClaimExnpFileList */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            (CONTENT_ID = (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn})
                AND FILE_CD = 'payClaim')
            OR
            (CONTENT_ID LIKE CONCAT('payClaim_', (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn}))
                <if test='fileCtrl != null and !"".equals(fileCtrl)'>
                     AND FILE_CD IN ('etax')
                </if>
                <if test='fileCtrl == null and "".equals(fileCtrl)'>
                    AND FILE_CD IN ('etax','useCard')
                </if>
            )
        ORDER BY REG_DATE DESC
    </select>

    <update id="setPurcFileDocNm" parameterType="map">
        /* setPurcFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{file_no}
    </update>

    <update id="updatePurcApprStat" parameterType="map">
        /* updatePurcApprStat */
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            DOC_STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updatePurcFinalApprStat" parameterType="map">
        /* updatePurcFinalApprStat */
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            STATUS = 'C',
            DOC_STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updatePurcListFinalApprStat" parameterType="map">
        /* updatePurcListFinalApprStat */
        UPDATE CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            STATUS = 'C'
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updateClaimApprStat" parameterType="map">
        /* updateClaimApprStat */
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updateClaimFinalApprStat" parameterType="map">
        /* updateClaimFinalApprStat */
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updPurcItemStat" parameterType="map">
        /*updPurcItemStat*/
        UPDATE CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            STATUS = 'R'
        WHERE
            PURC_ITEM_SN = #{purcItemSn}
    </update>

    <insert id="insPurcClaimItem" parameterType="map">
        /*insPurcClaimItem*/
        INSERT CAM_MNG.DJ_PURC_CLAIM_ITEM
            (
                CLAIM_SN,
                PURC_ITEM_TYPE,
                PRODUCT_A,
                PRODUCT_B,
                PRODUCT_C,
                ITEM_NM,
                ITEM_STD,
                ITEM_EA,
                ITEM_UNIT_AMT,
                ITEM_UNIT,
                ITEM_AMT,
                PURC_SUP_AMT,
                PURC_VAT_AMT,
                PURC_ITEM_AMT,
                DIF_AMT,
                ITEM_ETC,
                PROD_CD,
                PROD_SN
            )
        VALUES
            (
                #{claimSn},
                #{purcItemType},
                #{productA},
                #{productB},
                #{productC},
                #{itemNm},
                #{itemStd},
                #{itemEa},
                #{itemUnitAmt},
                #{itemUnit},
                #{itemAmt},
                #{purcSupAmt},
                #{purcVatAmt},
                #{purcItemAmt},
                #{difAmt},
                #{itemEtc},
                #{prodCd},
                #{prodSn}
            )
    </insert>

    <update id="updPurcClaimItem" parameterType="map">
        /*updPurcClaimItem*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM_ITEM
        SET
            ITEM_NM = #{itemNm},
            ITEM_STD = #{itemStd},
            ITEM_EA = #{itemEa},
            ITEM_UNIT_AMT = #{itemUnitAmt},
            ITEM_UNIT = #{itemUnit},
            ITEM_AMT = #{itemAmt},
            ITEM_ETC = #{itemEtc},
            PROD_CD = #{prodCd},
            PROD_SN = #{prodSn}
        WHERE
            CLAIM_ITEM_SN = #{claimItemSn}
    </update>

    <select id="getClaimData" parameterType="map" resultType="map">
        /*getClaimData*/
        SELECT
            A.*,
            (SELECT PJT_CD FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = A.PJT_SN) AS PJT_CD,
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            EI.DEPT_SEQ,
            DI.DOC_NO,
        CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)), ' ', (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)) AS DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON
            A.CLAIM_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
        WHERE
        1=1
        <if test='claimSn != null and !"".equals(claimSn)'>
            AND
                CLAIM_SN = #{claimSn}
        </if>
    </select>

    <select id="getPurcClaimData" parameterType="map" resultType="map">
        /*getPurcClaimData*/
        SELECT
            A.*,
            B.EMAIL AS CRM_EMAIL,
            B.TEL_NUM AS CRM_TEL_NUM,
            B.FAX AS CRM_FAX_NUM,
            B.MON_CHECK,
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            EI.DEPT_SEQ,
            EI.OFFICE_TEL_NUM,
            scp.dec_b64('KEY1', EI.MOBILE_TEL_NUM) AS MOBILE_TEL_NUM,
            scp.dec_b64('KEY1', EI.EMAIL_ADDR) AS EMAIL_ADDR,
            EI2.EMP_SEQ AS CLAIM_EMP_SEQ,
            EI2.EMP_NAME_KR AS CLAIM_EMP_NAME,
            EI2.POSITION_NAME AS CLAIM_POSITION_NAME,
            EI2.OFFICE_TEL_NUM AS CLAIM_OFFICE_TEL_NUM,
            scp.dec_b64('KEY1', EI2.MOBILE_TEL_NUM) AS CLAIM_MOBILE_TEL_NUM,
            scp.dec_b64('KEY1', EI2.EMAIL_ADDR) AS CLAIM_EMAIL_ADDR,
            DI.DOC_NO,
            CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)), ' ', (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI.DEPT_SEQ)) AS DEPT_NAME,
            CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI2.DEPT_SEQ)), ' ', (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = EI2.DEPT_SEQ)) AS CLAIM_DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            (CASE WHEN A.ORDER_DT IS NOT NULL THEN 'Y' ELSE 'N' END) AS ORDER_CK,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN) AS CLAIM_ITEM_CNT
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON A.PURC_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI2
        ON A.CLAIM_EMP_SEQ = EI2.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B
        ON A.CRM_SN = B.CRM_SN
        WHERE
            1=1
            <if test='(claimSn == null or "".equals(claimSn)) and (purcSn == null or "".equals(purcSn))'>
                AND
                    PURC_SN = NULL
            </if>
            <if test='claimSn != null and !"".equals(claimSn)'>
               AND
                    CLAIM_SN = #{claimSn}
            </if>
            <if test='purcSn != null and !"".equals(purcSn)'>
                AND
                    PURC_SN = #{purcSn}
            </if>

    </select>

    <select id="getPurcClaimDataByPayApp" parameterType="map" resultType="map">
        /*getPurcClaimDataByPayApp*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PURC_CLAIM
        WHERE
            PAY_APP_SN = #{payAppSn}
    </select>

    <select id="getClaimFileList" parameterType="map" resultType="map">
        /*getClaimFileList*/
        SELECT * FROM CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = CONCAT("inspect_", #{PURC_SN})
    </select>

    <select id="getClaimExnpGroupIdx" parameterType="map" resultType="map">
        /*getClaimExnpGroupIdx*/
        SELECT * FROM CAM_MNG.DJ_CLAIM_EXNP
        WHERE
            CLAIM_EXNP_SN = #{claimExnpSn}
    </select>

    <insert id="insPurcClaimData" parameterType="map">
        /*insPurcClaimData*/
        INSERT INTO CAM_MNG.DJ_PURC_CLAIM
            (
                PURC_SN,
                CLAIM_EMP_SEQ,
                PURC_EMP_SEQ,
                PURC_TYPE,
                EXP_TYPE,
                PJT_SN,
                PJT_NM,
                PAYMENT_METHOD,
                PURC_LINK,
                CLAIM_DE,
                GOODS_DT,
                EXP_DE,
                CLAIM_TITLE,
                PURC_REQ_PURPOSE,
                CRM_SN,
                CRM_NM,
                PRI_PAY,
                CONT_YN,
                DISCOUNT_AMT,
                VAT,
                EST_AMT,
                VAT_AMT,
                CHECK_PROFIT,
                TOT_AMT,
                CLAIM_ETC
            )
        VALUES
            (
                <if test="purcSn != null and !purcSn.equals('')">
                    #{purcSn},
                </if>
                <if test="purcSn == null or purcSn.equals('')">
                    NULL,
                </if>
                #{loginEmpSeq},
                #{purcEmpSeq},
                #{purcType},
                #{expType},
                #{pjtSn},
                #{pjtNm},
                #{paymentMethod},
                #{purcLink},
                #{claimDe},
                #{goodsDt},
                #{expDe},
                #{claimTitle},
                #{purcReqPurpose},
                #{crmSn},
                #{crmNm},
                #{priPay},
                #{contYn},
                #{discountAmt},
                #{vat},
                #{estAmt},
                #{vatAmt},
                #{checkProfit},
                #{totAmt},
                #{claimEtc}
            )
        <selectKey keyProperty="claimSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_PURC_CLAIM'
        </selectKey>
    </insert>

    <update id="updPurcClaimData" parameterType="map">
        /*updPurcClaimData*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            <if test='purcSn != null and !"".equals(purcSn)'>
                PURC_SN = #{purcSn},
            </if>
            <if test='purcSn == null or "".equals(purcSn)'>
                PURC_SN = NULL,
            </if>
            CLAIM_EMP_SEQ = #{loginEmpSeq},
            PURC_EMP_SEQ = #{purcEmpSeq},
            PURC_TYPE = #{purcType},
            EXP_TYPE = #{expType},
            PJT_SN = #{pjtSn},
            PJT_NM = #{pjtNm},
            PAYMENT_METHOD = #{paymentMethod},
            PURC_LINK = #{purcLink},
            CLAIM_DE = #{claimDe},
            GOODS_DT = #{goodsDt},
            EXP_DE = #{expDe},
            CLAIM_TITLE = #{claimTitle},
            PURC_REQ_PURPOSE = #{purcReqPurpose},
            CRM_SN = #{crmSn},
            CRM_NM = #{crmNm},
            PRI_PAY = #{priPay},
            CONT_YN = #{contYn},
            DISCOUNT_AMT = #{discountAmt},
            VAT = #{vat},
            EST_AMT = #{estAmt},
            VAT_AMT = #{vatAmt},
            CHECK_PROFIT = #{checkProfit},
            TOT_AMT = #{totAmt},
            CLAIM_ETC = #{claimEtc}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <delete id="delPurcClaimData" parameterType="map">
        /*delPurcClaimData*/
        DELETE FROM CAM_MNG.DJ_PURC_CLAIM
        WHERE
            CLAIM_SN = #{claimSn}
    </delete>

    <delete id="delPurcClaimItem" parameterType="map">
        /*delPurcClaimItem*/
        DELETE FROM CAM_MNG.DJ_PURC_CLAIM_ITEM
        WHERE
            CLAIM_SN = #{claimSn}
    </delete>

    <delete id="delPurcItem" parameterType="map">
        /*delPurcItem*/
        DELETE FROM CAM_MNG.DJ_MNG_PURC_ITEM
        WHERE
            PURC_SN = #{purcSn}
    </delete>

    <select id="getPurcClaimList" parameterType="map" resultType="map">
        /*getPurcClaimList*/
        SELECT ABC.* FROM
        (
            SELECT
                A.CLAIM_SN, A.PURC_SN, A.PURC_TYPE,  A.CLAIM_DE, A.EXP_DE, A.GOODS_DT, A.ORDER_YN, A.CLAIM_TITLE, A.CRM_NM, A.TOT_AMT, A.CLAIM_EMP_SEQ, B.EMP_NAME_KR AS CLAIM_EMP_NAME, A.ORDER_DT,
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = A.CLAIM_EMP_SEQ
                ) AS CLAIM_DEPT_NAME,
                D.EMP_NAME_KR AS PURC_EMP_NAME,
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = A.PURC_EMP_SEQ
                ) AS PURC_DEPT_NAME,
                C.DELV_DE, DI.DOC_NO, A.STATUS, A.INSPECT_YN, A.INSPECT_STATUS,
                IFNULL((SELECT SUM(SPCI.PURC_ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_PURC_ITEM_AMT,
                IFNULL((SELECT SUM(SPCI.DIF_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_DIF_AMT,
                DI.DOC_NO AS CLAIM_DOC_NO, DI2.DOC_NO AS PURC_DOC_NO, A.PURC_REQ_PURPOSE, PCI.ITEM_NM, A.PAYMENT_METHOD, A.PJT_NM
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.CLAIM_EMP_SEQ = B.EMP_SEQ
            LEFT JOIN CAM_HR.DJ_EMP_INFO D ON A.PURC_EMP_SEQ = D.EMP_SEQ
            LEFT JOIN CAM_PJT_MNG.DJ_PROJECT C ON A.PJT_SN = C.PJT_SN
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
            LEFT JOIN CAM_MNG.DJ_MNG_PURC MP ON A.PURC_SN = MP.PURC_SN
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI2 ON DI2.DOC_ID = MP.DOC_ID
            LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
            WHERE 1=1

            UNION

            SELECT
                A.CLAIM_SN, A.PURC_SN, A.PURC_TYPE,  A.CLAIM_DE, A.EXP_DE, A.GOODS_DT, A.ORDER_YN, A.CLAIM_TITLE, A.CRM_NM, A.TOT_AMT, A.CLAIM_EMP_SEQ, B.EMP_NAME_KR AS CLAIM_EMP_NAME, A.ORDER_DT,
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = A.CLAIM_EMP_SEQ
                ) AS CLAIM_DEPT_NAME,
                D.EMP_NAME_KR AS PURC_EMP_NAME,
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = A.PURC_EMP_SEQ
                ) AS PURC_DEPT_NAME,
                '' AS DELV_DE, DI.DOC_NO, A.STATUS, A.INSPECT_YN, A.INSPECT_STATUS,
                IFNULL((SELECT SUM(SPCI.PURC_ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_PURC_ITEM_AMT,
                IFNULL((SELECT SUM(SPCI.DIF_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM SPCI WHERE SPCI.CLAIM_SN = A.CLAIM_SN), 0) AS TOT_DIF_AMT,
                DI.DOC_NO AS CLAIM_DOC_NO, '' AS PURC_DOC_NO, A.PURC_REQ_PURPOSE, PCI.ITEM_NM, A.PAYMENT_METHOD, A.PJT_NM
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN CAM_HR.DJ_EMP_INFO B ON A.CLAIM_EMP_SEQ = B.EMP_SEQ
            LEFT JOIN CAM_HR.DJ_EMP_INFO D ON A.PURC_EMP_SEQ = D.EMP_SEQ
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
            LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
        ) ABC
        WHERE 1=1
        <if test='searchValue != null and !"".equals(searchValue)'>
            <choose>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                    AND ABC.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "CLAIM_TITLE".equals(searchKeyword)'>
                    AND ABC.CLAIM_TITLE LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                    AND ABC.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "CRM_NM".equals(searchKeyword)'>
                    AND ABC.CRM_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_ITEM_NAME".equals(searchKeyword)'>
                    AND ABC.ITEM_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_EMP_NAME".equals(searchKeyword)'>
                    AND ABC.PURC_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "CLAIM_EMP_NAME".equals(searchKeyword)'>
                    AND ABC.CLAIM_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "PJT_NM".equals(searchKeyword)'>
                    AND ABC.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <otherwise>
                    AND
                        (
                            ABC.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.CLAIM_TITLE LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.CRM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.ITEM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.PURC_EMP_NAME LIKE CONCAT('%',#{searchValue},'%') OR
                            ABC.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
                        )
                </otherwise>
            </choose>
        </if>
        <choose>
            <when test='"1".equals(inspectStat)'>
                AND (ABC.STATUS = '100' OR ABC.STATUS = '101') AND ABC.PAYMENT_METHOD NOT IN('I', 'C') AND ABC.ORDER_YN = 'N'
            </when>
            <when test='"2".equals(inspectStat)'>
                AND ABC.INSPECT_STATUS = '0'
                AND IF(ABC.PAYMENT_METHOD = 'A', ABC.ORDER_YN = 'Y', 1=1)
            </when>
            <when test='"3".equals(inspectStat)'>
                AND ABC.INSPECT_YN = 'Y' AND ABC.INSPECT_STATUS = '100'
            </when>
        </choose>
        <choose>
            <when test='busnClass != null and !"".equals(busnClass) and "C".equals(busnClass)'>
                AND ABC.PURC_TYPE = ''
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "R".equals(busnClass)'>
                AND ABC.PURC_TYPE = 'R'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "S".equals(busnClass)'>
                AND ABC.PURC_TYPE = 'S'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "D".equals(busnClass)'>
                AND ABC.PURC_TYPE = 'D'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "V".equals(busnClass)'>
                AND ABC.PURC_TYPE = 'V'
            </when>
        </choose>
        <if test='startDt != null and !"".equals(startDt) and endDt != null and !"".equals(endDt)'>
            AND DATE_FORMAT(ABC.CLAIM_DE, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
        </if>
        GROUP BY CLAIM_SN
        ORDER BY CLAIM_SN DESC
    </select>

    <select id="getPurcAssetList" parameterType="map" resultType="map">
        /*getPurcAssetList*/
        SELECT
            PC.INSPECT_STATUS,
            PC.CLAIM_DE,
            PCI.*
        FROM
            CAM_MNG.DJ_PURC_CLAIM_ITEM PCI
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM PC ON PCI.CLAIM_SN = PC.CLAIM_SN
        LEFT JOIN
            CAM_MNG.DJ_MNG_PURC MP ON PC.PURC_SN = MP.PURC_SN
        WHERE
            PC.INSPECT_STATUS = '100'
        AND PCI.PRODUCT_A = '1'
        AND PCI.PROD_CD IS NULL
        ORDER BY CLAIM_SN DESC, CLAIM_ITEM_SN
    </select>

    <select id="getPurcSum" parameterType="map" resultType="map">
        /*getPurcSum*/
        SELECT
            IFNULL(SUM(PURC_ITEM_AMT), 0) AS PURC_SUM
        FROM
            CAM_MNG.DJ_MNG_PURC MP
        LEFT JOIN CAM_MNG.DJ_MNG_PURC_ITEM MPI ON MP.PURC_SN = MPI.PURC_SN
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="getPurcProductList" parameterType="map" resultType="map">
        /*getPurcProductList*/
        SELECT
            TOT.*,
            (SELECT PRODUCT_DT_CODE_NM FROM CAM_PJT_MNG.DJ_PRODUCT_CODE WHERE ACTIVE = "Y" AND PRODUCT_GROUP_CODE_ID = 3 AND PARENT_CODE = TOT.PRODUCT_B AND PARENT_CODE_NM = TOT.PD_B AND PRODUCT_DT_CODE = TOT.PRODUCT_C) AS PD_C
        FROM
            (
                SELECT
                    A.*,
                    (SELECT PRODUCT_DT_CODE_NM FROM CAM_PJT_MNG.DJ_PRODUCT_CODE WHERE PRODUCT_DT_CODE = A.PRODUCT_A AND PRODUCT_GROUP_CODE_ID = 1) AS PD_A,
                    (SELECT PRODUCT_DT_CODE_NM FROM CAM_PJT_MNG.DJ_PRODUCT_CODE WHERE PARENT_CODE = A.PRODUCT_A AND PRODUCT_DT_CODE = A.PRODUCT_B AND PRODUCT_GROUP_CODE_ID = 2) AS PD_B,
                    B.CRM_NM
                FROM
                    CAM_MNG.DJ_MNG_PURC_ITEM A
                LEFT JOIN
                    CAM_MNG.DJ_PURC_CLAIM B
                    ON
                        A.PURC_SN = B.PURC_SN
                WHERE B.PURC_SN IS NOT NULL
                  AND B.STATUS = 100
            ) TOT
        WHERE
            1=1
        <if test='searchKeyword != null and !"".equals(searchKeyword)'>
            AND ${searchKeyword} LIKE CONCAT('%',#{searchValue},'%')
        </if>
        <if test='searchKeyword == null or "".equals(searchKeyword)'>
            AND (PURC_ITEM_NAME LIKE CONCAT('%',#{searchValue},'%')
                     OR PURC_ITEM_UNIT LIKE CONCAT('%',#{searchValue},'%')
                     OR PURC_ITEM_STD LIKE CONCAT('%',#{searchValue},'%')
                     OR CRM_NM  LIKE CONCAT('%',#{searchValue},'%'))
        </if>
        <if test='productA != null and !"".equals(productA)'>
            AND PRODUCT_A = #{productA}
        </if>
        <if test='productB != null and !"".equals(productB)'>
            AND PRODUCT_B = #{productB}
        </if>
        <if test='productC != null and !"".equals(productC)'>
            AND PRODUCT_C = #{productC}
        </if>
        <if test='purcItemType != null and !"".equals(purcItemType)'>
            AND PURC_ITEM_TYPE = #{purcItemType}
        </if>
    </select>

    <update id="updPurcInspect" parameterType="map">
        /* updPurcInspect */
        UPDATE
            CAM_MNG.DJ_MNG_PURC
        SET
            INSPECT_EMP_NAME = #{inspectEmpName},
            INSPECT_DT = #{inspectDt},
            INSPECT_YN = 'Y'
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updPurcClaimInspect" parameterType="map">
        /* updPurcClaimInspect */
        UPDATE
            CAM_MNG.DJ_PURC_CLAIM
        SET
            INSPECT_EMP_NAME = #{inspectEmpName},
            INSPECT_DT = #{inspectDt},
            INSPECT_YN = 'Y'
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="updPurcInspectStat" parameterType="map">
        /* updPurcInspectStat */
        UPDATE
            CAM_MNG.DJ_MNG_PURC
        SET
            INSPECT_STATUS = #{status}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updPurcClaimItemStat" parameterType="map">
        /* updPurcClaimItemStat */
        UPDATE
            CAM_MNG.DJ_PURC_CLAIM_ITEM
        SET
            PROD_SN = #{astInfoSn}
        WHERE
            CLAIM_ITEM_SN = #{itemSn}
    </update>

    <update id="updPurcReqFileCopy" parameterType="map">
        /*updPurcReqFileCopy*/
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            'asset',
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONCAT('ast_', #{astInfoSn}),
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{contentId}
    </update>

    <update id="updItemUnAssetStat" parameterType="map">
        /* updItemUnAssetStat */
        UPDATE
            CAM_MNG.DJ_PURC_CLAIM_ITEM
        SET
            PROD_CD = 'N'
        WHERE
            CLAIM_ITEM_SN IN (${itemList})
    </update>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        /*purc.getCrmInfo*/
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            CRM_NM LIKE CONCAT('%', #{excelCrmNm}, '%')
        AND
            REPLACE(CRM_NO, '-', '') LIKE CONCAT('%', #{excelCrmNo}, '%')
    </select>

    <update id="setOrderInfo" parameterType="map">
        /* setOrderInfo */
        UPDATE
            CAM_MNG.DJ_PURC_CLAIM
        SET
            ORDER_DT = #{orderDt}
            , GOODS_DT = #{goodsDt}
            , PH_NUM = #{PHNum}
            , FAX_NUM = #{FaxNum}
            , SIGNIFICANT = #{significant}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="setOrderYnInfo" parameterType="map">
        /* setOrderYnInfo */
        UPDATE
            CAM_MNG.DJ_PURC_CLAIM
        SET
            ORDER_YN = #{orderYn}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <select id="getProjectPurcList" parameterType="map" resultType="map">
        /*getProjectPurcList*/
        SELECT
            B.*,
            C.CRM_NM
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM B ON A.CLAIM_SN = B.CLAIM_SN
        LEFT JOIN CAM_CRM.DJ_CRM_INFO C ON A.CRM_SN = C.CRM_SN
        WHERE
            A.PJT_SN = #{pjtSn}
        AND A.STATUS = '100'
    </select>

    <select id="getProjectPurcReqList" parameterType="map" resultType="map">
        /*getProjectPurcReqList*/
        SELECT
            B.*
        FROM
            CAM_MNG.DJ_MNG_PURC_ITEM B
        LEFT JOIN CAM_MNG.DJ_MNG_PURC A ON A.PURC_SN = B.PURC_SN
        WHERE
            A.PJT_SN = #{pjtSn}
        AND A.DOC_STATUS = '100'
        ORDER BY A.REG_DATE DESC
    </select>

    <update id="updPurcItemStatusChange" parameterType="map">
        /*updPurcItemStatusChange*/
        UPDATE CAM_MNG.DJ_MNG_PURC_ITEM
        SET
            CLAIM_STAT = 'Y'
        WHERE
            PURC_ITEM_SN = #{item}
    </update>

    <delete id="delPurcReq" parameterType="map">
        /*delPurcReq*/
        DELETE FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN = #{purcSn}
    </delete>

    <select id="getPurcAndClaimData" parameterType="map" resultType="map">
        /*getPurcAndClaimData*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PURC_CLAIM
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <select id="getProjectReqFile" parameterType="map" resultType="map">
        /* getProjectReqFile */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID IN (SELECT CONCAT('purcReq_', PURC_SN) FROM CAM_MNG.DJ_MNG_PURC WHERE PJT_SN = #{pjtSn})
        ORDER BY REG_DATE DESC
    </select>

    <select id="getMngPurcAppList" parameterType="map" resultType="map">
        /*getMngPurcAppList*/
        SELECT
            AA.*,
            AA.TOT_AMT - AA.EXNP_AMT AS NON_EXNP_AMT,
            CASE
                WHEN AA.EXNP_AMT != 0 AND AA.TOT_AMT = AA.EXNP_AMT THEN '지출완료'
                WHEN AA.REQ_AMT != 0 THEN '지출요청중'
                WHEN AA.SETTING != 0 AND AA.SETTING_YN = 'Y' THEN '지급설정완료'
                ELSE '지급설정대기'
            END AS STAT,
            IF(AA.TOT_AMT - AA.EXNP_AMT > 0, '', '지출완료') as REQ_STAT
        FROM
        (
            SELECT
                A.*,
                IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS REQ_AMT,
                IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
                REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ)), '|', ' ') AS DEPT_NAME,
                DI.DOC_NO,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) AS SETTING,
                (SELECT MNG_SET_STAT FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) AS SETTING_YN,
                IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'C') AS RE_STAT
            FROM CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON DI.DOC_ID = A.DOC_ID
            LEFT JOIN CAM_MNG.DJ_MNG_PURC MP ON MP.PURC_SN = A.PURC_SN
            LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
            WHERE
                A.STATUS = 100
            <if test='monCheck != null and !"".equals(monCheck)'>
                AND (SELECT MON_CHECK FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.CRM_SN) = #{monCheck}
            </if>
            <choose>
                <when test='busnClass != null and !"".equals(busnClass) and "C".equals(busnClass)'>
                    AND A.PURC_TYPE = ''
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "R".equals(busnClass)'>
                    AND A.PURC_TYPE = 'R'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "S".equals(busnClass)'>
                    AND A.PURC_TYPE = 'S'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "D".equals(busnClass)'>
                    AND A.PURC_TYPE = 'D'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "V".equals(busnClass)'>
                    AND A.PURC_TYPE = 'V'
                </when>
            </choose>
            <choose>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "A".equals(searchKeyword)'>
                    AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "B".equals(searchKeyword)'>
                    AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "C".equals(searchKeyword)'>
                    AND PCI.ITEM_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "D".equals(searchKeyword)'>
                    AND A.CRM_NM LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "E".equals(searchKeyword)'>
                    AND (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <when test='searchKeyword != null and !"".equals(searchKeyword) and "F".equals(searchKeyword)'>
                    AND (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.CLAIM_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
                </when>
                <otherwise>
                    AND
                    (
                    DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                    MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                    PCI.ITEM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    A.CRM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%') OR
                    (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.CLAIM_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
                    )
                </otherwise>
            </choose>
            <choose>
                <when test='"1".equals(inspectStat)'>
                    AND A.ORDER_YN = 'N'
                </when>
                <when test='"2".equals(inspectStat)'>
                    AND A.ORDER_YN = 'Y' AND A.INSPECT_STATUS = '0'
                </when>
                <when test='"3".equals(inspectStat)'>
                    AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                    AND (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) IS NULL
                </when>
                <when test='"4".equals(inspectStat)'>
                    AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                    AND
                        (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) != 100
                </when>
                <when test='"5".equals(inspectStat)'>
                    AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                    AND
                        (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) = 100
                    AND IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'N') = 'N'
                </when>
                <when test='"6".equals(inspectStat)'>
                    AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                    AND
                        (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) = 100
                    AND IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'N') = 'Y'
                </when>
            </choose>
            <if test='strDt != null and !"".equals(strDt) and endDt != null and !"".equals(endDt)'>
                AND EXP_DE BETWEEN #{strDt} AND #{endDt}
            </if>
            GROUP BY CLAIM_SN
            ORDER BY CLAIM_SN DESC
        ) AA
    </select>

    <select id="getMngPurcAppListExcel" parameterType="map" resultType="map">
        /*getMngPurcAppListExcel*/
        SELECT
            A.*,
            <![CDATA[
                (CASE WHEN A.PURC_TYPE = 'D' THEN '엔지니어링'
                WHEN A.PURC_TYPE = 'R' THEN 'R&D'
                WHEN A.PURC_TYPE = 'S' THEN '비R&D'
                WHEN A.PURC_TYPE = 'V' THEN '기타/용역'
                ELSE '법인운영'
                END) AS PURC_NAME,
            ]]>
            (CASE WHEN A.PAYMENT_METHOD = 'A' THEN '계좌이체'
            WHEN A.PAYMENT_METHOD = 'I' THEN '인터넷구매'
            WHEN A.PAYMENT_METHOD = 'C' THEN '현장결재'
            END) AS PAYMENT_METHOD_NM,
            (TOT_AMT - IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0)) AS NOT_AMT,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS REQ_AMT,
            IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
            REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ)), '|', ' ') AS DEPT_NAME,
            DI.DOC_NO,
            (SELECT COUNT(*) FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) AS SETTING,
            (CASE WHEN (SELECT COUNT(*) FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) = 0 THEN '미설정'
            ELSE '설정완료'
            END) AS SETTING_NM,
            (CASE
                WHEN A.TOT_AMT = IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) THEN '지출완료'
                WHEN IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) != 0 THEN '지출요청중'
                WHEN (SELECT COUNT(*) FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) != 0 THEN '지급설정완료'
                ELSE '지급설정대기'
            END) AS STATUS_NM,
            IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'C') AS RE_STAT
        FROM CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DI ON DI.DOC_ID = A.DOC_ID
        LEFT JOIN CAM_MNG.DJ_MNG_PURC MP ON MP.PURC_SN = A.PURC_SN
        LEFT JOIN CAM_MNG.DJ_PURC_CLAIM_ITEM PCI ON PCI.CLAIM_SN = A.CLAIM_SN
        WHERE
        A.STATUS = 100
        <if test='monCheck != null and !"".equals(monCheck)' >
            AND (SELECT MON_CHECK FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.CRM_SN) = #{monCheck}
        </if>
        <choose>
            <when test='busnClass != null and !"".equals(busnClass) and "C".equals(busnClass)'>
                AND A.PURC_TYPE = ''
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "R".equals(busnClass)'>
                AND A.PURC_TYPE = 'R'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "S".equals(busnClass)'>
                AND A.PURC_TYPE = 'S'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "D".equals(busnClass)'>
                AND A.PURC_TYPE = 'D'
            </when>
            <when test='busnClass != null and !"".equals(busnClass) and "V".equals(busnClass)'>
                AND A.PURC_TYPE = 'V'
            </when>
        </choose>
        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "A".equals(searchKeyword)'>
                AND DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "B".equals(searchKeyword)'>
                AND MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "C".equals(searchKeyword)'>
                AND PCI.ITEM_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "D".equals(searchKeyword)'>
                AND A.CRM_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "E".equals(searchKeyword)'>
                AND (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "F".equals(searchKeyword)'>
                AND (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.CLAIM_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                DI.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                MP.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                PCI.ITEM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                A.CRM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%') OR
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.CLAIM_EMP_SEQ) LIKE CONCAT('%',#{searchValue},'%')
                )
            </otherwise>
        </choose>
        <choose>
            <when test='"1".equals(inspectStat)'>
                AND A.ORDER_YN = 'N'
            </when>
            <when test='"2".equals(inspectStat)'>
                AND A.ORDER_YN = 'Y' AND A.INSPECT_STATUS = '0'
            </when>
            <when test='"3".equals(inspectStat)'>
                AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                AND (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) IS NULL
            </when>
            <when test='"4".equals(inspectStat)'>
                AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                AND
                (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) != 100
            </when>
            <when test='"5".equals(inspectStat)'>
                AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                AND
                (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) = 100
                AND IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'N') = 'N'
            </when>
            <when test='"6".equals(inspectStat)'>
                AND A.INSPECT_YN = 'Y' AND A.INSPECT_STATUS = '100'
                AND
                (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1)) = 100
                AND IFNULL((SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = (SELECT PAY_APP_SN FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN ORDER BY CLAIM_EXNP_SN DESC LIMIT 1) ORDER BY EXNP_SN DESC LIMIT 1), 'N') = 'Y'
            </when>
        </choose>
        <if test='strDt != null and !"".equals(strDt) and endDt != null and !"".equals(endDt)'>
            AND EXP_DE BETWEEN #{strDt} AND #{endDt}
        </if>
        GROUP BY CLAIM_SN
        ORDER BY CLAIM_SN DESC
    </select>

    <select id="getPurcAddFileList" parameterType="map" resultType="map">
        /*getPurcAddFileList*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_MNG_PURC_FILE
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <delete id="delPurcAddFileList" parameterType="map">
        /*delPurcAddFileList*/
        DELETE FROM CAM_MNG.DJ_MNG_PURC_FILE WHERE PURC_SN = #{purcSn}
    </delete>


    <select id="getPurcLinkedAddFile" parameterType="map" resultType="map">
        /*getPurcLinkedAddFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO IN (SELECT FILE_NO FROM CAM_MNG.DJ_MNG_PURC_FILE WHERE PURC_SN = #{purcSn})
    </select>

    <select id="getPurcClaimDocId" parameterType="map" resultType="map">
        /*getPurcClaimDocId*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD IN ('purc', 'claim')
        AND
            DOC_ID IN
        <foreach collection="docIdArr" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getClaimMngList" parameterType="map" resultType="map">
        /*getClaimMngList*/
        SELECT
            A.*,
            B.CLAIM_EXNP_SN,
            A.INSPECT_STATUS,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS REQ_AMT,
            IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_SN = A.CLAIM_SN), 0) AS EXNP_AMT,
            REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ)), '|', ' ') AS DEPT_NAME,
            (SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS DOC_NO,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) AS PURC_EMP_NAME
        FROM CAM_MNG.DJ_PURC_CLAIM A
         LEFT JOIN
             CAM_MNG.DJ_CLAIM_EXNP B
         ON A.CLAIM_SN = B.CLAIM_SN
        WHERE
            A.CLAIM_SN IN
        <foreach collection="claimSnArr" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        GROUP BY A.CLAIM_SN
        ORDER BY CLAIM_SN DESC
    </select>

    <insert id="insPayAppPurcReq" parameterType="map">
        /*insPayAppPurcReq*/
        INSERT INTO CAM_MNG.DJ_CLAIM_EXNP
            (
                CLAIM_SN,
                REQ_AMT,
                PJT_NM,
                PJT_CD,
                CE_GW_IDX,
                EVID_TYPE,
                EMP_SEQ,
                MNG_REQ_STAT
            )
        VALUES
            (
                #{claimSn},
                #{reqAmt},
                (SELECT PJT_NM FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = #{claimSn}),
                (SELECT PJT_CD FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = #{claimSn}),
                #{ceGwIdx},
                #{evidType},
                #{empSeq},
                #{mngReqStat}
            )
    </insert>

    <insert id="insClaimExnpGroupIdx" parameterType="map">
        /*insClaimExnpGroupIdx*/
        INSERT INTO CAM_MNG.DJ_CLAIM_EXNP_IDX_HIST
        (
            CE_GW_IDX,
            REG_DT
        )
        VALUES
        (
            #{ceGwIdx},
            NOW()
        )
    </insert>

    <select id="getUserPurcAppList" parameterType="map" resultType="map">
        /*getUserPurcAppList*/
        SELECT * FROM (
            SELECT
                B.*,
                A.CLAIM_EXNP_SN,
                A.MNG_REQ_STAT,
                A.EMP_SEQ AS F_EMP_SEQ,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE A.EMP_SEQ = EMP_SEQ) AS F_EMP_NAME,
                A.PAY_APP_SN AS F_PAY_APP_SN,
                (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE A.PAY_APP_SN = PAY_APP_SN) AS F_DOC_STATUS,
                IFNULL((SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = A.CE_GW_IDX), 0) AS REQ_AMT,
                IFNULL((SELECT COUNT(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = A.CE_GW_IDX), 0) AS EXNP_CNT,
                IFNULL((SELECT SUM(EXNP_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = A.CE_GW_IDX), 0) AS EXNP_AMT,
                REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.PURC_EMP_SEQ)), '|', ' ') AS DEPT_NAME,
                (SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = B.DOC_ID) AS DOC_NO,
                (SELECT REG_EMP_SEQ FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN = B.PURC_SN) AS REG_EMP_SEQ,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = (SELECT REG_EMP_SEQ FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN = B.PURC_SN)) AS REG_EMP_NAME,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.PURC_EMP_SEQ) AS PURC_EMP_NAME,
                C.ITEM_COUNT,
                (SELECT RE_STAT FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = A.PAY_APP_SN ORDER BY EXNP_SN DESC LIMIT 1) AS RE_STAT,
                D.EXNP_STATUS,
                IFNULL(E.EXNP_DOC_STATUS, 0) AS EXNP_DOC_STATUS
            FROM
                CAM_MNG.DJ_CLAIM_EXNP A
            LEFT JOIN
                CAM_MNG.DJ_PURC_CLAIM B
            ON A.CLAIM_SN = B.CLAIM_SN
            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    SUM(TOT_COST) AS TOT_COST,
                    GROUP_CONCAT(CRM_NM) AS CRM_NM,
                    COUNT(*) AS ITEM_COUNT
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE TOT_COST != 0
                GROUP BY PAY_APP_SN) C
            ON
                A.PAY_APP_SN = C.PAY_APP_SN

            LEFT JOIN
                (SELECT
                    PAY_APP_SN,
                    EVID_TYPE,
                    COUNT(*) AS EXNP_STATUS
                FROM CAM_MNG.DJ_PAY_APP_DET
                WHERE EXNP_SAVE = 'Y'
                GROUP BY PAY_APP_SN ) D
            ON
                A.PAY_APP_SN = D.PAY_APP_SN

            LEFT JOIN
                (SELECT
                    Y.PAY_APP_SN,
                    Y.DT1, Y.DT3,
                    COUNT(*) AS EXNP_DOC_STATUS
                FROM CAM_MNG.DJ_EXNP_DET X LEFT JOIN CAM_MNG.DJ_EXNP Y ON X.EXNP_SN = Y.EXNP_SN
                WHERE Y.REQ_END_DE IS NOT NULL AND Y.REQ_END_DE != ""
                GROUP BY Y.PAY_APP_SN ) E
            ON
                A.PAY_APP_SN = E.PAY_APP_SN
            WHERE
                B.STATUS = 100 AND (B.PRI_PAY = 'Y' OR B.INSPECT_STATUS = 100 OR PURC_SN IS NULL)
            AND
                CASE
                    WHEN B.PAYMENT_METHOD = 'A' THEN B.ORDER_DT IS NOT NULL
                    ELSE 1=1
                END
            <if test='(camProject == null or "".equals(camProject)) and (searchDept != null and !"".equals(searchDept))'>
                AND
                    ((A.EMP_SEQ IS NULL AND B.PURC_EMP_SEQ = #{empSeq}) OR A.EMP_SEQ = #{empSeq})
            </if>
            <if test='pjtCd != null and "R".equals(busnClass) or "S".equals(busnClass)'>
                AND
                    A.PJT_CD = #{pjtCd}
            </if>
            <if test='"D".equals(busnClass) or "V".equals(busnClass)'>
                AND
                    LEFT(A.PJT_CD, 1) = 'M' AND B.PJT_SN = #{pjtSn}
            </if>
            GROUP BY A.CE_GW_IDX
            ORDER BY A.CLAIM_EXNP_SN DESC
        ) AA
        WHERE 1=1
        <choose>
            <when test='sBusnClass != null and !"".equals(sBusnClass) and "C".equals(sBusnClass)'>
                AND AA.PURC_TYPE = ''
            </when>
            <when test='sBusnClass != null and !"".equals(sBusnClass) and "R".equals(sBusnClass)'>
                AND AA.PURC_TYPE = 'R'
            </when>
            <when test='sBusnClass != null and !"".equals(sBusnClass) and "S".equals(sBusnClass)'>
                AND AA.PURC_TYPE = 'S'
            </when>
            <when test='sBusnClass != null and !"".equals(sBusnClass) and "D".equals(sBusnClass)'>
                AND AA.PURC_TYPE = 'D'
            </when>
            <when test='sBusnClass != null and !"".equals(sBusnClass) and "V".equals(sBusnClass)'>
                AND AA.PURC_TYPE = 'V'
            </when>
        </choose>
        <choose>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "A".equals(searchKeyword)'>
                AND AA.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "B".equals(searchKeyword)'>
                AND AA.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "C".equals(searchKeyword)'>
                AND AA.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "D".equals(searchKeyword)'>
                AND AA.CRM_NM LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <when test='searchKeyword != null and !"".equals(searchKeyword) and "E".equals(searchKeyword)'>
                AND AA.PURC_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
            </when>
            <otherwise>
                AND
                (
                    AA.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                    AA.PJT_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    AA.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                    AA.CRM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                    AA.PURC_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
                )
            </otherwise>
        </choose>
        <if test='strDt != null and !"".equals(strDt) and endDt != null and !"".equals(endDt)'>
            AND AA.EXP_DE BETWEEN #{strDt} AND #{endDt}
        </if>
    </select>

    <select id="getClaimExnpData" parameterType="map" resultType="map">
        /*getClaimExnpData*/
        SELECT
            A.*,
            (SELECT SUM(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = A.CE_GW_IDX) AS TOT_AMT,
            (SELECT COUNT(REQ_AMT) FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = A.CE_GW_IDX) AS CNT,
            B.*,
            B.PJT_NM AS PJT_NM2,
            B.PJT_CD AS PJT_CD2
        FROM
            CAM_MNG.DJ_CLAIM_EXNP A
        LEFT JOIN
            CAM_MNG.DJ_CLAIM_SETTING B
        ON
            A.CLAIM_SN = B.CLAIM_SN
        WHERE
            CLAIM_EXNP_SN = #{claimExnpSn}
    </select>

    <insert id="insPurcBasicSetting" parameterType="map">
        /*insPurcBasicSetting*/
        INSERT INTO CAM_MNG.DJ_CLAIM_SETTING
            (
                CLAIM_SN,
                PJT_NM,
                PJT_CD,
                BUDGET_SN,
                BUDGET_NM,
                MNG_SET_STAT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{claimSn},
                #{pjtNm},
                #{pjtCd},
                #{budgetSn},
                #{budgetNm},
                #{mngSetStat},
                #{empSeq}
            )
    </insert>

    <update id="updPurcBasicSetting" parameterType="map">
        /*updPurcBasicSetting*/
        UPDATE CAM_MNG.DJ_CLAIM_SETTING
        SET
            CLAIM_SN = #{claimSn},
            PJT_NM = #{pjtNm},
            PJT_CD = #{pjtCd},
            BUDGET_SN = #{budgetSn},
            BUDGET_NM = #{budgetNm}
        WHERE
            CLAIM_SET_SN = #{claimSetSn}
    </update>

    <select id="getPurcBasicSetting" parameterType="map" resultType="map">
        /*getPurcBasicSetting*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_CLAIM_SETTING
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getGwIdx" parameterType="map" resultType="int">
        SELECT
            IF(CE_GW_IDX IS NULL, 1, MAX(CE_GW_IDX) + 1) AS MAX_IDX
        FROM
            CAM_MNG.DJ_CLAIM_EXNP_IDX_HIST
    </select>

    <select id="getBasicSetting" parameterType="map" resultType="map">
        /*getBasicSetting*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_CLAIM_SETTING
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getInsYList" parameterType="map" resultType="map">
        /*getInsYList*/
        SELECT REPLACE(B.PURC_ITEM_QTY, ',', '') AS PURC_ITEM_QTY_UNCOMMA, B.*
        FROM CAM_MNG.DJ_MNG_PURC A
        LEFT JOIN
            CAM_MNG.DJ_MNG_PURC_ITEM B
        ON
            A.PURC_SN = B.PURC_SN
        WHERE
            B.PURC_SN = #{purcSn}
        AND
            B.STATUS = 'C'
    </select>

    <select id="getClaimInsYList" parameterType="map" resultType="map">
        /*getClaimInsYList*/
        SELECT
            A.CRM_SN,
            B.PRODUCT_A,
            REPLACE(B.ITEM_EA, ',', '') AS PURC_ITEM_QTY_UNCOMMA,
            B.ITEM_UNIT_AMT AS PURC_ITEM_UNIT_PRICE,
            B.ITEM_AMT AS PURC_ITEM_AMT,
            B.ITEM_ETC AS RMK,
            A.CLAIM_EMP_SEQ AS REG_EMP_SEQ
        FROM CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM_ITEM B
        ON
            A.CLAIM_SN = B.CLAIM_SN
        WHERE
            B.CLAIM_SN = #{claimSn}
    </select>

    <insert id="insItemMaster" parameterType="map">
        /*insItemMaster*/
        INSERT INTO CAM_ITEM.DJ_ITEM_MASTER
            (
                ITEM_NAME,
                STANDARD,
                ACTIVE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{PURC_ITEM_NAME},
                #{PURC_ITEM_STD},
                'Y',
                #{REG_EMP_SEQ}
            )
        <selectKey keyProperty="MASTER_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_ITEM' AND TABLE_NAME = 'DJ_ITEM_MASTER'
        </selectKey>
    </insert>

    <insert id="insItemWhInfo" parameterType="map">
        /*insItemWhInfo*/
        INSERT INTO CAM_ITEM.DJ_ITEM_WH_INFO
            (
                CRM_SN,
                WH_TYPE,
                WH_CD,
                WH_VOLUME,
                UNIT_PRICE,
                AMT,
                INSPECTION,
                RMK,
                WH_DT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{CRM_SN},
                '101',
                'TMP',
                #{PURC_ITEM_QTY_UNCOMMA},
                #{PURC_ITEM_UNIT_PRICE},
                #{PURC_ITEM_AMT},
                'Y',
                #{RMK},
                DATE_FORMAT(now(), '%Y-%m-%d'),
                #{REG_EMP_SEQ}
            )
        <selectKey keyProperty="ITEM_WH_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_ITEM' AND TABLE_NAME = 'DJ_ITEM_WH_INFO'
        </selectKey>
    </insert>

    <insert id="insItemMasterHist" parameterType="map">
        /*insItemMasterHist*/
        INSERT INTO CAM_ITEM.DJ_ITEM_HIST
            (
                ITEM_WH_SN,
                CRM_SN,
                IN_CNT,
                OUT_CNT,
                UNIT_AMT,
                TOT_AMT,
                DEF_DATE
            )
        VALUES
            (
                #{ITEM_WH_SN},
                #{CRM_SN},
                #{PURC_ITEM_QTY_UNCOMMA},
                '0',
                #{PURC_ITEM_UNIT_PRICE},
                (${PURC_ITEM_QTY_UNCOMMA} * ${PURC_ITEM_UNIT_PRICE}),
                DATE_FORMAT(now(), '%Y-%m-%d')
            )
    </insert>

    <insert id="setOrderSendMailInfo" parameterType="map">
        /*setOrderSendMailInfo*/
        INSERT INTO CAM_MNG.DJ_ORDER_MAIL_INFO
        (
            CLAIM_SN,
            CRM_SN,
            CRM_NM,
            RECEIVE_MAIL,
            SEND_MAIL,
            MAIL_SUBJECT,
            MAIL_CONTENT,
            SEND_DATE
        )
        VALUES
        (
            #{claimSn},
            #{crmSn},
            #{crmNm},
            #{receiveEml},
            #{sendEml},
            #{subject},
            #{contents},
            NOW()
        )

        <selectKey keyProperty="mailSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_MNG' AND TABLE_NAME = 'DJ_ORDER_MAIL_INFO'
        </selectKey>
    </insert>

    <insert id="insContractPurcReq" parameterType="map">
        /*insContractPurcReq*/
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_CONTRACT (
            CLAIM_SN,
            DOCU_CHECK,
            MAIN_CLASS_SN,
            MAIN_CLASS_NAME,
            CLASS_SN,
            CLASS_NAME,
            DOCU_YEAR_SN,
            DOCU_NO,
            DOCU_DE,
            PROJECT_NAME,
            PROJECT_MONEY,
            START_DE,
            END_DE,
            CO_SN,
            CO_NAME,
            REMARK_CN,
            REPRESENTATIVE,
            BUSINESS_NUMBER,
            ZIP_CODE,
            ADDR,
            REG_EMP_SEQ,
            REG_DT
        )
        SELECT
            #{claimSn},
            '2',
            '1',
            'CAMTIC',
            '3',
            '구매',
            CONCAT('TIC', DATE_FORMAT(NOW(), '%y')),
            (SELECT LPAD(CAST(MAX(CAST(DOCU_NO AS UNSIGNED)) AS CHAR) + 1, 3, '0') FROM CAM_INSIDE.DJ_DOCUMENT_CONTRACT SIDC WHERE SIDC.DOCU_YEAR_SN = CONCAT('TIC', DATE_FORMAT(NOW(), '%y')) AND SIDC.ACTIVE = 'Y'),
            PC.CLAIM_DE,
            PC.CLAIM_TITLE,
            PC.TOT_AMT,
            PC.CLAIM_DE,
            PC.EXP_DE,
            PC.CRM_SN,
            PC.CRM_NM,
            PC.CLAIM_ETC,
            CI.CRM_CEO,
            CI.CRM_NO,
            CI.POST,
            CI.ADDR,
            PC.CLAIM_EMP_SEQ,
            NOW()
        FROM
            CAM_MNG.DJ_PURC_CLAIM PC
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI ON CI.CRM_SN = PC.CRM_SN
        WHERE PC.CLAIM_SN = #{claimSn}
    </insert>

    <select id="getOrderSendFileList" parameterType="map" resultType="map">
        /*getOrderSendFileList*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = 'orderMail' AND CONTENT_ID = #{mailSn}
    </select>

    <select id="getClaimExnpGwCardList" parameterType="map" resultType="map">
        /*getClaimExnpGwCardList*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_USE_CARD_INFO
        WHERE
            CE_GW_IDX = #{CE_GW_IDX}
    </select>

    <select id="getClaimExnpGwEtaxList" parameterType="map" resultType="map">
        /*getClaimExnpGwEtaxList*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_USE_ETAX_INFO
        WHERE
            CE_GW_IDX = #{CE_GW_IDX}
    </select>

    <select id="getDetailCardInfo" parameterType="map" resultType="map">
        /*getDetailCardInfo*/
        SELECT
            (SELECT CRM_NM FROM CAM_CRM.DJ_CRM_INFO WHERE REPLACE(CRM_NO, '-', '') = A.MER_BIZNO) AS CRM_NM,
            (SELECT CRM_SN FROM CAM_CRM.DJ_CRM_INFO WHERE REPLACE(CRM_NO, '-', '') = A.MER_BIZNO) AS CRM_SN,
            A.*,
            B.CLTTR_CD,
            B.TR_CD,
            B.JIRO_NM,
            B.BA_NB,
            B.DEPOSITOR,
            B.TR_NM,
            scp.dec_b64('KEY1', B.CARD_BA_NB) AS CARD_BA_NB,
            B.CVC,
            C.*,
            REPLACE((SELECT PATH_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = F.DEPT_SEQ), '|', ' ') AS USE_DEPT_NAME,
            CONCAT((SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = F.DEPT_SEQ), " ", E.USE_EMP_NAME) AS USE_MEM,
            E.USE_EMP_NAME
        FROM
            CAM_HR.ERP_HIST_CORPCD_USE A
                LEFT JOIN
            CAM_MNG.DJ_CARD_INFO B
            ON
                A.CARD_NO = REPLACE(B.CARD_BA_NB, '-', '')
                LEFT JOIN
            CAM_MNG.DJ_CARD_PRIV BB
            ON
                B.TR_CD = BB.TR_CD AND B.CARD_BA_NB = BB.CARD_BA_NB
                LEFT JOIN
            CAM_MNG.DJ_CARD_AUTH_MNG BC
            ON
                BB.CARD_BA_NB = BC.CARD_NO AND BB.TR_CD = BC.TR_CD
                LEFT JOIN
            CAM_MNG.DJ_USE_CARD_INFO C
            ON
                A.AUTH_NO = C.AUTH_NO AND A.AUTH_DD = C.AUTH_DD AND A.AUTH_HH = C.AUTH_HH AND A.CARD_NO = REPLACE(C.CARD_NO, "-", "")
                LEFT JOIN
            CAM_MNG.DJ_CARD_TO_HIST D
            ON
                A.AUTH_NO = D.AUTH_NO AND A.AUTH_DD = D.AUTH_DD AND A.AUTH_HH = D.AUTH_HH AND A.CARD_NO = REPLACE(D.CARD_NO, "-", "")
                LEFT JOIN
            CAM_MNG.DJ_CARD_TO E
            ON
                D.CARD_TO_SN = E.CARD_TO_SN
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO F
            ON
                E.USE_EMP_SEQ = F.EMP_SEQ
        WHERE 1=1
        AND
            CASE
                WHEN '1' IN (SELECT EMP_SEQ FROM CAM_MNG.DJ_CARD_AUTH_USER_MNG) THEN (BB.TR_CD IS NULL OR BC.TR_CD IS NOT NULL)
                ELSE BB.TR_CD IS NULL
            END
        AND A.AUTH_NO = #{authNo} AND A.AUTH_HH = #{authHh} AND A.AUTH_DD = #{authDd} AND A.CARD_NO = REPLACE(#{cardNo}, "-", "")
        LIMIT 1
    </select>

    <select id="getDetailEtaxInfo" parameterType="map" resultType="map">
        /*getDetailEtaxInfo*/
        SELECT
            A.*
        FROM
            CAM_MNG.DJ_ETAX_INFO A
        WHERE
            1 = 1
        AND
            ISS_NO = #{issNo}
        AND
            CO_CD = #{coCd}
        AND
            TAX_TY = #{taxTy}
        LIMIT 1
    </select>

    <select id="getMaxCeGwIdx" parameterType="map" resultType="int">
        /*getMaxCeGwIdx*/
        SELECT
            MAX(CE_GW_IDX)
        FROM
            CAM_MNG.DJ_CLAIM_EXNP_IDX_HIST
    </select>

    <select id="getClaimListByPurcSn" parameterType="map" resultType="map">
        /*getClaimListByPurcSn*/
        SELECT
            *
        FROM
            CAM_MNG.DJ_PURC_CLAIM
        WHERE
            PURC_SN = #{purcSn}
    </select>

    <update id="updClaimPurcOrder" parameterType="map">
        /*updClaimPurcOrder*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            ORDER_DT = #{orderDt},
            GOODS_DT = #{goodsDt},
            ORDER_YN = #{orderYn}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <select id="getPurcReqClaimList" parameterType="map" resultType="map">
        /*getPurcReqClaimList*/
        SELECT
            *
        FROM (
            SELECT
                IFNULL(DI.DOC_NO,(SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID)) AS DOC_NO,
                IFNULL(B.PURC_REQ_DATE, A.CLAIM_DE) as PURC_REQ_DATE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) AS EMP_NAME_KR,
                IFNULL(B.PURC_REQ_PURPOSE, A.PURC_REQ_PURPOSE) AS PURC_REQ_PURPOSE,
                A.PURC_SN,
                B.STATUS,
                B.DOC_STATUS,
                '' AS InTax,
                IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM,
                IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
                'CAYSY' AS CLAIM_STATUS,
                A.CLAIM_SN,
                A.STATUS AS CLAIM_DOC_STATUS,
                A.DOC_ID AS CLAIM_DOC_ID,
                (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS APPRO_KEY,
                A.INSPECT_YN,
                A.INSPECT_STATUS,
                IFNULL(A.PAYMENT_METHOD, B.PAYMENT_METHOD) AS PAYMENT_METHOD,
                A.ORDER_DT,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = PA.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "") AS EXNP_DOC_STATUS,
                PA.DOC_STATUS AS PAY_DOC_STATUS,
                B.REG_DATE,
                A.CRM_NM,
                'N' AS ORG_YN,
                (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS,
                (SELECT DOC_ID FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN =  B.PURC_SN) AS PURC_DOC_ID
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                CAM_MNG.DJ_MNG_PURC B
            ON
                A.PURC_SN = B.PURC_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI
            ON
                B.DOC_ID = DI.DOC_ID
            LEFT JOIN
                CAM_MNG.DJ_CLAIM_EXNP CE
                ON CE.CLAIM_SN = A.CLAIM_SN
            LEFT JOIN
                CAM_MNG.DJ_PAY_APP PA
                ON PA.PAY_APP_SN = CE.PAY_APP_SN
            WHERE
                A.PJT_SN =  #{pjtSn}
            UNION ALL
            SELECT
                DI.DOC_NO,
                B.PURC_REQ_DATE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.PURC_REQ_EMP_SEQ) AS EMP_NAME_KR,
                B.PURC_REQ_PURPOSE,
                B.PURC_SN,
                B.STATUS,
                B.DOC_STATUS,
                '' AS InTax,
                0,
                IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
                '' AS CLAIM_STATUS,
                '',
                '',
                '',
                '',
                '' AS INSPECT_YN,
                '' AS INSPECT_STATUS,
                B.PAYMENT_METHOD,
                null,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = PA.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
                (SELECT COUNT(*) FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = PA.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "") AS EXNP_DOC_STATUS,
                PA.DOC_STATUS AS PAY_DOC_STATUS,
                B.REG_DATE,
                (SELECT CRM_NM FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = (SELECT CRM_SN FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1)) AS CRM_NM,
                'N' AS ORG_YN,
                (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS,
                (SELECT DOC_ID FROM CAM_MNG.DJ_MNG_PURC WHERE PURC_SN =  B.PURC_SN) AS PURC_DOC_ID
            FROM
                CAM_MNG.DJ_MNG_PURC B
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI
            ON
                B.DOC_ID = DI.DOC_ID
            LEFT JOIN
                CAM_MNG.DJ_PAY_APP PA
            ON PA.LINK_KEY = B.PURC_SN AND PA.LINK_KEY_TYPE = '구매'
            WHERE
                B.PJT_SN = #{pjtSn}
            AND
                (SELECT COUNT(*) FROM CAM_MNG.DJ_PURC_CLAIM WHERE PURC_SN = B.PURC_SN) = 0
            UNION ALL
            SELECT
                A.JDocNo AS DOC_NO,
                DATE_FORMAT(A.JReqDate, '%Y-%m-%d') AS PURC_REQ_DATE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.ReqUserID) AS EMP_NAME_KR,
                A.JReason AS PURC_REQ_PURPOSE,
                '' as PURC_SN,
                '' as STATUS,
                '' as DOC_STATUS,
                A.InTax,
                (SELECT SUM(JSUM) FROM DJ_CAMTIC.JPRICEITEM WHERE JPRICENO = A.JPRICENO) AS PURC_ITEM_AMT_SUM,
                '' AS APPROVE_STAT_CODE,
                'CAYSY' AS CLAIM_STATUS,
                '' AS CLAIM_SN,
                '' AS CLAIM_DOC_STATUS,
                '' AS CLAIM_DOC_ID,
                '' AS APPRO_KEY,
                '' as INSPECT_YN,
                '' as INSPECT_STATUS,
                '' as PAYMENT_METHOD,
                '' as ORDER_DT,
                '' AS EXNP_STATUS,
                '' AS EXNP_DOC_STATUS,
                '' AS PAY_DOC_STATUS,
                DATE_FORMAT(A.JReqDate, '%Y-%m-%d') as REG_DATE,
                '' AS CRM_NM,
                'Y' AS ORG_YN,
                '',
                ''
            FROM
                DJ_CAMTIC.JPRICEINFO A
            LEFT JOIN
                DJ_CAMTIC.PROJECTACCEPTINFO B
            ON
                A.JCode = B.ProjectCode
            WHERE
                A.JState != 1
            AND B.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
        ) RE
        GROUP BY RE.CLAIM_SN
        ORDER BY RE.PURC_REQ_DATE DESC
    </select>

    <select id="getPurcReqClaimList2" parameterType="map" resultType="map">
        /*getPurcReqClaimList2*/
        SELECT
            *
        FROM (
            SELECT
                IFNULL(DI.DOC_NO,(SELECT DOC_NO FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID)) AS DOC_NO,
                IFNULL(B.PURC_REQ_DATE, A.CLAIM_DE) as PURC_REQ_DATE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PURC_EMP_SEQ) AS EMP_NAME_KR,
                IFNULL(B.PURC_REQ_PURPOSE, A.PURC_REQ_PURPOSE) AS PURC_REQ_PURPOSE,
                A.PURC_SN,
                B.STATUS,
                B.DOC_STATUS,
                '' AS InTax,
                IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM,
                IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
                'CAYSY' AS CLAIM_STATUS,
                A.CLAIM_SN,
                A.STATUS AS CLAIM_DOC_STATUS,
                A.DOC_ID AS CLAIM_DOC_ID,
                (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS APPRO_KEY,
                IFNULL(B.INSPECT_YN, A.INSPECT_YN) AS INSPECT_YN,
                A.INSPECT_STATUS,
                IFNULL(B.PAYMENT_METHOD, A.PAYMENT_METHOD) AS PAYMENT_METHOD,
                A.ORDER_DT,
                B.REG_DATE,
                A.CRM_NM,
                'N' AS ORG_YN,
                (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS
            FROM
                CAM_MNG.DJ_PURC_CLAIM A
            LEFT JOIN
                CAM_MNG.DJ_MNG_PURC B ON A.PURC_SN = B.PURC_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI ON B.DOC_ID = DI.DOC_ID
            WHERE
                A.PJT_SN = #{pjtSn}

            UNION ALL

            SELECT
                A.JDocNo AS DOC_NO,
                DATE_FORMAT(A.JReqDate, '%Y-%m-%d') AS PURC_REQ_DATE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.ReqUserID) AS EMP_NAME_KR,
                A.JReason AS PURC_REQ_PURPOSE,
                '' as PURC_SN,
                '' as STATUS,
                '' as DOC_STATUS,
                A.InTax,
                (SELECT SUM(JSUM) FROM DJ_CAMTIC.JPRICEITEM WHERE JPRICENO = A.JPRICENO) AS PURC_ITEM_AMT_SUM,
                '' AS APPROVE_STAT_CODE,
                'CAYSY' AS CLAIM_STATUS,
                '' AS CLAIM_SN,
                '' AS CLAIM_DOC_STATUS,
                '' AS CLAIM_DOC_ID,
                '' AS APPRO_KEY,
                '' as INSPECT_YN,
                '' as INSPECT_STATUS,
                '' as PAYMENT_METHOD,
                '' as ORDER_DT,
                DATE_FORMAT(A.JReqDate, '%Y-%m-%d') as REG_DATE,
                '' AS CRM_NM,
                'Y' AS ORG_YN,
                ''
            FROM
                DJ_CAMTIC.JPRICEINFO A
            LEFT JOIN
                DJ_CAMTIC.PROJECTACCEPTINFO B ON A.JCode = B.ProjectCode
            WHERE
                A.JState != 1
            AND B.ProjectCode = (SELECT LEFT(PJT_CD,9) FROM CAM_PJT_MNG.DJ_PROJECT where PJT_SN = #{pjtSn})
        ) RE
        ORDER BY RE.PURC_REQ_DATE DESC
    </select>

    <select id="getPurcReqClaimEmpList" parameterType="map" resultType="map">
        /*getPurcReqClaimEmpList*/
        SELECT * FROM (
        SELECT
            DI.DOC_NO,
            B.PURC_REQ_DATE,
            B.PURC_REQ_EMP_SEQ,
            IFNULL(
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = A.PURC_EMP_SEQ
                ),
                (
                    SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                    LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                    WHERE SEI.EMP_SEQ = B.PURC_REQ_EMP_SEQ
                )
            ) AS PURC_DEPT_NAME,
            B.PJT_SN,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.PURC_REQ_EMP_SEQ) AS EMP_NAME_KR,
            B.PURC_REQ_PURPOSE,
            A.PURC_SN,
            IFNULL(A.PURC_TYPE, B.PURC_TYPE) AS PURC_TYPE,
            B.STATUS,
            B.DOC_ID AS PURC_DOC_ID,
            B.DOC_STATUS,
            IFNULL((SELECT SUM(ITEM_AMT) FROM CAM_MNG.DJ_PURC_CLAIM_ITEM WHERE CLAIM_SN = A.CLAIM_SN), 0) AS PURC_ITEM_AMT_SUM,
            IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
            'CAYSY' AS CLAIM_STATUS,
            A.CLAIM_SN,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.CLAIM_EMP_SEQ) AS CLAIM_EMP_NAME,
            A.STATUS AS CLAIM_DOC_STATUS,
            A.DOC_ID AS CLAIM_DOC_ID,
            (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = A.DOC_ID) AS APPRO_KEY,
            A.INSPECT_YN,
            A.INSPECT_STATUS,
            B.PAYMENT_METHOD,
            A.ORDER_DT,
            A.ORDER_YN,
            IFNULL(aa.ITEM_COUNT,0) AS ITEM_COUNT,
            IFNULL(bb.EXNP_STATUS,0) AS EXNP_STATUS,
            IFNULL(cc.EXNP_DOC_STATUS,0) AS EXNP_DOC_STATUS,
            (SELECT DOC_STATUS FROM CAM_MNG.DJ_PAY_APP WHERE PAY_APP_SN = C.PAY_APP_SN) AS PAY_DOC_STATUS,
            B.REG_DATE,
            A.CRM_NM,
            A.PJT_NM,
            (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS,
            B.REG_EMP_SEQ
        FROM
            CAM_MNG.DJ_PURC_CLAIM A
        LEFT JOIN
            CAM_MNG.DJ_MNG_PURC B
        ON
            A.PURC_SN = B.PURC_SN
        LEFT JOIN
            CAM_MNG.DJ_CLAIM_EXNP C
        ON
            A.CLAIM_SN = C.CLAIM_SN AND C.PAY_APP_SN IS NOT NULL
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            B.DOC_ID = DI.DOC_ID
        LEFT JOIN (
            SELECT COUNT(PAY_APP_DET_SN) AS ITEM_COUNT, PAY_APP_SN FROM CAM_MNG.DJ_PAY_APP_DET WHERE TOT_COST != 0 GROUP BY PAY_APP_SN
        ) aa ON aa.PAY_APP_SN = C.PAY_APP_SN
        LEFT JOIN (
            SELECT COUNT(PAY_APP_DET_SN) AS EXNP_STATUS, PAY_APP_SN FROM CAM_MNG.DJ_PAY_APP_DET WHERE EXNP_SAVE = 'Y' GROUP BY PAY_APP_SN
        ) bb ON bb.PAY_APP_SN = C.PAY_APP_SN
            LEFT JOIN (
            SELECT COUNT(EXNP_SN) AS EXNP_DOC_STATUS, PAY_APP_SN FROM CAM_MNG.DJ_EXNP WHERE REQ_END_DE IS NOT NULL AND REQ_END_DE != '' GROUP BY PAY_APP_SN
        ) cc ON cc.PAY_APP_SN = C.PAY_APP_SN
        WHERE 1=1
        GROUP BY A.CLAIM_SN
        UNION ALL
        SELECT
            DI.DOC_NO,
            B.PURC_REQ_DATE,
            B.PURC_REQ_EMP_SEQ,
            (
                SELECT SDI.DEPT_NAME FROM CAM_HR.DJ_EMP_INFO SEI
                LEFT JOIN CAM_HR.DJ_DEPT_INFO SDI ON SEI.DEPT_SEQ = SDI.DEPT_SEQ
                WHERE SEI.EMP_SEQ = B.PURC_REQ_EMP_SEQ
            ) AS PURC_DEPT_NAME,
            B.PJT_SN,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = B.PURC_REQ_EMP_SEQ) AS EMP_NAME_KR,
            B.PURC_REQ_PURPOSE,
            B.PURC_SN,
            B.PURC_TYPE,
            B.STATUS,
            B.DOC_ID AS PURC_DOC_ID,
            B.DOC_STATUS,
            0 AS PURC_ITEM_AMT_SUM,
            IFNULL(DI.APPROVE_STAT_CODE,0) AS APPROVE_STAT_CODE,
            '' AS CLAIM_STATUS,
            '' AS CLAIM_SN,
            '' AS CLAIM_EMP_NAME,
            '' AS CLAIM_DOC_STATUS,
            '' AS CLAIM_DOC_ID,
            '' AS APPRO_KEY,
            '' AS INSPECT_YN,
            '' AS INSPECT_STATUS,
            B.PAYMENT_METHOD,
            NULL AS ORDER_DT,
            'N' AS ORDER_YN,
            '' AS ITEM_COUNT,
            '' AS EXNP_STATUS,
            '' AS EXNP_DOC_STATUS,
            '' AS PAY_DOC_STATUS,
            B.REG_DATE,
            '' AS CRM_NM,
            B.PJT_NM,
            (SELECT STATUS FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN = B.PURC_SN LIMIT 1) AS RE_STATUS,
            B.REG_EMP_SEQ
        FROM
            CAM_MNG.DJ_MNG_PURC B
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            B.DOC_ID = DI.DOC_ID
        WHERE
            (SELECT COUNT(*) FROM CAM_MNG.DJ_PURC_CLAIM WHERE PURC_SN = B.PURC_SN) = 0
        ) RE
        WHERE
            1=1
            <choose>
                <when test='searchDept != null and !"".equals(searchDept)'>
                    AND RE.PURC_REQ_EMP_SEQ = #{empSeq}
                </when>
                <otherwise>
                    AND RE.DOC_STATUS = '100' AND PJT_SN != ''
                </otherwise>
            </choose>
            <if test='pjtSn != null and !"".equals(pjtSn)'>
                AND RE.PJT_SN = #{pjtSn}
            </if>

            <if test='searchValue != null and !"".equals(searchValue)'>
                <choose>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "DOC_NO".equals(searchKeyword)'>
                        AND RE.DOC_NO LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_REQ_PURPOSE".equals(searchKeyword)'>
                        AND RE.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "CRM_NM".equals(searchKeyword)'>
                        AND RE.CRM_NM LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "PJT_NM".equals(searchKeyword)'>
                        AND RE.PJT_NM LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "PURC_EMP_NAME".equals(searchKeyword)'>
                        AND RE.EMP_NAME_KR LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <when test='searchKeyword != null and !"".equals(searchKeyword) and "CLAIM_EMP_NAME".equals(searchKeyword)'>
                        AND RE.CLAIM_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
                    </when>
                    <otherwise>
                        AND
                        (
                            RE.DOC_NO LIKE CONCAT('%',#{searchValue},'%') OR
                            RE.PURC_REQ_PURPOSE LIKE CONCAT('%',#{searchValue},'%') OR
                            RE.CRM_NM LIKE CONCAT('%',#{searchValue},'%') OR
                            RE.PJT_NM LIKE CONCAT('%',#{searchValue},'%') OR
                            RE.EMP_NAME_KR LIKE CONCAT('%',#{searchValue},'%') OR
                            RE.CLAIM_EMP_NAME LIKE CONCAT('%',#{searchValue},'%')
                        )
                    </otherwise>
                </choose>
            </if>

            <choose>
                <when test='"1".equals(inspectStat)'>
                    AND RE.INSPECT_YN = 'N' AND INSPECT_STATUS != '100'
                </when>
                <when test='"2".equals(inspectStat)'>
                    AND RE.INSPECT_YN = 'Y' AND INSPECT_STATUS = '0'
                </when>
                <when test='"3".equals(inspectStat)'>
                    AND RE.INSPECT_YN = 'Y' AND INSPECT_STATUS = '100'
                </when>
            </choose>

            <choose>
                <when test='busnClass != null and !"".equals(busnClass) and "C".equals(busnClass)'>
                    AND RE.PURC_TYPE = ''
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "R".equals(busnClass)'>
                    AND RE.PURC_TYPE = 'R'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "S".equals(busnClass)'>
                    AND RE.PURC_TYPE = 'S'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "D".equals(busnClass)'>
                    AND RE.PURC_TYPE = 'D'
                </when>
                <when test='busnClass != null and !"".equals(busnClass) and "V".equals(busnClass)'>
                    AND RE.PURC_TYPE = 'V'
                </when>
            </choose>
        ORDER BY RE.REG_DATE DESC
    </select>

    <select id="getPurcClaimExnpList" parameterType="map" resultType="map">
        /*getPurcClaimExnpList*/
        SELECT
            A.*,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.EMP_SEQ) AS EMP_NAME_KR,
            (SELECT BUDGET_NM FROM CAM_MNG.DJ_CLAIM_SETTING WHERE CLAIM_SN = A.CLAIM_SN) AS BUDGET_NM
        FROM
            CAM_MNG.DJ_CLAIM_EXNP A
        WHERE
            CLAIM_SN = #{claimSn}
    </select>

    <select id="getClaimExnpDataByPay" parameterType="map" resultType="map">
        /*getClaimExnpDataByPay*/
        SELECT
            SUB.*
        FROM
        (
            SELECT
                A.*,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.EMP_SEQ) AS EMP_NAME_KR,

                B.DOC_ID AS CLAIM_DOC_ID,
                D.APPRO_KEY AS CLAIM_APPRO_KEY,
                D.DOC_TITLE AS CLAIM_DOC_TITLE,
                D.DOC_NO AS CLAIM_DOC_NO,

                C.DOC_ID AS PURC_DOC_ID,
                E.APPRO_KEY AS PURC_APPRO_KEY,
                E.DOC_TITLE AS PURC_DOC_TITLE,
                E.DOC_NO AS PURC_DOC_NO,
                ROW_NUMBER() OVER (PARTITION BY A.CLAIM_SN ORDER BY A.REG_DATE DESC) AS row_num
            FROM
                CAM_MNG.DJ_CLAIM_EXNP A
            LEFT JOIN CAM_MNG.DJ_PURC_CLAIM B ON A.CLAIM_SN = B.CLAIM_SN
            LEFT JOIN CAM_MNG.DJ_MNG_PURC C ON B.PURC_SN = C.PURC_SN
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO D ON B.DOC_ID = D.DOC_ID
            LEFT JOIN DJ_CAMTIC.A_DOC_INFO E ON C.DOC_ID = E.DOC_ID
            WHERE
                A.PAY_APP_SN = #{payAppSn}
            ORDER BY A.REG_DATE DESC
        ) SUB
        WHERE SUB.row_num = 1
    </select>

    <delete id="delClaimExnpData" parameterType="map">
        /*delClaimExnpData*/
        DELETE FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CE_GW_IDX = (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn})
    </delete>

    <delete id="delClaimExnpUseCardInfo" parameterType="map">
        /*delClaimExnpUseCardInfo*/
        DELETE FROM CAM_MNG.DJ_USE_CARD_INFO WHERE CE_GW_IDX = (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn})
    </delete>

    <delete id="delClaimExnpUseEtaxInfo" parameterType="map">
        /*delClaimExnpUseEtaxInfo*/
        DELETE FROM CAM_MNG.DJ_USE_ETAX_INFO WHERE CE_GW_IDX = (SELECT CE_GW_IDX FROM CAM_MNG.DJ_CLAIM_EXNP WHERE CLAIM_EXNP_SN = #{claimExnpSn})
    </delete>

    <update id="updClaimExpDe" parameterType="map">
        /*updClaimExpDe*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            EXP_DE = #{expDe}
        WHERE
            CLAIM_SN IN (${claimSnArr})
    </update>

    <update id="updClaimInspectStat" parameterType="map">
        /*updClaimInspectStat*/
        UPDATE CAM_MNG.DJ_PURC_CLAIM
        SET
            INSPECT_YN = 'Y',
            INSPECT_STATUS = #{status}
        WHERE
            CLAIM_SN = #{claimSn}
    </update>
</mapper>