<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="evaluation">

    <select id="requestEvaluationMemberTot" parameterType="map" resultType="map">
        /*requestEvaluationMemberTot*/
        <![CDATA[
        SELECT
            IF(DUTY_NAME = '' || DUTY_NAME IS NULL, POSITION_NAME, DUTY_NAME) AS DUTY_POSITION_NAME,
            IF(T1_A = '' || T1_A IS NULL, T1_B, T1_A) AS T1,
            IF(T2_A = '' || T2_A IS NULL, T2_B, T2_A) AS T2,
            CASE
                WHEN OCCUPATION_NM = 'P&M' THEN CONCAT('경영관리(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'A&C' THEN CONCAT('기업지원(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'R&D' THEN CONCAT('연구개발(', OCCUPATION_NM,')')
                ELSE ''
                END AS OCC_NM,
            Z.*
        FROM
            (SELECT
                IF(A.DUTY_CODE = '2', '노상흡 원장', '') AS T1_A
                , IF(A.DUTY_CODE = '', IFNULL(
                                            (SELECT CONCAT(EMP_NAME_KR, ' 팀장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = A.DEPT_SEQ AND DUTY_CODE IN ('4', '5'))
                                            , (SELECT CONCAT(EMP_NAME_KR, ' 실장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE = '7'))
                    , (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7'))) AS T1_B
                , IF(A.DUTY_CODE = '5', '노상흡 원장', '') AS T2_A
                , IF(A.DUTY_CODE = '', (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7')), '') AS T2_B
                , A.DUTY_NAME AS T2_NAME
                , (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, A.DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ))) AS DEPT_NAME_OD
                , (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 9 AND CM_CODE = A.OCCUPATION_CODE) AS OCCUPATION_NM
                , IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, '', B.DEPT_NAME) AS TEAM_NAME
                ,(SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ= A.DEPT_SEQ) AS PARENT_DEPT_SEQ
                ,A.*
                ,SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire
                ,CONCAT(SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1) AS hire_mon
            FROM
                CAM_HR.DJ_EMP_INFO A
            LEFT JOIN
                CAM_HR.DJ_DEPT_INFO B
            ON
                A.DEPT_SEQ = B.DEPT_SEQ
            WHERE
                A.ACTIVE = 'Y'
            AND
                A.WORK_STATUS_CODE = 'Y'
            AND
                DATE_FORMAT(#{bsYMD}, '%Y%m%d') >= DATE_FORMAT(A.JOIN_DAY, '%Y%m%d')
            AND
                OCCUPATION_CODE IN (1,2,3)) Z
        ORDER BY
            (CASE
            WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) BETWEEN 48 AND 57 THEN 3
            WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) < 128 THEN 2 ELSE 1 END),
            Z.DEPT_NAME_OD, TEAM_NAME,
            FIELD(DUTY_CODE, 1, 2, 3, 7, 4, 5, ''), EMP_NAME_KR
        ]]>
    </select>

    <select id="getRequestEvaluationUser" parameterType="map" resultType="map">
        SELECT
            A.EVAL_EMP_SEQ
        FROM
            CAM_INSIDE.DJ_EVALUATION_MEM A
        WHERE
            EVAL_SN = #{evalSn}
    </select>

    <select id="getRequestEvaluationUserCnt" parameterType="map" resultType="map">
        SELECT COUNT(A.EVAL_EMP_SEQ) as cnt
        FROM
            CAM_INSIDE.DJ_EVALUATION_MEM A
        WHERE
            EVAL_SN = #{evalSn}
    </select>

    <select id="getEvaluationList" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.*,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_EVALUATION_MEM WHERE eval_sn = A.EVAL_SN) AS EVAL_MEM
        FROM
            CAM_INSIDE.DJ_EVALUATION A
        LEFT JOIN
            CAM_INSIDE.dj_evaluation_cap B ON A.EVAL_SN = B.EVAL_SN
        WHERE
            A.ACTIVE = 'Y'
          AND
            A.BS_YEAR = #{year}
    </select>


    <select id="getEvaluationOne" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION
        WHERE
            ACTIVE = 'Y'
        ORDER BY EVAL_SN DESC
        LIMIT 1;
    </select>

    <select id="getEvaluationOneList" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.*
        FROM
            CAM_INSIDE.DJ_EVALUATION A
        LEFT JOIN
            CAM_INSIDE.DJ_EVALUATION_CAP B ON A.EVAL_SN = B.EVAL_SN
        WHERE
            A.ACTIVE = 'Y'
        AND
            A.EVAL_SN = #{evalSn}
    </select>

    <select id="getEvaluation" parameterType="map" resultType="map">
        /*getEvaluation*/
        SELECT
            A.*,
            B.*
        FROM
            CAM_INSIDE.DJ_EVALUATION A
        LEFT JOIN
            CAM_INSIDE.DJ_EVALUATION_CAP B ON A.EVAL_SN = B.EVAL_SN
        WHERE
            A.ACTIVE = 'Y'
          AND
            A.EVAL_SN = #{evalSn}
    </select>

    <select id="getEvaluationBs" parameterType="map" resultType="map">
        /*getEvaluationBs*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_APP
        WHERE
            EVAL_SN = #{evalSn}
          AND
            EVAL_TYPE = 'business'
    </select>

    <select id="getEvaluationBt" parameterType="map" resultType="map">
        /*getEvaluationBs*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_APP
        WHERE
            EVAL_SN = #{evalSn}
          AND
            EVAL_TYPE = 'support'
    </select>

    <select id="getEvaluationBsList" parameterType="map" resultType="map">
        /*getEvaluationBsList*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_APP_TEAM
        WHERE
            EVAL_SN = #{evalSn}
          AND
            EVAL_TYPE = 'business'
    </select>

    <select id="getEvaluationBtList" parameterType="map" resultType="map">
        /*getEvaluationBsList*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_APP_TEAM
        WHERE
            EVAL_SN = #{evalSn}
          AND
            EVAL_TYPE = 'support'
    </select>

    <select id="getEvaluationScList" parameterType="map" resultType="map">
        /*getEvaluationScList*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_GRADE
        WHERE
            EVAL_SN = #{evalSn}
    </select>

    <insert id="insEvaluation" parameterType="map">
        /*insEvaluation*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION
            (
                 BS_YEAR,
                 EVAL_NUM,
                 EVAL_STAT,
                 EVAL_CONTENT,
                 REG_EMP_SEQ
            )
        VALUES
            (
                #{bsYear},
                #{evalNum},
                #{evalStat},
                #{content},
                #{regEmpSeq}
            )

        <selectKey keyProperty="evalSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_EVALUATION'
        </selectKey>
    </insert>

    <update id="updEvaluation" parameterType="map">
        /*updEvaluation*/
        UPDATE
            CAM_INSIDE.DJ_EVALUATION
        SET
            BS_YEAR = #{bsYear},
            EVAL_NUM = #{evalNum},
            EVAL_STAT = #{evalStat},
            EVAL_CONTENT = #{content},
            MOD_EMP_SEQ =  #{regEmpSeq}
        WHERE
            EVAL_SN = #{evalSn}
    </update>

    <insert id="insEvaluationAppBt" parameterType="map">
        /*insEvaluationAppBt*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_APP
            (
                EVAL_SN,
                EVAL_TYPE,
                TEAM_SUM,
                TEAM_LEADER_TEAM,
                TEAM_LEADER_TEAM_RESULT,
                TEAM_LEADER_DEPT,
                TEAM_LEADER_DEPT_RESULT,
                TEAM_LEADER_SUM,
                DEPT_HD_DEPT,
                DEPT_HD_DEPT_RESULT,
                DEPT_HD_COR,
                DEPT_HD_COR_RESULT,
                DEPT_HD_SUM,
                REG_DT,
                REG_EMP_SEQ
            )
            VALUES
            (
                #{evalSn},
                'business',
                #{btSum},
                #{btResult1},
                #{btResult2},
                #{bdResult1},
                #{bdResult2},
                #{bdSum},
                #{bhResult1},
                #{bhResult2},
                #{bcResult1},
                #{bcResult2},
                #{bhSum},
                NOW(),
                #{regEmpSeq}
            )
    </insert>

    <update id="updEvaluationAppBt" parameterType="map">
        /*updEvaluationAppBt*/
        UPDATE
            CAM_INSIDE.DJ_EVALUATION_APP
        SET
            TEAM_SUM = #{btSum},
            TEAM_LEADER_TEAM = #{btResult1},
            TEAM_LEADER_TEAM_RESULT = #{btResult2},
            TEAM_LEADER_DEPT = #{bdResult1},
            TEAM_LEADER_DEPT_RESULT = #{bdResult2},
            TEAM_LEADER_SUM = #{bdSum},
            DEPT_HD_DEPT = #{bhResult1},
            DEPT_HD_DEPT_RESULT = #{bhResult2},
            DEPT_HD_COR = #{bcResult1},
            DEPT_HD_COR_RESULT = #{bcResult2},
            DEPT_HD_SUM = #{bhSum},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EVAL_SN = #{evalSn}
        AND
            EVAL_TYPE = 'business'
    </update>

    <insert id="insEvaluationAppBs" parameterType="map">
        /*insEvaluationAppBs*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_APP
        (
            EVAL_SN,
            EVAL_TYPE,
            TEAM_SUM,
            TEAM_LEADER_TEAM,
            TEAM_LEADER_TEAM_RESULT,
            TEAM_LEADER_DEPT,
            TEAM_LEADER_DEPT_RESULT,
            TEAM_LEADER_SUM,
            DEPT_HD_DEPT,
            DEPT_HD_DEPT_RESULT,
            DEPT_HD_COR,
            DEPT_HD_COR_RESULT,
            DEPT_HD_SUM,
            REG_DT,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{evalSn},
                'support',
                #{bsSum},
                #{stResult1},
                #{stResult2},
                #{sdResult1},
                #{sdResult2},
                #{sdSum},
                #{shResult1},
                #{shResult2},
                #{scResult1},
                #{scResult2},
                #{scSum},
                NOW(),
                #{regEmpSeq}
            )
    </insert>

    <update id="updEvaluationAppBs" parameterType="map">
        /*updEvaluationAppBs*/
        UPDATE
            CAM_INSIDE.DJ_EVALUATION_APP
        SET
            TEAM_SUM = #{bsSum},
            TEAM_LEADER_TEAM = #{stResult1},
            TEAM_LEADER_TEAM_RESULT = #{stResult2},
            TEAM_LEADER_DEPT = #{sdResult1},
            TEAM_LEADER_DEPT_RESULT = #{sdResult2},
            TEAM_LEADER_SUM = #{sdSum},
            DEPT_HD_DEPT = #{shResult1},
            DEPT_HD_DEPT_RESULT = #{shResult2},
            DEPT_HD_COR = #{scResult1},
            DEPT_HD_COR_RESULT = #{scResult2},
            DEPT_HD_SUM = #{scSum},
            MOD_DT = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            EVAL_SN = #{evalSn}
          AND
            EVAL_TYPE = 'support'
    </update>

    <insert id="insEvaluationEmp" parameterType="map">
        /*insEvaluationEmp*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_MEM
            (
                 EVAL_SN,
                 EVAL_EMP_SEQ
            )
        VALUES
        <foreach collection="empSeqArr" item="item" separator=",">
            (
                #{evalSn},
                #{item}
            )
        </foreach>
    </insert>

    <insert id="delEvaluationEmp" parameterType="map">
        /*delEvaluationEmp*/
            DELETE FROM CAM_INSIDE.DJ_EVALUATION_MEM WHERE EVAL_SN = #{evalSn}
    </insert>

    <delete id="delEvaluationCap" parameterType="map">
        /*delEvaluationCap*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_CAP WHERE EVAL_SN = #{evalSn}
    </delete>

    <insert id="insEvaluationCap" parameterType="map">
        /*insEvaluationCap*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_CAP
            (
                 EVAL_SN,
                 CAP_IDX,
                 COND_STR_DT,
                 COND_END_DT,
                 EVAL_STR_DT,
                 EVAL_END_DT,
                 TEAM_MEMBER_A,
                 TEAM_MEMBER_B,
                 TEAM_MEMBER_C,
                 TEAM_MANAGER_A,
                 TEAM_MANAGER_B,
                 TEAM_MANAGER_C,
                 DEPT_MANAGER_A,
                 DEPT_MANAGER_B,
                 DEPT_MANAGER_C
            )
        VALUES
            (
                #{evalSn},
                #{idx},
                #{condStrDt},
                #{condEndDt},
                #{evalStrDt},
                #{evalEndDt},
                #{teamMemberA},
                #{teamMemberB},
                #{teamMemberC},
                #{teamManagerA},
                #{teamManagerB},
                #{teamManagerC},
                #{deptManagerA},
                #{deptManagerB},
                #{deptManagerC}
            )
    </insert>

    <delete id="delEvaluationBt" parameterType="map">
        /*delEvaluationBt*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_APP_TEAM WHERE EVAL_SN = #{evalSn} AND EVAL_TYPE = 'business'
    </delete>

    <insert id="insEvaluationBt" parameterType="map">
        /*insEvaluationBt*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_APP_TEAM
            (
                EVAL_SN,
                EVAL_TYPE,
                EVAL_FIELD,
                EVAL_W,
                EVAL_R
            )
        VALUES
            (
                #{evalSn},
                #{evalType},
                #{btField},
                #{btValue},
                #{btScore}
            )
    </insert>

    <delete id="delEvaluationBs" parameterType="map">
        /*delEvaluationBs*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_APP_TEAM WHERE EVAL_SN = #{evalSn} AND EVAL_TYPE = 'support'
    </delete>

    <insert id="insEvaluationBs" parameterType="map">
        /*insEvaluationBs*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_APP_TEAM
            (
                EVAL_SN,
                EVAL_TYPE,
                EVAL_FIELD,
                EVAL_W,
                EVAL_R
            )
        VALUES
            (
                #{evalSn},
                #{evalType},
                #{bsField},
                #{bsValue},
                #{bsScore}
            )
    </insert>

    <delete id="delEvaluationScore" parameterType="map">
        /*delEvaluationScore*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_GRADE WHERE EVAL_SN = #{evalSn}
    </delete>

    <insert id="insEvaluationScore" parameterType="map">
        /*insEvaluationScore*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_GRADE
            (
                EVAL_SN,
                EVAL_GRADE,
                EVAL_LEVEL,
                EVAL_RATE,
                EVAL_SCORE_A,
                EVAL_SCORE_B
            )
        VALUES
            (
                #{evalSn},
                #{scClass},
                #{scLevel},
                #{scPerson},
                #{scScore1},
                #{scScore2}
            )
    </insert>

    <select id="getEvalResultEmpList" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.*,
            C.PARENT_DEPT_SEQ,
        IFNULL((SELECT SUM(EVAL_SCORE) FROM CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT WHERE EVAL_TYPE = 'eval' AND TEM_ACTIVE='Y'AND EVAL_SN = #{evalSn} AND EMP_SEQ= A.EVAL_EMP_SEQ),0)AS EVAL_SCORE,
        IFNULL((SELECT SUM(EVAL_SCORE) FROM CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT WHERE EVAL_TYPE = 'evalF' AND TEM_ACTIVE='Y'AND EVAL_SN = #{evalSn} AND EMP_SEQ= A.EVAL_EMP_SEQ),0)AS EVAL_F_SCORE,
        IFNULL((SELECT SUM(EVAL_SCORE) FROM CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT WHERE EVAL_TYPE = 'evalS' AND TEM_ACTIVE='Y'AND EVAL_SN = #{evalSn} AND EMP_SEQ= A.EVAL_EMP_SEQ),0)AS EVAL_S_SCORE
        FROM
            CAM_INSIDE.dj_evaluation_mem A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B ON A.EVAL_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_HR.dj_dept_info C ON B.DEPT_SEQ = C.DEPT_SEQ

        WHERE
            EVAL_SN = #{evalSn}
        <if test='dept != null and dept != ""'>
            AND C.PARENT_DEPT_SEQ = #{dept}
        </if>
        <if test='team != null and team != ""'>
            AND B.DEPT_SEQ = #{team}
        </if>
        <if test='position != null and position != ""'>
            AND POSITION_CODE = #{position}
        </if>
        <if test='duty != null and duty != ""'>
            AND DUTY_CODE = #{duty}
        </if>
    </select>

    <select id="getEvaluationApp" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_CAP
        WHERE
            EVAL_SN = #{evalSn}
    </select>

    <delete id="delEvaluationMngList" parameterType="map">
        /*delEvaluationMngList*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_ITEM WHERE EVAL_SN = #{evalSn} AND EVAL_TYPE = #{eType} AND EVAL_POSITION_TYPE = #{pType}
    </delete>

    <insert id="setEvaluationMngList" parameterType="map">
        /*setEvaluationMngList*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_ITEM
        (
            EVAL_SN,
            EVAL_TYPE,
            EVAL_POSITION_TYPE,
            EVAL_CAP,
            EVAL_TITLE,
            EVAL_VAL,
            EVAL_STR_S,
            EVAL_STR_A,
            EVAL_STR_B,
            EVAL_END_B,
            EVAL_STR_C,
            EVAL_STR_D,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{evalSn},
                #{eType},
                #{pType},
                #{evalCap},
                #{evalTitle},
                #{evalVal},
                #{gradeS_s},
                #{gradeA_s},
                #{gradeB_s},
                #{gradeB_e},
                #{gradeC_s},
                #{gradeD_s},
                #{empSeq}
            )
    </insert>

    <select id="getEvaluationMngList" parameterType="map" resultType="map">
        /*getEvaluationMngList*/
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVALUATION_ITEM
        WHERE
            EVAL_SN = #{evalSn}
        AND
            EVAL_TYPE = #{eType}
        AND
            EVAL_POSITION_TYPE = #{pType}
    </select>

    <select id="getEvaluationScoreList" parameterType="map" resultType="map">
        /*getEvaluationScoreList*/
        SELECT
            A.*,
            IFNULL(B.EVAL_SCORE, 0) AS EVAL_SCORE,
            B.TEM_ACTIVE
        FROM
            CAM_INSIDE.DJ_EVALUATION_ITEM A
        LEFT JOIN
            CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT B ON A.EVAL_ITEM_ID = B.EVAL_ITEM_ID AND B.EMP_SEQ = #{empSeq}
        WHERE
            A.EVAL_SN = #{evalSn}
       <if test='!"deptHeader".equals(pType)'>
          AND
            A.EVAL_TYPE = #{eType}
      </if>
          AND
            A.EVAL_POSITION_TYPE = #{pType}
          AND (B.EVAL_ITEM_ID IS NULL OR B.EVAL_TYPE = #{rType});
    </select>

    <select id="getUserPersonnelinformOne" parameterType="map" resultType="map">
        /*getUserPersonnelinformOne*/
        <![CDATA[
        SELECT
            IF(DUTY_NAME = '' || DUTY_NAME IS NULL, POSITION_NAME, DUTY_NAME) AS DUTY_POSITION_NAME,
            IF(T1_A = '' || T1_A IS NULL, T1_B, T1_A) AS T1,
            IF(T2_A = '' || T2_A IS NULL, T2_B, T2_A) AS T2,
            CASE
                WHEN OCCUPATION_NM = 'P&M' THEN CONCAT('경영관리(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'A&C' THEN CONCAT('기업지원(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'R&D' THEN CONCAT('연구개발(', OCCUPATION_NM,')')
                ELSE ''
                END AS OCC_NM,
            Z.*
        FROM
            (SELECT
                 IF(A.DUTY_CODE = '2', '노상흡 원장', '') AS T1_A
                  , IF(A.DUTY_CODE = '', IFNULL(
                        (SELECT CONCAT(EMP_NAME_KR, ' 팀장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = A.DEPT_SEQ AND DUTY_CODE IN ('4', '5'))
                    , (SELECT CONCAT(EMP_NAME_KR, ' 실장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE = '7'))
                    , (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7'))) AS T1_B
                  , IF(A.DUTY_CODE = '5', '노상흡 원장', '') AS T2_A
                  , IF(A.DUTY_CODE = '', (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7')), '') AS T2_B
                  , A.DUTY_NAME AS T2_NAME
                  , (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, A.DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ))) AS DEPT_NAME_OD
                  , (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 9 AND CM_CODE = A.OCCUPATION_CODE) AS OCCUPATION_NM
                  , IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, '', B.DEPT_NAME) AS TEAM_NAME
                  ,(SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ= A.DEPT_SEQ) AS PARENT_DEPT_SEQ
                  ,A.*
                  ,SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire
                  ,CONCAT(SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1) AS hire_mon
             FROM
                 CAM_HR.DJ_EMP_INFO A
                     LEFT JOIN
                 CAM_HR.DJ_DEPT_INFO B
                 ON
                     A.DEPT_SEQ = B.DEPT_SEQ
             WHERE
                 A.ACTIVE = 'Y'
               AND
                 A.WORK_STATUS_CODE = 'Y'
               AND
                 DATE_FORMAT(#{bsYMD}, '%Y%m%d') >= DATE_FORMAT(A.JOIN_DAY, '%Y%m%d')
               AND
                 OCCUPATION_CODE IN (1,2,3)
               AND
                 EMP_SEQ=#{empSeq}) Z
        ORDER BY
            (CASE
                 WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) BETWEEN 48 AND 57 THEN 3
                 WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) < 128 THEN 2 ELSE 1 END),
            Z.DEPT_NAME_OD, TEAM_NAME,
            FIELD(DUTY_CODE, 1, 2, 3, 7, 4, 5, ''), EMP_NAME_KR
        ]]>
    </select>

    <delete id="delEvalScoreTemSave" parameterType="map">
        /*delEvalScoreTemSave*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT WHERE EVAL_ITEM_ID = #{evalItemId} AND EVAL_TYPE = #{evalType} AND TEM_ACTIVE = 'N' AND EMP_SEQ = #{empSeq}
    </delete>

    <insert id="setEvalScoreTemSave" parameterType="map">
        /*setEvalScoreTemSave*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT
        (
            EVAL_SN,
            EVAL_ITEM_ID,
            EVAL_EMP_SEQ,
            EMP_SEQ,
            EVAL_SCORE,
            EVAL_TYPE,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{evalSn},
                #{evalItemId},
                #{evalEmpSeq},
                #{empSeq},
                #{evalScore},
                #{evalType},
                #{evalEmpSeq}
            )
    </insert>

    <update id="updEvalScoreTemSave" parameterType="map">
        /*updEvalScoreTemSave*/
        UPDATE
            CAM_INSIDE.DJ_EVALUATION_ITEM_RESULT
        SET
            TEM_ACTIVE = 'Y'
        WHERE
            EVAL_ITEM_ID = #{evalItemId} AND EVAL_TYPE = #{evalType} AND EMP_SEQ = #{empSeq}
    </update>

    <select id="getEvaluationEmpList" parameterType="map" resultType="map">
        /*getEvaluationEmpList*/
        <![CDATA[
        SELECT
              row_number() OVER (ORDER BY (CASE
                WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) BETWEEN 48 AND 57 THEN 3
                WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) < 128 THEN 2 ELSE 1 END),
                Z.DEPT_NAME_OD, TEAM_NAME,
                FIELD(DUTY_CODE, 1, 2, 3, 7, 4, 5, ''), EMP_NAME_KR) AS ROW_NUM,
            IF(DUTY_NAME = '' || DUTY_NAME IS NULL, POSITION_NAME, DUTY_NAME) AS DUTY_POSITION_NAME,
            IF(T1_A = '' || T1_A IS NULL, T1_B, T1_A) AS T1,
            IF(T2_A = '' || T2_A IS NULL, T2_B, T2_A) AS T2,
            CASE
                WHEN OCCUPATION_NM = 'P&M' THEN CONCAT('경영관리(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'A&C' THEN CONCAT('기업지원(', OCCUPATION_NM,')')
                WHEN OCCUPATION_NM = 'R&D' THEN CONCAT('연구개발(', OCCUPATION_NM,')')
                ELSE ''
                END AS OCC_NM,
            Z.*
        FROM
            (SELECT
                 IF(A.DUTY_CODE = '2', '노상흡 원장', '') AS T1_A
                  , IF(A.DUTY_CODE = '', IFNULL(
                        (SELECT CONCAT(EMP_NAME_KR, ' 팀장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = A.DEPT_SEQ AND DUTY_CODE IN ('4', '5'))
                    , (SELECT CONCAT(EMP_NAME_KR, ' 실장') FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE = '7'))
                    , (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7'))) AS T1_B
                  , IF(A.DUTY_CODE = '5', '노상흡 원장', '') AS T2_A
                  , IF(A.DUTY_CODE = '', (SELECT CONCAT(EMP_NAME_KR, ' ', DUTY_NAME) FROM CAM_HR.DJ_EMP_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) AND DUTY_CODE IN ('2','3','7')), '') AS T2_B
                  , A.DUTY_NAME AS T2_NAME
                  , (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, A.DEPT_SEQ, (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ))) AS DEPT_NAME_OD
                  , (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 9 AND CM_CODE = A.OCCUPATION_CODE) AS OCCUPATION_NM
                  , IF((SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ) = 1000, '', B.DEPT_NAME) AS TEAM_NAME
                  ,(SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ= A.DEPT_SEQ) AS PARENT_DEPT_SEQ
                  ,A.*
                  ,SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', 1) AS hire
                  ,CONCAT(SUBSTRING_INDEX(TRUNCATE(TIMESTAMPDIFF(month, A.JOIN_DAY, DATE_FORMAT(NOW(), '%Y-%m-%d')) / 12, 1), '.', -1) + 1) AS hire_mon
                 ,C.*
             FROM
                 CAM_HR.DJ_EMP_INFO A
                     LEFT JOIN
                 CAM_HR.DJ_DEPT_INFO B
                 ON
                     A.DEPT_SEQ = B.DEPT_SEQ
                    INNER JOIN
              CAM_INSIDE.DJ_EVALUATION_MEM C
              ON
                  A.EMP_SEQ = C.EVAL_EMP_SEQ
             WHERE
                 C.EVAL_SN = #{evalSn}
               AND
                 A.ACTIVE = 'Y'
               AND
                 A.WORK_STATUS_CODE = 'Y'
               AND
                 DATE_FORMAT(#{bsYMD}, '%Y%m%d') >= DATE_FORMAT(A.JOIN_DAY, '%Y%m%d')
               AND
                 OCCUPATION_CODE IN (1,2,3)
            ]]>
             <if test='"N".equals(teamLeader) and "N".equals(deptHeader) and deptSeq != null and deptSeq != ""'>
               AND B.DEPT_SEQ = #{deptSeq}
               AND DUTY_CODE NOT IN (1,2,3,4,5,7)
             </if>
             <if test='"Y".equals(teamLeader) and "N".equals(deptHeader) and pDeptSeq != null and pDeptSeq != ""'>
               AND PARENT_DEPT_SEQ = #{pDeptSeq}
               AND DUTY_CODE IN (4,5)
             </if>
            <if test='"N".equals(teamLeader) and "Y".equals(deptHeader) and pDeptSeq != null and pDeptSeq != "" and "1".equals(duty)'>
                AND PARENT_DEPT_SEQ = #{pDeptSeq}
                AND DUTY_CODE IN (2,3,7)
            </if>

             <if test='"N".equals(teamLeader) and "N".equals(deptHeader) and pDeptSeq != null and pDeptSeq != ""'>
               AND PARENT_DEPT_SEQ = #{pDeptSeq}
               AND DUTY_CODE NOT IN (1,2,3,4,5,7)
             </if>
            <if test='"Y".equals(teamLeader) and "N".equals(deptHeader) and "1".equals(duty)'>
                AND PARENT_DEPT_SEQ = #{pDeptSeq}
                AND DUTY_CODE IN (4,5)
            </if>


        <![CDATA[
            ) Z
        ORDER BY
            (CASE
                 WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) BETWEEN 48 AND 57 THEN 3
                 WHEN ASCII(SUBSTRING(Z.DEPT_NAME_OD,1)) < 128 THEN 2 ELSE 1 END),
            Z.DEPT_NAME_OD, TEAM_NAME,
            FIELD(DUTY_CODE, 1, 2, 3, 7, 4, 5, ''), EMP_NAME_KR
        ]]>
    </select>

    <update id="updEvaluationMem" parameterType="map">
        /*updEvaluationMem*/
        UPDATE
            CAM_INSIDE.DJ_EVALUATION_MEM
        SET
        <if test='"eval".equals(evalResultType)'>
            EVAL = 'Y'
        </if>
        <if test='"evalF".equals(evalResultType)'>
            EVAL_F = 'Y'
        </if>
        <if test='"evalS".equals(evalResultType)'>
            EVAL_S = 'Y'
        </if>
        WHERE
            EVAL_SN = #{evalSn} AND EVAL_EMP_SEQ = #{empSeq}
    </update>

    <delete id="delEvaluationItemCopy" parameterType="map">
        /*delEvaluationItemCopy*/
        DELETE FROM CAM_INSIDE.DJ_EVALUATION_ITEM WHERE EVAL_SN = #{evalSn}
    </delete>

    <insert id="setEvaluationItemCopy" parameterType="map">
        /*setEvaluationItemCopy*/
        INSERT INTO CAM_INSIDE.DJ_EVALUATION_ITEM
        (
            EVAL_SN,
            EVAL_TYPE,
            EVAL_POSITION_TYPE,
            EVAL_CAP,
            EVAL_TITLE,
            EVAL_VAL,
            EVAL_STR_S,
            EVAL_STR_A,
            EVAL_STR_B,
            EVAL_END_B,
            EVAL_STR_C,
            EVAL_STR_D,
            REG_EMP_SEQ
        )
        SELECT
            #{evalSn},
            EVAL_TYPE,
            EVAL_POSITION_TYPE,
            EVAL_CAP,
            EVAL_TITLE,
            EVAL_VAL,
            EVAL_STR_S,
            EVAL_STR_A,
            EVAL_STR_B,
            EVAL_END_B,
            EVAL_STR_C,
            EVAL_STR_D,
            #{empSeq}
        FROM CAM_INSIDE.DJ_EVALUATION_ITEM
        WHERE EVAL_SN = #{copyEvalSn}
    </insert>

</mapper>