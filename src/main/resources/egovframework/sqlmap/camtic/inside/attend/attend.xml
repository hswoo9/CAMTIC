<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="attend">
    <select id="getVacCodeList2" parameterType="map" resultType="map">
        /* getVacCodeList2 */
        SELECT
        *
        FROM
        CAM_INSIDE.DJ_SUBHOLIDAY_CODE
        WHERE
        ACTIVE = "Y"
        AND
        SUBHOLIDAY_MC_CODE = #{mcCode}
        <if test="mdCode != null and mdCode !=''">
            AND SUBHOLIDAY_MD_CODE = #{mdCode}
        </if>
        <if test="dtCode != null and dtCode !=''">
            AND SUBHOLIDAY_DT_CODE = #{dtCode}
        </if>
        <if test="notCode != null and notCode!= ''">
            AND SUBHOLIDAY_CODE_ID != '9'
        </if>
            AND SUBHOLIDAY_CODE_ID = '11'
    </select>

    <select id="getPersonAttendList" parameterType="map" resultType="map">
        /* getPersonAttendList */
        WITH RECURSIVE DATE_RANGE AS (
            SELECT #{startDt} as DATES
            UNION
            SELECT DATE_ADD(DATE_RANGE.DATES, INTERVAL 1 DAY) FROM DATE_RANGE
            <![CDATA[
                WHERE DATE_ADD(DATE_RANGE.DATES, INTERVAL 1 DAY) <= #{endDt}
            ]]>
        )
        SELECT
            A.*,

            CASE
                WHEN HOLIDAY IS NOT NULL AND BUSTRIP IS NOT NULL THEN CONCAT(HOLIDAY, ', ', BUSTRIP)
                WHEN HOLIDAY IS NOT NULL AND BUSTRIP IS NULL THEN HOLIDAY
                WHEN HOLIDAY IS NULL AND BUSTRIP IS NOT NULL THEN BUSTRIP
                ELSE ''
            END AS ATTEND_TEXT,

            IFNULL(IFNULL((
                SELECT
                    CONCAT(WORK_TIME, ':00')
                FROM CAM_HR.DJ_ATTEND_ADJUSTMENT HAA
                WHERE
                    A.START_DATE = HAA.TARGET_DATE
                AND A.EMP_SEQ = HAA.TARGET_EMP_SEQ
                AND HAA.TYPE = '1'
                ORDER BY HAA.REG_DATE DESC LIMIT 1
            ), START_TIME), '') AS ATTEND_ADJUSTMENT_START,

            IFNULL(IFNULL((
                SELECT
                    CONCAT(WORK_TIME, ':00')
                FROM CAM_HR.DJ_ATTEND_ADJUSTMENT HAA
                WHERE
                    A.START_DATE = HAA.TARGET_DATE
                AND A.EMP_SEQ = HAA.TARGET_EMP_SEQ
                AND HAA.TYPE = '2'
                ORDER BY HAA.REG_DATE DESC LIMIT 1
            ), END_TIME), '') AS ATTEND_ADJUSTMENT_END
        FROM (
            SELECT
                HEI.EMP_NAME_KR AS Name,
                DR.DATES AS START_DATE,
                HEI.EMP_SEQ AS EMP_SEQ,
                SUBSTR('일월화수목금토', DAYOFWEEK(DR.DATES), 1) AS WEEK,
                CONCAT(SUBSTR(RCD.START_TIME,1,2) , ':' , SUBSTR(RCD.START_TIME,3,2) , ':' , SUBSTR(RCD.START_TIME,5,2)) AS START_TIME,
                CONCAT(SUBSTR(RCD.END_TIME,1,2) , ':' , SUBSTR(RCD.END_TIME,3,2) , ':' , SUBSTR(RCD.END_TIME,5,2)) AS END_TIME,
                (
                    SELECT
                        SUBHOLIDAY_DT_CODE_NM
                    FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH
                    LEFT JOIN CAM_INSIDE.DJ_SUBHOLIDAY_CODE SVCD ON SVUH.SUBHOLIDAY_CODE_ID = SVCD.SUBHOLIDAY_CODE_ID
                    WHERE
                        DR.DATES BETWEEN SVUH.SUBHOLIDAY_ST_DT AND SVUH.SUBHOLIDAY_EN_DT
                    AND SVUH.REG_EMP_SEQ = HEI.EMP_SEQ AND SVUH.APPR_STAT = 'Y'
                    ORDER BY SVUH.REG_DATE DESC LIMIT 1
                ) AS HOLIDAY,

                (
                    SELECT
                        CASE
                            WHEN IHRR.TRIP_CODE = '1' THEN '출장(도내/시내)'
                            WHEN IHRR.TRIP_CODE = '2' THEN '출장(도내/시외)'
                            WHEN IHRR.TRIP_CODE = '3' THEN '도외'
                            WHEN IHRR.TRIP_CODE = '4' THEN '해외'
                            ELSE NULL
                        END
                    FROM CAM_INSIDE.DJ_HR_BIZ_REQ IHR
                    LEFT JOIN CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT IHRR ON IHR.HR_BIZ_REQ_ID = IHRR.HR_BIZ_REQ_ID
                    LEFT JOIN CAM_INSIDE.DJ_HR_BIZ_EXNP IHE ON IHRR.HR_BIZ_REQ_RESULT_ID = IHE.HR_BIZ_REQ_RESULT_ID
                    WHERE
                        DR.DATES BETWEEN IHRR.TRIP_DAY_FR AND IHRR.TRIP_DAY_TO
                    AND IHE.EMP_SEQ = HEI.EMP_SEQ AND IHRR.STATUS = '100'
                    ORDER BY IHRR.CREATE_DATE DESC LIMIT 1
                ) AS BUSTRIP

            FROM DATE_RANGE DR
            LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON HEI.EMP_SEQ = #{empSeq}
            LEFT JOIN (
                SELECT
                    CapsNum,
                    InDate,
                    MIN(CASE WHEN CD.IsType = 1 AND CD.InTime >= '080000' THEN CD.InTime ELSE NULL END) AS START_TIME,
                    MAX(CASE WHEN CD.IsType = 2 THEN CD.InTime ELSE NULL END) AS END_TIME
                FROM CAM_HR.V_CAPS_DATA CD
                GROUP BY InDate, CapsNum
            ) RCD ON RCD.InDate = DATE_FORMAT(DR.DATES, '%Y%m%d') AND HEI.CAPS_NUM = RCD.CapsNum
            GROUP BY DR.DATES
        ) A
        ORDER BY A.START_DATE DESC
    </select>

    <select id="getPersonHrStatus" parameterType="map" resultType="map">
        /* getPersonHrStatus */
        <![CDATA[
        SELECT
            IFNULL(SUM(DATEDIFF(TRIP_DAY_TO_2, TRIP_DAY_FR_2)+1), 0) AS HR
        FROM
            (
                WITH RECURSIVE REQUEST AS (
                    SELECT
                        #{startDt} AS START_DATE,
                        #{endDt} AS END_DATE,
                        #{empSeq} AS EMP_SEQ
                )
                SELECT
                    IHR.TRIP_DAY_FR,
                    IHR.TRIP_DAY_TO,
                    CASE WHEN IHR.TRIP_DAY_FR <= R.START_DATE THEN R.START_DATE ELSE IHR.TRIP_DAY_FR END AS TRIP_DAY_FR_2,
                    CASE WHEN IHR.TRIP_DAY_TO >= R.END_DATE THEN R.END_DATE ELSE IHR.TRIP_DAY_TO END AS TRIP_DAY_TO_2
                FROM
                    CAM_INSIDE.DJ_HR_BIZ_REQ IHR,
                    REQUEST R
                WHERE
                    IHR.TRIP_DAY_TO >= R.START_DATE
                AND IHR.TRIP_DAY_FR <= R.END_DATE
                AND IHR.EMP_SEQ = R.EMP_SEQ
            ) RR
        ]]>
    </select>

    <select id="getPersonHolidayStatus" parameterType="map" resultType="map">
        /* getPersonHolidayStatus */
        WITH RECURSIVE REQUEST AS (
            SELECT
                #{startDt} AS START_DATE,
                #{endDt} AS END_DATE,
                #{empSeq} AS EMP_SEQ
        )
        SELECT
            /** 1연차 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 1
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS ANNUAL,

            /** 3오전반차 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 3
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS MORNING,

            /** 4오후반차 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 4
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS AFTERNOON,

            /** 5병가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 5
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS SICK,

            /** 6공가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 6
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS PUBLICHOLI,

            /** 7경조휴가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 7
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS CONDOLENCES,

            /** 8출산휴가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 8
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS MATERNITY,

            /** 9대체휴가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 9
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS ALTERNATIVE,

            /** 10근속포상휴가 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 10
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS LONGAWARD,

            /** 11휴일근로 */
            (SELECT IFNULL(SUM(SUBHOLIDAY_USE_DAY), 0)
             FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST A
             WHERE SUBHOLIDAY_CODE_ID = 11
               AND APPLY_SEQ = R.EMP_SEQ
               AND APPR_STAT = 'Y'
               AND ACTIVE = 'Y'
               AND DATE_FORMAT(SUBHOLIDAY_ST_DT, '%Y%m%d') <![CDATA[<=]]> DATE_FORMAT(R.END_DATE, '%Y%m%d')
               AND DATE_FORMAT(SUBHOLIDAY_EN_DT, '%Y%m%d') <![CDATA[>=]]> DATE_FORMAT(R.START_DATE, '%Y%m%d')
             ) AS HOLIDAYWORK
        FROM
            REQUEST R
    </select>

    <select id="getPersonAttendStat" parameterType="map" resultType="map">
        /* getPersonAttendStat */
        WITH RECURSIVE DATE_RANGE AS (
            SELECT #{startDt} as DATES
            UNION
            SELECT DATE_ADD(DATE_RANGE.DATES, INTERVAL 1 DAY) FROM DATE_RANGE
            <![CDATA[
                WHERE DATE_ADD(DATE_RANGE.DATES, INTERVAL 1 DAY) <= #{endDt}
            ]]>
        )
        SELECT
            A.*,

            IF(REG_DUTY_NAME = '', REG_POSITION_NAME, REG_DUTY_NAME) AS SPOT,

            CASE
                WHEN HOLIDAY IS NOT NULL AND BUSTRIP IS NOT NULL THEN CONCAT(HOLIDAY, ', ', BUSTRIP)
                WHEN HOLIDAY IS NOT NULL AND BUSTRIP IS NULL THEN HOLIDAY
                WHEN HOLIDAY IS NULL AND BUSTRIP IS NOT NULL THEN BUSTRIP
                ELSE ''
            END AS ATTEND_TEXT,

            IFNULL(IFNULL((
                SELECT
                    CONCAT(WORK_TIME, ':00')
                FROM CAM_HR.DJ_ATTEND_ADJUSTMENT HAA
                WHERE
                    A.START_DATE = HAA.TARGET_DATE
                AND A.EMP_SEQ = HAA.TARGET_EMP_SEQ
                AND HAA.TYPE = '1'
                ORDER BY HAA.REG_DATE DESC LIMIT 1
            ), START_TIME), '') AS ATTEND_ADJUSTMENT_START,

            IFNULL(IFNULL((
                SELECT
                    CONCAT(WORK_TIME, ':00')
                FROM CAM_HR.DJ_ATTEND_ADJUSTMENT HAA
                WHERE
                    A.START_DATE = HAA.TARGET_DATE
                AND A.EMP_SEQ = HAA.TARGET_EMP_SEQ
                AND HAA.TYPE = '2'
                ORDER BY HAA.REG_DATE DESC LIMIT 1
            ), END_TIME), '') AS ATTEND_ADJUSTMENT_END
        FROM (
            SELECT
                HEI.EMP_NAME_KR,
                DR.DATES AS START_DATE,
                HEI.EMP_SEQ,
                HEI.EMP_NAME_KR AS REG_EMP_NAME,
                CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS REG_DEPT_NAME,
                CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS REG_TEAM_NAME,
                HEI.POSITION_NAME AS REG_POSITION_NAME,
                (SELECT SORT FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 4 AND CM_CODE = HEI.POSITION_CODE) AS REG_POSITION_SORT,
                HEI.DUTY_NAME AS REG_DUTY_NAME,
                SUBSTR('일월화수목금토', DAYOFWEEK(DR.DATES), 1) AS WEEK,
                CONCAT(SUBSTR(RCD.START_TIME,1,2) , ':' , SUBSTR(RCD.START_TIME,3,2) , ':' , SUBSTR(RCD.START_TIME,5,2)) AS START_TIME,
                CONCAT(SUBSTR(RCD.END_TIME,1,2) , ':' , SUBSTR(RCD.END_TIME,3,2) , ':' , SUBSTR(RCD.END_TIME,5,2)) AS END_TIME,
                (
                    SELECT
                        SUBHOLIDAY_DT_CODE_NM
                    FROM
                        CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH
                    LEFT JOIN CAM_INSIDE.DJ_SUBHOLIDAY_CODE SVCD ON SVUH.SUBHOLIDAY_CODE_ID = SVCD.SUBHOLIDAY_CODE_ID
                    WHERE
                        DR.DATES BETWEEN SVUH.SUBHOLIDAY_ST_DT AND SVUH.SUBHOLIDAY_EN_DT
                        AND SVUH.REG_EMP_SEQ = HEI.EMP_SEQ AND SVUH.APPR_STAT = 'Y'
                    ORDER BY SVUH.REG_DATE DESC LIMIT 1
                ) AS HOLIDAY,

                (
                    SELECT
                        CASE
                            WHEN IHRR.TRIP_CODE = '1' THEN '출장(도내/시내)'
                            WHEN IHRR.TRIP_CODE = '2' THEN '출장(도내/시외)'
                            WHEN IHRR.TRIP_CODE = '3' THEN '도외'
                            WHEN IHRR.TRIP_CODE = '4' THEN '해외'
                            ELSE NULL
                        END
                    FROM CAM_INSIDE.DJ_HR_BIZ_REQ IHR
                    LEFT JOIN CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT IHRR ON IHR.HR_BIZ_REQ_ID = IHRR.HR_BIZ_REQ_ID
                    LEFT JOIN CAM_INSIDE.DJ_HR_BIZ_EXNP IHE ON IHRR.HR_BIZ_REQ_RESULT_ID = IHE.HR_BIZ_REQ_RESULT_ID
                    WHERE
                        DR.DATES BETWEEN IHRR.TRIP_DAY_FR AND IHRR.TRIP_DAY_TO
                        AND IHE.EMP_SEQ = HEI.EMP_SEQ AND IHRR.STATUS = '100'
                    ORDER BY IHRR.CREATE_DATE DESC LIMIT 1
                ) AS BUSTRIP
            FROM
                CAM_HR.DJ_EMP_INFO HEI
            JOIN
                DATE_RANGE DR
            LEFT JOIN
                CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
            LEFT JOIN (
                SELECT
                    CapsNum,
                    InDate,
                    MIN(CASE WHEN CD.IsType = 1 AND CD.InTime >= '080000' THEN CD.InTime ELSE NULL END) AS START_TIME,
                    MAX(CASE WHEN CD.IsType = 2 THEN CD.InTime ELSE NULL END) AS END_TIME
                FROM CAM_HR.V_CAPS_DATA CD
                GROUP BY InDate, CapsNum
            ) RCD ON RCD.InDate = DATE_FORMAT(DR.DATES, '%Y%m%d') AND HEI.CAPS_NUM = RCD.CapsNum
            WHERE
                (DIVISION = 0 OR (DIVISION = 4 AND DIVISION_SUB != 3))
            AND
                WORK_STATUS_CODE = 'Y'
            AND TEMP_DIVISION != 'Y'
            AND EMP_SEQ != '1'
            <if test='dept != null and !"".equals(dept)'>
                AND (
                    HEI.DEPT_SEQ = #{dept} OR
                    HDI.PARENT_DEPT_SEQ = #{dept}
                )
            </if>
            <if test='team != null and !"".equals(team)'>
                AND HEI.DEPT_SEQ = #{team}
            </if>
            <if test='name != null and !"".equals(name)'>
                AND HEI.EMP_NAME_KR = #{name}
            </if>
            <if test='arr != null and !"".equals(arr)'>
                AND
                <foreach collection="arr" item="item" separator="OR" open="(" close=")">
                    ${item}
                </foreach>
            </if>

            GROUP BY DR.DATES, HEI.EMP_SEQ
        ) A

        WHERE 1=1
        <if test='attendanceItems != null and !"".equals(attendanceItems)'>
            <choose>
                <when test='"attendA".equals(attendanceItems)'>
--                     정상출근
                </when>
                <when test='"attendB".equals(attendanceItems)'>
--                     지각
                </when>
                <when test='"workPlan".equals(attendanceItems)'>
                    AND A.WORK_PALN != '' AND A.WORK_PALN IS NOT NULL
                </when>
                <when test='"busTrip".equals(attendanceItems)'>
                    AND A.BUSTRIP != '' AND A.BUSTRIP IS NOT NULL
                </when>
                <otherwise>
                    AND A.HOLIDAY = #{attendanceItems}
                </otherwise>
            </choose>
        </if>

        ORDER BY
            A.START_DATE DESC,
            (
            <![CDATA[
                CASE WHEN ASCII(SUBSTRING(A.REG_DEPT_NAME,1)) BETWEEN 48 AND 57 THEN 3
                    WHEN ASCII(SUBSTRING(A.REG_DEPT_NAME,1)) < 128 THEN 2 ELSE 1 END
            ]]>
            ),
            REG_DEPT_NAME,
            A.REG_TEAM_NAME,
            A.REG_POSITION_SORT
    </select>

    <select id="personAnnvMainList" parameterType="map" resultType="map">
        /* personAnnvMainList */
        SELECT A.*,
               SUM(A.SUBHOLIDAY_USE_DAY) AS USE_DAY,
               SUM(A.BEF_USE_DAY) AS BEF_USE_DAY,
               SUM(A.BEF_BEF_USE_DAY) AS BEF_USE_DAY
        FROM
            (SELECT
                 VH.SUBHOLIDAY_CODE_ID,
                 VH.SUBHOLIDAY_ST_DT,
                 VH.SUBHOLIDAY_ST_TIME,
                 VH.SUBHOLIDAY_EN_DT,
                 VH.SUBHOLIDAY_EN_TIME,
                 VH.SUBHOLIDAY_USE_DAY,
                 VH.RMK,
                 VCD.SUBHOLIDAY_DT_CODE_NM,
                 (SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE EMP_SEQ = 1 AND APPLY_YEAR = YEAR(NOW())) AS GRANT_DAY,
            (SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE EMP_SEQ = 1 AND APPLY_YEAR = YEAR(NOW())- 1)  AS BEF_GRANT_DAY,
            (SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE EMP_SEQ = 1 AND APPLY_YEAR = YEAR(NOW())- 2)  AS BEF_BEF_GRANT_DAY,
				(SELECT SUBHOLIDAY_USE_DAY FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST WHERE APPLY_SEQ = 1 AND SUBHOLIDAY_ST_DT = YEAR(NOW())- 1) AS BEF_USE_DAY,
				(SELECT SUBHOLIDAY_USE_DAY FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST WHERE APPLY_SEQ = 1 AND SUBHOLIDAY_ST_DT = YEAR(NOW())- 2) AS BEF_BEF_USE_DAY,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST VH JOIN CAM_INSIDE.DJ_SUBHOLIDAY_CODE VCD ON VH.SUBHOLIDAY_CODE_ID = VCD.SUBHOLIDAY_CODE_ID
             WHERE VH.APPR_STAT = 'Y' AND VH.APPLY_SEQ = #{empSeq} AND VCD.SUBHOLIDAY_MD_CODE = '01' AND VH.SUBHOLIDAY_ST_DT = YEAR(NOW())) AS PART_COUNT
        FROM
            CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST VH
            JOIN
            CAM_INSIDE.DJ_SUBHOLIDAY_CODE VCD ON VH.SUBHOLIDAY_CODE_ID = VCD.SUBHOLIDAY_CODE_ID
        WHERE
            VH.APPR_STAT = 'Y' AND VH.APPLY_SEQ = #{empSeq} AND VCD.SUBHOLIDAY_MD_CODE = '01' AND VH.SUBHOLIDAY_ST_DT = YEAR(NOW())) A
    </select>

    <select id="getPersonAnnvInfoList" parameterType="map" resultType="map">
        /* getPersonAnnvInfoList */
        SELECT
            VUI.EMP_SEQ,
            VUI.EMP_NAME_KR,
            VUI.DEPT_NAME,
            VUI.POSITION_NAME,
            VUI.DEPT_TEAM_NAME,
            VUI.DUTY_NAME,
            DATE_FORMAT(VUI.JOIN_DAY, '%Y-%m-%d') AS JOIN_DAY,
            VUI.ACTIVE,
            VC.APPLY_YEAR,
            CONCAT(VC.APPLY_YEAR, '-01-01') AS ST_APPLY_DATE,
            CONCAT(VC.APPLY_YEAR, '-12-31') AS EN_APPLY_DATE,
            VC.GRANT_DAY,
            VC.MDTN_DAY,
            VC.EXTRA_DAY,
            VC.USE_DAY,
            VC.CARRYOVER_DAY,
            VC.ADJUSTMENT_USE_DAY,
            VC.COMP_VAC,
            ((VC.GRANT_DAY + VC.MDTN_DAY + VC.EXTRA_DAY) - (VC.USE_DAY)) AS REMAIN_VAC,
            VC.ACTIVE,
            VC.HOLIDAY_ID,
            IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) AS aefUseDay,
            IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) AS aef2UseDay,
            IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) AS befUseDay,
            IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) AS bef2UseDay,
            (GRANT_DAY + IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) + IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0)) AS GRANT_SUM,
            (USE_DAY + IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) + IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0)) AS USE_SUM,
            (((GRANT_DAY + IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) + IFNULL((SELECT GRANT_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0))) - (USE_DAY + IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -1 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0) + IFNULL((SELECT USE_DAY FROM CAM_INSIDE.DJ_HOLIDAY WHERE APPLY_YEAR = DATE_FORMAT(DATE_ADD(CONCAT(VC.APPLY_YEAR, '-01-01'), INTERVAL -2 YEAR),'%Y') AND EMP_SEQ = VUI.EMP_SEQ), 0))) AS REMAIN_VAC_1
        FROM
            CAM_HR.DJ_EMP_INFO VUI
                LEFT JOIN
            CAM_INSIDE.DJ_HOLIDAY VC
            ON
                VUI.EMP_SEQ = VC.EMP_SEQ AND VC.APPLY_YEAR = YEAR(NOW())
        WHERE
            VUI.ACTIVE = "Y" AND VC.EMP_SEQ = #{empSeq}
    </select>

    <select id="getAttendAllCountMonthly" parameterType="map" resultType="map">
        /* getAttendAllCountMonthly */
        SELECT
            IFNULL(DATE_FORMAT(SEC_TO_TIME(AVG_OFFICE_HOUR_2), '%H:%i:%s'), '00:00:00') AS AVG_OFFICE_HOUR,
            COUNT(-1) AS HUMAN_COUNT,
            (SELECT COUNT(-1) FROM (SELECT SVUH.REG_EMP_SEQ, HEI.DEPT_NAME FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON SVUH.REG_EMP_SEQ = HEI.EMP_SEQ WHERE DATE_FORMAT(SVUH.SUBHOLIDAY_ST_DT, '%Y-%m') = #{applyMonth} AND SUBHOLIDAY_CODE_ID != '11' GROUP BY SVUH.REG_EMP_SEQ) SSVUH WHERE SSVUH.DEPT_NAME = RE.DEPT_NAME) AS HOLIDAY_HUMAN_COUNT,
            (SELECT COUNT(-1) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON SVUH.REG_EMP_SEQ = HEI.EMP_SEQ WHERE DATE_FORMAT(SVUH.SUBHOLIDAY_ST_DT, '%Y-%m') = #{applyMonth} AND HEI.DEPT_NAME = RE.DEPT_NAME AND SUBHOLIDAY_CODE_ID != '11') AS HOLIDAY_COUNT,
            SUM(LATE) AS LATE,
            SUM(FRI_DAY) AS FRI_DAY,
            <![CDATA[
            COUNT(IF(LATE > 0, 1, NULL)) AS LATE_COUNT,
            COUNT(IF(FRI_DAY > 0, 1, NULL)) AS FRI_DAY_COUNT
            ]]>
        FROM (
            SELECT
            DEPT_NAME,
            deptNm,
            teamNm,
            EMP_NAME,
            START_TIME,
            END_TIME,
            AVG(TIME_TO_SEC(TIMEDIFF(END_TIME, START_TIME))) AS AVG_OFFICE_HOUR_2,
                <![CDATA[
            SUM(IF(START_TIME >= '09:00:00' AND START_TIME < '15:00:00', 1, 0)) AS LATE,
            SUM(IF((START_TIME > '08:00:00' AND START_TIME <= '08:30:00') AND WEEK = '금', 1, 0)) AS FRI_DAY
                ]]>
            FROM
            (
            WITH RECURSIVE DATE_RANGE AS (
            SELECT CONCAT(#{applyMonth}, '-01') AS DATES

            UNION ALL

            SELECT DATES + INTERVAL 1 DAY
            FROM DATE_RANGE
                        <![CDATA[
            WHERE DATES < CONCAT(#{applyMonth}, '-31')
                        ]]>
                    )
            SELECT
            HEI.EMP_SEQ,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HDI.DEPT_NAME ELSE HEI.DEPT_NAME END AS DEPT_NAME,
            HEI.EMP_NAME_KR AS EMP_NAME,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS deptNm,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HDI.DEPT_NAME ELSE "" END AS teamNm,
            CASE WHEN HEI.DUTY_NAME IS NULL THEN IFNULL(HEI.POSITION_NAME, "") ELSE HEI.DUTY_NAME END AS positionNm,
            HEI.EMP_NAME_KR,
            DR.DATES AS START_DATE,
            HEI.EMP_NAME_KR AS REG_EMP_NAME,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS REG_DEPT_NAME,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS REG_TEAM_NAME,
            HEI.POSITION_NAME AS REG_POSITION_NAME,
            HEI.DUTY_NAME AS REG_DUTY_NAME,
            SUBSTR('일월화수목금토', DAYOFWEEK(DR.DATES), 1) AS WEEK,
            CONCAT(SUBSTR(RCD.START_TIME,1,2) , ':' , SUBSTR(RCD.START_TIME,3,2) , ':' , SUBSTR(RCD.START_TIME,5,2)) AS START_TIME,
            CONCAT(SUBSTR(RCD.END_TIME,1,2) , ':' , SUBSTR(RCD.END_TIME,3,2) , ':' , SUBSTR(RCD.END_TIME,5,2)) AS END_TIME
            FROM
            CAM_HR.DJ_EMP_INFO HEI
            JOIN
            DATE_RANGE DR
            LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
            LEFT JOIN (
            SELECT
            CapsNum,
            InDate,
            MIN(CASE WHEN CD.IsType = 1 AND CD.InTime >= '080000' THEN CD.InTime ELSE NULL END) AS START_TIME,
            MAX(CASE WHEN CD.IsType = 2 THEN CD.InTime ELSE NULL END) AS END_TIME
            FROM CAM_HR.V_CAPS_DATA CD
            GROUP BY InDate, CapsNum
            ) RCD ON RCD.InDate = DATE_FORMAT(DR.DATES, '%Y%m%d') AND HEI.CAPS_NUM = RCD.CapsNum
            WHERE
            (DIVISION = 0 OR (DIVISION = 4 AND DIVISION_SUB != 3))
            AND WORK_STATUS_CODE = 'Y'
            GROUP BY DR.DATES, HEI.EMP_SEQ
            ) R
            WHERE START_TIME != '기록 없음' AND END_TIME != '기록 없음'
            AND timediff(END_TIME, START_TIME) > 0
            GROUP BY EMP_NAME
        ) RE
    </select>

    <select id="getAttendDeptCountMonthly" parameterType="map" resultType="map">
        /* getAttendDeptCountMonthly */
        SELECT
            DEPT_NAME,
            deptNm,
            teamNm,
            IFNULL(DATE_FORMAT(SEC_TO_TIME(AVG_OFFICE_HOUR_2), '%H:%i:%s'), '00:00:00') AS AVG_OFFICE_HOUR,
            COUNT(-1) AS HUMAN_COUNT,
            (SELECT COUNT(-1) FROM (SELECT SVUH.REG_EMP_SEQ, HEI.DEPT_NAME FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON SVUH.REG_EMP_SEQ = HEI.EMP_SEQ WHERE DATE_FORMAT(SVUH.SUBHOLIDAY_ST_DT, '%Y-%m') = #{applyMonth} AND SUBHOLIDAY_CODE_ID != '11' GROUP BY SVUH.REG_EMP_SEQ) SSVUH WHERE SSVUH.DEPT_NAME = RE.DEPT_NAME) AS HOLIDAY_HUMAN_COUNT,
            (SELECT COUNT(-1) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON SVUH.REG_EMP_SEQ = HEI.EMP_SEQ WHERE DATE_FORMAT(SVUH.SUBHOLIDAY_ST_DT, '%Y-%m') = #{applyMonth} AND HEI.DEPT_NAME = RE.DEPT_NAME AND SUBHOLIDAY_CODE_ID != '11') AS HOLIDAY_COUNT,
            SUM(LATE) AS LATE,
            SUM(FRI_DAY) AS FRI_DAY,
            <![CDATA[
            COUNT(IF(LATE > 0, 1, NULL)) AS LATE_COUNT,
            COUNT(IF(FRI_DAY > 0, 1, NULL)) AS FRI_DAY_COUNT
            ]]>
        FROM (
            SELECT
                DEPT_NAME,
                deptNm,
                teamNm,
                EMP_NAME,
                START_TIME,
                END_TIME,
                AVG(TIME_TO_SEC(TIMEDIFF(END_TIME, START_TIME))) AS AVG_OFFICE_HOUR_2,
                <![CDATA[
                SUM(IF(START_TIME >= '09:00:00' AND START_TIME < '15:00:00', 1, 0)) AS LATE,
                SUM(IF((START_TIME > '08:00:00' AND START_TIME <= '08:30:00') AND WEEK = '금', 1, 0)) AS FRI_DAY
                ]]>
            FROM
                (
                    WITH RECURSIVE DATE_RANGE AS (
                        SELECT CONCAT(#{applyMonth}, '-01') AS DATES

                        UNION ALL

                        SELECT DATES + INTERVAL 1 DAY
                        FROM DATE_RANGE
                        <![CDATA[
                        WHERE DATES < CONCAT(#{applyMonth}, '-31')
                        ]]>
                    )
                    SELECT
                        HEI.EMP_SEQ,
                        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HDI.DEPT_NAME ELSE HEI.DEPT_NAME END AS DEPT_NAME,
                        HEI.EMP_NAME_KR AS EMP_NAME,
                        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS deptNm,
                        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HDI.DEPT_NAME ELSE "" END AS teamNm,
                        CASE WHEN HEI.DUTY_NAME IS NULL THEN IFNULL(HEI.POSITION_NAME, "") ELSE HEI.DUTY_NAME END AS positionNm,
                        HEI.EMP_NAME_KR,
                        DR.DATES AS START_DATE,
                        HEI.EMP_NAME_KR AS REG_EMP_NAME,
                        CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS REG_DEPT_NAME,
                        CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS REG_TEAM_NAME,
                        HEI.POSITION_NAME AS REG_POSITION_NAME,
                        HEI.DUTY_NAME AS REG_DUTY_NAME,
                        SUBSTR('일월화수목금토', DAYOFWEEK(DR.DATES), 1) AS WEEK,
                        CONCAT(SUBSTR(RCD.START_TIME,1,2) , ':' , SUBSTR(RCD.START_TIME,3,2) , ':' , SUBSTR(RCD.START_TIME,5,2)) AS START_TIME,
                        CONCAT(SUBSTR(RCD.END_TIME,1,2) , ':' , SUBSTR(RCD.END_TIME,3,2) , ':' , SUBSTR(RCD.END_TIME,5,2)) AS END_TIME
                    FROM
                        CAM_HR.DJ_EMP_INFO HEI
                    JOIN
                        DATE_RANGE DR
                    LEFT JOIN
                        CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
                    LEFT JOIN (
                        SELECT
                            CapsNum,
                            InDate,
                            MIN(CASE WHEN CD.IsType = 1 AND CD.InTime >= '080000' THEN CD.InTime ELSE NULL END) AS START_TIME,
                            MAX(CASE WHEN CD.IsType = 2 THEN CD.InTime ELSE NULL END) AS END_TIME
                        FROM CAM_HR.V_CAPS_DATA CD
                        GROUP BY InDate, CapsNum
                    ) RCD ON RCD.InDate = DATE_FORMAT(DR.DATES, '%Y%m%d') AND HEI.CAPS_NUM = RCD.CapsNum
                    WHERE
                        (DIVISION = 0 OR (DIVISION = 4 AND DIVISION_SUB != 3))
                    AND WORK_STATUS_CODE = 'Y'
                    GROUP BY DR.DATES, HEI.EMP_SEQ
                ) R
            WHERE START_TIME != '기록 없음' AND END_TIME != '기록 없음'
              AND timediff(END_TIME, START_TIME) > 0
            GROUP BY EMP_NAME
        ) RE
        GROUP BY DEPT_NAME
        ORDER BY deptNm, teamNm
    </select>

    <select id="getAttendPersonalCountMonthly" parameterType="map" resultType="map">
        /* getAttendPersonalCountMonthly */
        SELECT
            EMP_NAME,
            deptNm,
            teamNm,
            positionNm,
            IFNULL(DATE_FORMAT(SEC_TO_TIME(AVG(TIME_TO_SEC(TIMEDIFF(END_TIME, START_TIME)))), '%H:%i:%s'), '00:00:00') AS AVG_OFFICE_HOUR,
            (SELECT COUNT(-1) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST SVUH LEFT JOIN CAM_HR.DJ_EMP_INFO HEI ON SVUH.REG_EMP_SEQ = HEI.EMP_SEQ WHERE DATE_FORMAT(SVUH.SUBHOLIDAY_ST_DT, '%Y-%m') = #{applyMonth} AND SVUH.REG_EMP_SEQ = R.EMP_SEQ) AS HOLIDAY_COUNT,
            <![CDATA[
            SUM(IF(START_TIME >= '09:00:00' AND START_TIME < '15:00:00', 1, 0)) AS LATE,
            SUM(IF((START_TIME > '08:00:00' AND START_TIME <= '08:30:00') AND WEEK = '금', 1, 0)) AS FRI_DAY
            ]]>
        FROM
            (
                WITH RECURSIVE DATE_RANGE AS (
                    SELECT CONCAT(#{applyMonth}, '-01') AS DATES

                    UNION ALL

                    SELECT DATES + INTERVAL 1 DAY
                    FROM DATE_RANGE
                    <![CDATA[
                    WHERE DATES < CONCAT(#{applyMonth}, '-31')
                    ]]>
                )
                SELECT
                    HEI.EMP_SEQ,
                    HEI.EMP_NAME_KR AS EMP_NAME,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS deptNm,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HDI.DEPT_NAME ELSE "" END AS teamNm,
                    CASE WHEN HEI.DUTY_NAME IS NULL THEN IFNULL(HEI.POSITION_NAME, "") ELSE HEI.DUTY_NAME END AS positionNm,
                    HEI.EMP_NAME_KR,
                    DR.DATES AS START_DATE,
                    HEI.EMP_NAME_KR AS REG_EMP_NAME,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS REG_DEPT_NAME,
                    CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS REG_TEAM_NAME,
                    HEI.POSITION_CODE AS POSITION_CODE,
                    HEI.POSITION_NAME AS REG_POSITION_NAME,
                    HEI.DUTY_NAME AS REG_DUTY_NAME,
                    SUBSTR('일월화수목금토', DAYOFWEEK(DR.DATES), 1) AS WEEK,
                    CONCAT(SUBSTR(RCD.START_TIME,1,2) , ':' , SUBSTR(RCD.START_TIME,3,2) , ':' , SUBSTR(RCD.START_TIME,5,2)) AS START_TIME,
                    CONCAT(SUBSTR(RCD.END_TIME,1,2) , ':' , SUBSTR(RCD.END_TIME,3,2) , ':' , SUBSTR(RCD.END_TIME,5,2)) AS END_TIME
                FROM
                    CAM_HR.DJ_EMP_INFO HEI
                JOIN
                    DATE_RANGE DR
                LEFT JOIN
                    CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
                LEFT JOIN (
                    SELECT
                        CapsNum,
                        InDate,
                        MIN(CASE WHEN CD.IsType = 1 AND CD.InTime >= '080000' THEN CD.InTime ELSE NULL END) AS START_TIME,
                        MAX(CASE WHEN CD.IsType = 2 THEN CD.InTime ELSE NULL END) AS END_TIME
                    FROM CAM_HR.V_CAPS_DATA CD
                    GROUP BY InDate, CapsNum
                ) RCD ON RCD.InDate = DATE_FORMAT(DR.DATES, '%Y%m%d') AND HEI.CAPS_NUM = RCD.CapsNum
                WHERE
                    (DIVISION = 0 OR (DIVISION = 4 AND DIVISION_SUB != 3))
                AND WORK_STATUS_CODE = 'Y'
                GROUP BY DR.DATES, HEI.EMP_SEQ
            ) R
        WHERE START_TIME != '기록 없음' AND END_TIME != '기록 없음'
          AND timediff(END_TIME, START_TIME) > 0
        GROUP BY EMP_NAME
        ORDER BY deptNm, teamNm, REG_DUTY_NAME DESC, POSITION_CODE, EMP_NAME_KR
    </select>

<!--    휴가 근로 신청-->
    <select id="getSubHolidayApplyList" parameterType="map" resultType="map">
        SELECT
                *,
                ROW_NUMBER() OVER (ORDER BY sm.SUBHOLIDAY_CODE_ID) AS ROW_NUM,
                DI.APPRO_KEY,
                DI.DOC_MENU_CD,
                DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d') as APPLY_DAY
        FROM cam_inside.dj_subholiday_use_hist sm
        JOIN cam_inside.dj_subholiday_code sc
            ON sm.SUBHOLIDAY_CODE_ID = sc.SUBHOLIDAY_CODE_ID
        left join DJ_CAMTIC.A_DOC_INFO DI
            on sm.DOC_ID = DI.DOC_ID
        WHERE 1=1
        AND
        sm.ACTIVE = 'Y'
        AND
            sm.SUBHOLIDAY_CODE_ID = 11
        <if test='status != null and !"".equals(status)'>
            AND sm.APPR_STAT = #{status}
        </if>
        <if test='workDay != null and !"".equals(workDay)'>
            AND DATE_FORMAT(#{workDay}, '%Y-%m-%d') = DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d')
        </if>
        ORDER BY ROW_NUM DESC
    </select>

<!--    휴일 근로 신청 리스트 삭제-->
    <update id="setHistoryWorkApplyDel" parameterType="map">
        /* setVacUseHistDel */
        UPDATE
            CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST
        SET
            ACTIVE = 'N'
        WHERE
            SUBHOLIDAY_USE_ID IN (${subHolidayUseId})
    </update>

    <update id="setHistoryWorkApplyAdminDel" parameterType="map">
        /* setHistoryWorkApplyAdminDel */
        UPDATE
            CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST
        SET
            DEL_YN = 'Y'
        WHERE
            SUBHOLIDAY_USE_ID IN (${subHolidayUseId})
    </update>

<!--    휴일 근로 신청 내역(관리자)-->
    <select id="getHolidayDetailsAdmin" parameterType="map" resultType="map">
    SELECT
        sm.*,
        DEI.EMP_NAME_KR,
        sc.SUBHOLIDAY_DT_CODE_NM,
        DI.DOC_ID,
        DI.APPRO_KEY,
        (SELECT APPRO_KEY FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = sm.ADMIN_DOC_ID) AS ADMIN_APPRO_KEY,
        (SELECT DOC_MENU_CD FROM DJ_CAMTIC.A_DOC_INFO WHERE DOC_ID = sm.ADMIN_DOC_ID) AS ADMIN_DOC_MENU_CD,
        DI.DOC_MENU_CD,
        DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d') as APPLY_DAY,
        ROW_NUMBER() OVER (ORDER BY sm.SUBHOLIDAY_CODE_ID) AS ROW_NUM
    FROM
    CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST sm
    JOIN
    CAM_INSIDE.DJ_SUBHOLIDAY_CODE sc
    ON sm.SUBHOLIDAY_CODE_ID = sc.SUBHOLIDAY_CODE_ID
    LEFT JOIN
    CAM_HR.DJ_EMP_INFO DEI
    ON sm.REG_EMP_SEQ = DEI.EMP_SEQ
    LEFT JOIN
    DJ_CAMTIC.A_DOC_INFO DI ON sm.DOC_ID = DI.DOC_ID
    where
        1=1
    AND
        sm.APPR_STAT != 'N'
    AND
        sm.ACTIVE = 'Y'
    AND
        sm.SUBHOLIDAY_CODE_ID = 11
        <if test='status != null and !"".equals(status)'>
            AND sm.APPR_STAT = #{status}
        </if>
        <if test='workDay != null and !"".equals(workDay)'>
            AND DATE_FORMAT(#{workDay}, '%Y-%m-%d') = DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d')
        </if>
        <if test='searchText != null and !"1".equals(searchText)'>
            AND
            dei.emp_name_kr LIKE CONCAT('%', #{searchText}, '%')
        </if>
    ORDER BY ROW_NUM DESC
    </select>

    <select id="holidayWorkApplicationList" parameterType="map" resultType="map">
        /* holidayWorkApplicationList */
        SELECT
            (SELECT MAX(SUBHOLIDAY_WORK_DAY) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST WHERE HOLIDAY_WORK_MASTER_SN = M.HOLIDAY_WORK_MASTER_SN) AS STR_DT,
            (SELECT MIN(SUBHOLIDAY_WORK_DAY) FROM CAM_INSIDE.DJ_SUBHOLIDAY_USE_HIST WHERE HOLIDAY_WORK_MASTER_SN = M.HOLIDAY_WORK_MASTER_SN) AS END_DT,
            M.*, sm.*, sc.*, DI.*,
            M.STATUS AS DOC_STATUS,
            CAM_HR.FN_GetName('DEPT', (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = sm.APPLY_SEQ), 'KR') AS DEPT_NAME2,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = sm.APPLY_SEQ) AS EMP_NAME_KR,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d') as APPLY_DAY
        FROM CAM_INSIDE.DJ_HOLIDAY_WORK_MASTER M
        left JOIN cam_inside.dj_subholiday_use_hist sm
        ON sm.HOLIDAY_WORK_MASTER_SN = M.HOLIDAY_WORK_MASTER_SN AND sm.ACTIVE = 'Y'
        left JOIN cam_inside.dj_subholiday_code sc
        ON sm.SUBHOLIDAY_CODE_ID = sc.SUBHOLIDAY_CODE_ID
        left join DJ_CAMTIC.A_DOC_INFO DI
        on M.DOC_ID = DI.DOC_ID
        WHERE 1=1
        AND M.ACTIVE = 'Y'
        AND
        sm.SUBHOLIDAY_CODE_ID = 11
        <if test='status != null and !"".equals(status)'>
            AND sm.APPR_STAT = #{status}
        </if>
        <if test='baseYear != null and !"".equals(baseYear)'>
            AND #{baseYear} = DATE_FORMAT(sm.APPLY_DATE, '%Y')
        </if>
        <if test="empSeq != null and empSeq != ''">
            AND sm.APPLY_SEQ = #{empSeq}
        </if>
        <if test="adminMenu != null and adminMenu != ''">
            <![CDATA[
                AND
                    DATE_FORMAT(#{strDt}, '%Y-%m-%d') <= DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d')
                AND
                    DATE_FORMAT(#{endDt}, '%Y-%m-%d') >= DATE_FORMAT(sm.APPLY_DATE, '%Y-%m-%d')
            ]]>
            AND M.STATUS NOT IN (0, 30, 40)
            <if test='searchKeyword != null and !"".equals(searchKeyword)'>
                AND sm.APPLY_SEQ IN ((SELECT EMP_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE ${searchKeyword} LIKE CONCAT('%', #{searchValue} ,'%')))
            </if>
        </if>
        GROUP BY M.HOLIDAY_WORK_MASTER_SN
        ORDER BY sm.APPLY_DATE DESC
    </select>

    <insert id="setAttendAdjustment" parameterType="map">
        /*setAttendAdjustment*/
        INSERT INTO CAM_HR.DJ_ATTEND_ADJUSTMENT
            (
                TARGET_DATE,
                TYPE,
                TARGET_EMP_SEQ,
                WORK_TIME,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{targetDate},
                #{type},
                #{targetEmpSeq},
                <choose>
                    <when test='"1".equals(type)'>
                        #{workTime},
                    </when>
                    <otherwise>
                        #{leaveTime},
                    </otherwise>
                </choose>
                #{regEmpSeq}
            )
    </insert>
</mapper>