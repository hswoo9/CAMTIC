<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="evalManage">

    <insert id="setEvalItemMain" parameterType="map">
        /* setEvalItemMain */
        INSERT INTO CAM_INSIDE.DJ_EVAL_ITEM_MAIN
            (
                EVAL_MANAGE_TITLE,
                EVAL_ITEM_CNT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{evalManageTitle},
                #{evalItemCnt},
                #{empSeq}
            )

        <selectKey keyProperty="evalItemMainId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_EVAL_ITEM_MAIN'
        </selectKey>
    </insert>

    <update id="setEvalItemMainUpd" parameterType="map">
        /* setEvalItemMainUpd */
        UPDATE
            CAM_INSIDE.DJ_EVAL_ITEM_MAIN
        SET
            EVAL_MANAGE_TITLE = #{evalManageTitle},
            EVAL_ITEM_CNT = #{evalItemCnt},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            EVAL_ITEM_MAIN_ID = #{evalItemMainId}
    </update>

    <delete id="setEvalItemDel" parameterType="map">
        /* setEvalItemDel */
        DELETE FROM CAM_INSIDE.DJ_EVAL_ITEM WHERE EVAL_ITEM_MAIN_ID = #{evalItemMainId}
    </delete>

    <insert id="setEvalItem" parameterType="map">
        /* setEvalItem */
        INSERT INTO CAM_INSIDE.DJ_EVAL_ITEM
            (
                EVAL_ITEM_MAIN_ID,
                EVAL_ITEM_NUM,
                EVAL_ITEM_TYPE,
                EVAL_ITEM_TITLE,
                EVAL_ITEM_VAL,
                REG_EMP_SEQ
            )
        VALUES
        <foreach collection="evalItemArr" item="item" separator=",">
            (
                #{evalItemMainId},
                #{item.evalItemNum},
                #{item.evalItemType},
                #{item.evalItemTitle},
                #{item.evalItemVal},
                #{empSeq}
            )
        </foreach>
    </insert>

    <select id="getEvalItemMainList" parameterType="map" resultType="map">
        /* getEvalItemMainList */
        SELECT
            EIM.EVAL_ITEM_MAIN_ID,
            EIM.EVAL_MANAGE_TITLE,
            EIM.EVAL_ITEM_CNT,
            DATE_FORMAT(EIM.REG_DATE, '%Y-%m-%d') AS REG_DATE
        FROM
            CAM_INSIDE.DJ_EVAL_ITEM_MAIN EIM
        WHERE
            EIM.ACTIVE = 'Y'
        <if test='evalManageTitle != null and !"".equals(evalManageTitle)'>
        AND
            EIM.EVAL_MANAGE_TITLE LIKE CONCAT('%', #{evalManageTitle}, '%')
        </if>
        ORDER BY EIM.REG_DATE DESC
    </select>

    <update id="setEvalItemActiveUpd" parameterType="map">
        /* setEvalItemActiveUpd */
        UPDATE
            CAM_INSIDE.DJ_EVAL_ITEM_MAIN
        SET
            ACTIVE = 'N',
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            EVAL_ITEM_MAIN_ID IN (${evalItemMainId})
    </update>

    <select id="getEvalItemMain" parameterType="map" resultType="map">
        /* getEvalItemMain */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVAL_ITEM_MAIN
        WHERE
            EVAL_ITEM_MAIN_ID = #{evalItemMainId}
    </select>

    <select id="getEvalItem" parameterType="map" resultType="map">
        /* getEvalItem */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_EVAL_ITEM
        WHERE
            EVAL_ITEM_MAIN_ID = #{evalItemMainId}
    </select>

    <select id="getRecruitEvalSelSheet" parameterType="map" resultType="map">
        /* getRecruitEvalSelSheet */
        SELECT
            RECRUIT_EVAL_SHEET_ID,
            RECRUIT_INFO_SN,
            INTERVIEW_EVAL_SHEET
        FROM
            CAM_INSIDE.DJ_RECRUIT_EVAL_SHEET
        WHERE 1=1
        <if test='recruitEvalSheetId != null and !"".equals(recruitEvalSheetId)'>
            AND RECRUIT_EVAL_SHEET_ID = #{recruitEvalSheetId}
        </if>
        <if test='recruitInfoSn != null and !"".equals(recruitInfoSn)'>
            AND RECRUIT_INFO_SN = #{recruitInfoSn}
        </if>
    </select>

    <insert id="setRecruitEvalSelSheet" parameterType="map">
        /* setRecruitEvalSelSheet */
        INSERT INTO CAM_INSIDE.DJ_RECRUIT_EVAL_SHEET
            (
                RECRUIT_INFO_SN,
                INTERVIEW_EVAL_SHEET,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{recruitInfoSn},
                #{interviewEvalSheet},
                #{empSeq}
            )

        <selectKey keyProperty="recruitEvalSheetId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_RECRUIT_EVAL_SHEET'
        </selectKey>
    </insert>

    <update id="setRecruitEvalSelSheetUpd" parameterType="map">
        /* setRecruitEvalSelSheetUpd */
        UPDATE
            CAM_INSIDE.DJ_RECRUIT_EVAL_SHEET
        SET
            INTERVIEW_EVAL_SHEET = #{interviewEvalSheet},
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            RECRUIT_EVAL_SHEET_ID = #{recruitEvalSheetId}
    </update>

    <select id="evalLoginChk" parameterType="map" resultType="map">
        /* evalLoginChk */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN
        WHERE 1=1
        <choose>
            <when test='uniqId != null and !"".equals(uniqId)'>
                AND EMP_SEQ = #{uniqId}
            </when>
            <otherwise>
                AND EMP_SEQ = #{evalEmpSeq}
            </otherwise>
        </choose>
        AND
            RECRUIT_INFO_SN = #{recruitInfoSn}
        <if test='recruitAreaInfoSn != null and !"".equals(recruitAreaInfoSn)'>
        AND
            RECRUIT_AREA_INFO_SN = #{recruitAreaInfoSn}
        </if>
        <if test='evalType != null and !"".equals(evalType)'>
        AND
            EVAL_TYPE = #{evalType}
        </if>
        <if test='"Y".equals(group)'>
            GROUP BY EMP_SEQ
        </if>
    </select>


    <insert id="setEvalSelection" parameterType="map">
        /* setEvalSelection */
        INSERT INTO CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN
        (
            EMP_SEQ,
            RECRUIT_INFO_SN,
            RECRUIT_AREA_INFO_SN,
            DEPT_SEQ,
            LOGIN_ID,
            LOGIN_PASSWD,
            EMP_NAME_KR,
            EVAL_TYPE,
            REG_ID
        )
        SELECT
            EMP_SEQ,
            #{recruitInfoSn},
            #{recruitAreaInfoSn},
            DEPT_SEQ,
            LOGIN_ID,
            LOGIN_PASSWD,
            EMP_NAME_KR,
            #{evalType},
            #{empSeq}
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            EMP_SEQ = #{evalEmpSeq}
    </insert>

    <insert id="setEvalSelectionEmpSeq" parameterType="map">
        /* setEvalSelectionEmpSeq */
        INSERT INTO CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN
        (
            RECRUIT_INFO_SN,
            ID,
            PWD,
            NAME,
            REG_ID
        )
        VALUES
        (
            #{recruitInfoSn},
            #{uniqId},
            #{password},
            #{name},
            #{uniqId}
        )
    </insert>

    <select id="getApplicationScreenViewList" parameterType="map" resultType="map">
        /* getApplicationScreenViewList */
        SELECT
            AM.APPLICATION_ID,
            IT.IN_TIME,
            AM.USER_EMAIL,
            AM.RECRUIT_INFO_SN,
            AM.RECRUIT_AREA_INFO_SN,
            AM.CAREER_TYPE,
            AM.USER_NAME,
            ROUND((TO_DAYS(NOW()) - TO_DAYS(AM.BDAY)) / 365, 0) AS AGE,
            CASE WHEN AM.GENDER = 'M' THEN '남자'
                ELSE '여자'
            END AS GENDER,
            DAS.SCHOOL_NAME,
            GROUP_CONCAT(AC.WORK_ST_DT, '~', AC.WORK_EN_DT SEPARATOR '|') AS WORK_DATE,
            REPLACE(SUBSTRING_INDEX(REPLACE(AM.ADDR, ' ', '_'), '_', 2), '_', ' ') AS ADDR,
            GROUP_CONCAT(LA.LANG_NAME SEPARATOR ', ') AS LANG_NAME,
            AI.JOB,
            CASE WHEN INSTR(DATE_FORMAT(AM.SAVE_DATE, '%Y-%m-%d %p %h:%i'), 'PM') > 0 THEN REPLACE(DATE_FORMAT(AM.SAVE_DATE, '%Y-%m-%d %p %h:%i'), 'PM', '오후')
                ELSE REPLACE(DATE_FORMAT(AM.SAVE_DATE, '%Y-%m-%d %p %h:%i'), 'AM', '오전')
            END AS SAVE_DATE,
            (SELECT COUNT(*) FROM CAM_INSIDE.DJ_APPLICATION_MAIN WHERE SAVE_TYPE = 'S' AND AM.RECRUIT_INFO_SN != RECRUIT_INFO_SN AND AM.APPLICATION_ID != APPLICATION_ID AND AM.USER_EMAIL = USER_EMAIL) AS DUPLICATION_CNT,
            (
                SELECT
                    TRUNCATE(SUM(A.EVAL_ITEM_SCORE)/COUNT(DISTINCT A.EVAL_LOGIN_ID), 1)
                FROM
                    CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD A
                JOIN
                    CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN B
                ON A.EVAL_LOGIN_ID = B.EVAL_LOGIN_ID AND B.EVAL_STATUS = 'E'
                WHERE
                    APPLICATION_ID = AM.APPLICATION_ID
                AND
                    EVAL_ITEM_ID != 'otherRmk'
                AND
                    EVAL_SCREEN_TYPE = 'doc'
                GROUP BY APPLICATION_ID
            ) AS DOC_SCREEN_AVERAGE,
            (
                SELECT
                    TRUNCATE(SUM(A.EVAL_ITEM_SCORE)/COUNT(DISTINCT A.EVAL_LOGIN_ID), 1)
                FROM
                    CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD A
                LEFT JOIN
                    CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN B
                ON A.EVAL_LOGIN_ID = B.EVAL_LOGIN_ID AND B.EVAL_STATUS = 'E'
                WHERE
                    APPLICATION_ID = AM.APPLICATION_ID
                AND
                    EVAL_ITEM_ID != 'opinion'
                AND
                    EVAL_SCREEN_TYPE = 'in'
                GROUP BY APPLICATION_ID
            ) AS IN_SCREEN_AVERAGE,
            CASE WHEN AM.IN_AVOID = 'Y' THEN '불참'
                ELSE ''
            END IN_AVOID,
            AM.PRELIMINARY_PASS
        FROM
            CAM_INSIDE.DJ_APPLICATION_MAIN AM
        JOIN (
            SELECT
                DAS.APPLICATION_ID,
                MAX(SCHOOL_TYPE) AS SCHOOL_TYPE,
                CONCAT(
                    SCHOOL_NAME,
                    ' ',
                    DEPT,
                    '(',
                    CASE WHEN MAX(SCHOOL_TYPE) = '1' THEN '고등학교'
                        WHEN MAX(SCHOOL_TYPE) = '2' THEN '전문대학'
                        WHEN MAX(SCHOOL_TYPE) = '3' OR MAX(SCHOOL_TYPE) = '4' THEN '대학교'
                        WHEN MAX(SCHOOL_TYPE) = '5' THEN '석사'
                        WHEN MAX(SCHOOL_TYPE) = '6' THEN '박사'
                    END,
                    CASE WHEN GRADUATE_TYPE = '1' THEN ''
                        WHEN GRADUATE_TYPE = '2' THEN ' 졸업예정'
                        WHEN GRADUATE_TYPE = '2' THEN ' 수료'
                    END,
                    ')'
                ) AS SCHOOL_NAME
            FROM
                CAM_INSIDE.DJ_APPLICATION_SCHOOL DAS
            GROUP BY DAS.APPLICATION_ID
        )DAS
        ON AM.APPLICATION_ID = DAS.APPLICATION_ID
        LEFT JOIN
            CAM_INSIDE.DJ_APPLICATION_LANG_ABILITY LA
        ON AM.APPLICATION_ID = LA.APPLICATION_ID
        LEFT JOIN
            CAM_INSIDE.DJ_APPLICATION_CAREER AC
        ON AM.APPLICATION_ID = AC.APPLICATION_ID
        LEFT JOIN
            CAM_INSIDE.DJ_APPLICATION_IN_TIME IT
        ON AM.APPLICATION_ID = IT.APPLICATION_ID
        JOIN
            CAM_INSIDE.DJ_RECRUIT_AREA_INFO AI
        ON AM.RECRUIT_AREA_INFO_SN = AI.RECRUIT_AREA_INFO_SN
        WHERE
            AM.RECRUIT_INFO_SN = #{recruitInfoSn}
        AND
            AM.SAVE_TYPE = 'S'
        <if test='searchType != null and !"".equals(searchType)'>
        AND
            AM.APPLICATION_STAT = #{searchType}
        </if>

        <if test='notSearchType != null and !"".equals(notSearchType)'>
            AND AM.APPLICATION_STAT != #{notSearchType}
        </if>

        <if test='notSearchTypeArr != null and !"".equals(notSearchTypeArr)'>
            AND AM.APPLICATION_STAT NOT IN (${notSearchTypeArr})
        </if>
        AND
            AM.RECRUIT_AREA_INFO_SN = #{recruitAreaInfoSn}
        GROUP BY AM.APPLICATION_ID
    </select>

    <select id="getApplicationInterViewList" parameterType="map" resultType="map">
        /* getApplicationInterViewList */
        SELECT
            AI.JOB,
            AM.APPLICATION_ID,
            AM.RECRUIT_INFO_SN,
            AM.RECRUIT_AREA_INFO_SN,
            AM.USER_NAME,
            A.*
        FROM
            CAM_INSIDE.DJ_APPLICATION_MAIN AM
        JOIN
            CAM_INSIDE.DJ_RECRUIT_AREA_INFO AI
        ON AM.RECRUIT_AREA_INFO_SN = AI.RECRUIT_AREA_INFO_SN
        JOIN (
            SELECT
                A.APPLICATION_ID,
                B.EVAL_LOGIN_ID,
                B.EMP_NAME_KR,
                TRUNCATE(SUM(A.EVAL_ITEM_SCORE)/COUNT(DISTINCT A.EVAL_LOGIN_ID), 1) AS SUM_SCORE,
                (
                    SELECT
                        SB.EVAL_ITEM_SCORE
                    FROM
                        CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD SB
                    WHERE
                        SB.EVAL_ITEM_ID = 'opinion'
                    AND
                        A.EVAL_LOGIN_ID = SB.EVAL_LOGIN_ID
                    AND
                        A.APPLICATION_ID = SB.APPLICATION_ID
                ) AS OPINION
            FROM
                CAM_INSIDE.DJ_APPLICATION_EVAL_SCORE_BOARD A
            JOIN
                CAM_INSIDE.DJ_APPLICATION_EVAL_LOGIN B
            ON A.EVAL_LOGIN_ID = B.EVAL_LOGIN_ID AND B.EVAL_STATUS = 'E'
            WHERE
                EVAL_ITEM_ID != 'opinion'
            AND
                 EVAL_SCREEN_TYPE = 'in'
            GROUP BY B.EVAL_LOGIN_ID, APPLICATION_ID
        )A
        ON AM.APPLICATION_ID = A.APPLICATION_ID
        WHERE
            AM.RECRUIT_INFO_SN = #{recruitInfoSn}
        AND
            AM.SAVE_TYPE = 'S'
        <if test='searchTypeArr != null and !"".equals(searchTypeArr)'>
            AND AM.APPLICATION_STAT IN (${searchTypeArr})
        </if>

        <if test='notSearchTypeArr != null and !"".equals(notSearchTypeArr)'>
            AND AM.APPLICATION_STAT NOT IN (${notSearchTypeArr})
        </if>
        AND
            AM.RECRUIT_AREA_INFO_SN = #{recruitAreaInfoSn}
        GROUP BY AM.APPLICATION_ID, A.EVAL_LOGIN_ID
        ORDER BY AM.APPLICATION_ID
    </select>
</mapper>