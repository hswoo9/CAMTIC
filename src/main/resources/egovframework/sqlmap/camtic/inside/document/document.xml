<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="document">

    <select id="getDocumentList" resultType="map" parameterType="map">
        /* getDocumentList */
        SELECT
            CCD.*,
            DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
            DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_path,
            CFI.file_uuid
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON CCD.MIG_KEY = CFI.CONTENT_ID AND CFI.FILE_CD = 'inCome' AND CCD.DOCU_TYPE = 2
        WHERE
            CCD.DEL_STS != 999
            <if test='docuType != null and !"".equals(docuType)'>
                AND CCD.DOCU_TYPE = #{docuType}
            </if>
            <if test='documentPart != null and !"".equals(documentPart)'>
                AND CCD.DOCUMENT_PART_TYPE = #{documentPart}
            </if>
            <if test='deptPart != null and !"".equals(deptPart)'>
                AND CCD.DEPT_PART_TYPE = #{deptPart}
            </if>
            <if test='start != null and !"".equals(start)'>
                AND CCD.REG_DT BETWEEN #{start} AND #{end}
            </if>

        <if test='searchText != null and !"".equals(searchText)'>
            <choose>
                <when test='"1".equals(searchType)'>
                    AND CCD.DOCUMENT_TITLE_NAME LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"2".equals(searchType)'>
                    AND CONCAT(CCD.DOCUMENT_FIRST_NUMBER,'-',CCD.DOCUMENT_SECOND_NUMBER) LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"3".equals(searchType)'>
                    AND DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"4".equals(searchType)'>
                    AND CCD.RECEIVE_NAME LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"5".equals(searchType)'>
                    AND DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"6".equals(searchType)'>
                    AND CCD.MANAGER_NAME LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <when test='"7".equals(searchType)'>
                    AND CCD.REMARK_CN LIKE CONCAT('%', #{searchText}, '%')
                </when>
                <otherwise>
                    AND (
                        CCD.DOCUMENT_TITLE_NAME LIKE CONCAT('%', #{searchText}, '%') OR
                        CONCAT(CCD.DOCUMENT_FIRST_NUMBER,'-',CCD.DOCUMENT_SECOND_NUMBER) LIKE CONCAT('%', #{searchText}, '%') OR
                        DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') LIKE CONCAT('%', #{searchText}, '%') OR
                        CCD.RECEIVE_NAME LIKE CONCAT('%', #{searchText}, '%') OR
                        DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') LIKE CONCAT('%', #{searchText}, '%') OR
                        CCD.MANAGER_NAME LIKE CONCAT('%', #{searchText}, '%') OR
                        CCD.REMARK_CN LIKE CONCAT('%', #{searchText}, '%')
                        )
                </otherwise>
            </choose>
        </if>
        ORDER BY CCD.REG_DT DESC
    </select>

    <select id="getDocuOrderList" resultType="map" parameterType="map">
        /* getDocuOrderList */
        SELECT
            RE.*,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid,
            CFI2.file_org_name AS file_org_name2,
            CFI2.file_ext AS file_ext2,
            CFI2.file_size AS file_size2,
            IFNULL(CFI2.file_no, 0) AS file_no2,
            CFI2.file_path AS file_path2,
            CFI2.file_uuid AS file_uuid2
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IDO.*
                FROM
                    CAM_INSIDE.DJ_DOCUMENT_ORDER IDO,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                    <if test='classType != null and !"".equals(classType)'>
                        AND IDO.CLASS_SN = #{classType}
                    </if>
                    <choose>
                        <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                            AND CONCAT(IDO.DOCU_YEAR_SN,'-',IDO.DOCU_NO) like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                            AND IDO.PROJECT_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                            AND IDO.CO_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                    </choose>
                ORDER BY IDO.REG_DT
            ) RE
            LEFT JOIN
                CAM_COMMON.DJ_FILE_INFO CFI ON RE.DOCUMENT_ORDER_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'order'
            LEFT JOIN
                CAM_COMMON.DJ_FILE_INFO CFI2 ON RE.DOCUMENT_ORDER_SN = CFI2.CONTENT_ID AND CFI2.FILE_CD = 'order2'
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getDocuContractList" resultType="map" parameterType="map">
        /* getDocuContractList */
        SELECT
            RE.*,
            CFI.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IDC.*
                FROM
                    CAM_INSIDE.DJ_DOCUMENT_CONTRACT IDC,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                    AND IDC.ACTIVE = 'Y'
                    <if test='classType != null and !"".equals(classType)'>
                        AND IDC.CLASS_SN = #{classType}
                    </if>
                    <if test='searchYear != null and !"".equals(searchYear)'>
                        AND (DATE_FORMAT(IDC.DOCU_DE, '%Y') = #{searchYear})
                    </if>
                    <choose>
                        <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                            AND CONCAT(IDC.DOCU_YEAR_SN,'-',IDC.DOCU_NO) like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                            AND IDC.PROJECT_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                            AND IDC.CO_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                        <otherwise>
                            AND (
                                CONCAT(IDC.DOCU_YEAR_SN,'-',IDC.DOCU_NO) like CONCAT('%', #{searchText}, '%') OR
                                IDC.PROJECT_NAME like CONCAT('%', #{searchText}, '%') OR
                                IDC.CO_NAME like CONCAT('%', #{searchText}, '%')
                            )
                        </otherwise>
                    </choose>
                ORDER BY RIGHT(TRIM(IDC.DOCU_YEAR_SN),2) ASC, CAST(DOCU_NO AS UNSIGNED) ASC
            ) RE
            LEFT JOIN
                CAM_COMMON.DJ_FILE_INFO CFI ON RE.DOCUMENT_CONTRACT_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'contract'
        GROUP BY RE.DOCUMENT_CONTRACT_SN
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getDocuContractExcelDownList" resultType="map" parameterType="map">
        /* getDocuContractExcelDownList */
        SELECT
            RE.*,
            CFI.*,
            DIS.*,
            DI.DOC_NO,
            FORMAT(RE.PROJECT_MONEY, 0) as CUSTOM_PROJECT_MONEY,
            CONCAT(RE.START_DE,' ~ ',RE.END_DE) AS CONTRACT_PERIOD,
            CONCAT(RE.DOCU_YEAR_SN,'-',RE.DOCU_NO) AS DOCU_NUM,
            CONCAT(DIS.WARRANTY_START_DE,' ~ ',DIS.WARRANTY_END_DE) AS WARRANTY_PERIOD,
            CONCAT(DIS.GUARANTEE_RATE,'%') AS GUARANTEE_RATE_PER,
            CASE
                WHEN CFI.file_no IS NOT NULL THEN 'O'
                ELSE 'X'
            END AS FILE_YN
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IDC.*
                FROM
                    CAM_INSIDE.DJ_DOCUMENT_CONTRACT IDC,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                AND IDC.ACTIVE = 'Y'
                AND IDC.DEL_STS = 1
                <if test='classType != null and !"".equals(classType)'>
                    AND IDC.CLASS_SN = #{classType}
                </if>
                <if test='start != null and !"".equals(start)'>
                    <![CDATA[
                                AND IDC.START_DE >= #{start}
                    ]]>
                </if>
                <if test='end != null and !"".equals(end)'>
                    <![CDATA[
                                AND IDC.END_DE <= #{end}
                    ]]>
                </if>
                <choose>
                    <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                        AND CONCAT(IDC.DOCU_YEAR_SN,'-',IDC.DOCU_NO) like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                        AND IDC.PROJECT_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                        AND IDC.CO_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <otherwise>
                        AND (
                        CONCAT(IDC.DOCU_YEAR_SN,'-',IDC.DOCU_NO) like CONCAT('%', #{searchText}, '%') OR
                        IDC.PROJECT_NAME like CONCAT('%', #{searchText}, '%') OR
                        IDC.CO_NAME like CONCAT('%', #{searchText}, '%')
                        )
                    </otherwise>
                </choose>
            ORDER BY RIGHT(TRIM(IDC.DOCU_YEAR_SN),2) ASC, CAST(DOCU_NO AS UNSIGNED) ASC
        ) RE
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON RE.DOCUMENT_CONTRACT_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'contract'
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM PC ON PC.CLAIM_SN = RE.CLAIM_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON PC.DOC_ID = DI.DOC_ID
        LEFT JOIN
            CAM_INSIDE.DJ_DOCUMENT_INSURANCE DIS ON DIS.DOCUMENT_CONTRACT_SN = RE.DOCUMENT_CONTRACT_SN
        GROUP BY RE.DOCUMENT_CONTRACT_SN
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getDocuContractOne" resultType="map" parameterType="map">
        /* getDocuContractOne */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_DOCUMENT_CONTRACT DC
        LEFT JOIN
            CAM_MNG.DJ_PURC_CLAIM PC ON PC.CLAIM_SN = DC.CLAIM_SN
        <if test="classSn == 3">
        LEFT JOIN
            CAM_INSIDE.DJ_DOCUMENT_PRODUCT DP ON DP.DOCUMENT_CONTRACT_SN = DC.DOCUMENT_CONTRACT_SN
        </if>
        WHERE
            DC.DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </select>

    <select id="getSnackList" resultType="map" parameterType="map">
        /* getSnackList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    ISI.*,
                    (SELECT COUNT(*) FROM CAM_MNG.DJ_PAY_APP_DET WHERE PAY_APP_SN = ISI.PAY_APP_SN AND EXNP_SAVE = 'Y') AS EXNP_STATUS,
                    (SELECT COUNT(*) FROM CAM_MNG.DJ_EXNP WHERE PAY_APP_SN = ISI.PAY_APP_SN AND REQ_END_DE IS NOT NULL AND REQ_END_DE != "") AS EXNP_DOC_STATUS,
                    (SELECT COUNT(*) FROM CAM_COMMON.DJ_FILE_INFO WHERE CONTENT_ID = ISI.SNACK_INFO_SN AND FILE_CD = 'snack') AS fileCnt,
                    IF(ISI.FR_FILE_NO = '' OR ISI.FR_FILE_NO IS NULL, '0', ISI.FR_FILE_NO) AS frFileCnt
                FROM
                    CAM_INSIDE.DJ_SNACK_INFO ISI
                WHERE
                    1=1
                <if test="empSeq != null and empSeq != ''">
                    AND ISI.REG_EMP_SEQ = #{empSeq}
                </if>
                <if test="mealsDivision != null and mealsDivision != ''">
                    AND ISI.SNACK_TYPE = #{mealsDivision}
                </if>
                <if test="payDivision != null and payDivision != ''">
                    AND ISI.PAY_TYPE = #{payDivision}
                </if>
                <if test="approval != null and approval != ''">
                    AND ISI.STATUS = #{approval}
                </if>
                <if test='"Y".equals(isAdmin)'>
                    AND ISI.STATUS != '0'
                </if>
                AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
                ORDER BY ISI.REG_DT
            ) RE
        ORDER BY RE.REG_DT DESC
    </select>

    <select id="getSnackOne" resultType="map" parameterType="map">
        /* getSnackOne */
        SELECT
            ISI.SNACK_INFO_SN,
            ISI.USE_DT,
            ISI.USE_TIME,
            ISI.SNACK_TYPE,
            ISI.SNACK_TYPE_TEXT,
            ISI.USER_SN,
            ISI.USER_TEXT,
            ISI.PAY_TYPE,
            ISI.PAY_TYPE_TEXT,
            ISI.RECIPIENT_EMP_SEQ,
            ISI.RECIPIENT_EMP_NAME,
            ISI.CARD_TEXT,
            ISI.AREA_SEQ,
            ISI.AREA_NAME,
            ISI.AMOUNT_SN,
            ISI.USE_REASON,
            ISI.REG_EMP_SEQ,
            ISI.REG_EMP_NAME,
            ISI.STATUS,
            ISI.FR_FILE_NO,
            ISI.CARD_SN,
            HEI.EMP_NAME_KR,
            HEI.DEPT_NAME,
            HEI.DEPT_TEAM_NAME,
            CASE WHEN HEI.DUTY_NAME IS NULL THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END AS POSITION_NAME,
            PA.PAY_APP_SN,
            PA.DOC_ID,
            PA.DOC_STATUS
        FROM
            CAM_INSIDE.DJ_SNACK_INFO ISI
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON ISI.REG_EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_MNG.DJ_PAY_APP PA ON PA.PAY_APP_SN = ISI.PAY_APP_SN
        WHERE
            SNACK_INFO_SN = #{snackInfoSn}
    </select>

    <select id="getSnackStatDept" resultType="map" parameterType="map">
        /* getSnackStatDept */
        SELECT
        <choose>
            <when test='"2".equals(searchDept)'>
                REG_TEAM_NAME AS dept
            </when>
            <otherwise>
                REG_DEPT_NAME AS dept
            </otherwise>
        </choose>
        FROM
            CAM_INSIDE.DJ_SNACK_INFO
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
            <if test='"2".equals(searchDept)'>
                AND REG_TEAM_NAME != ""
            </if>
            <if test='searchType != null and searchType != ""'>
                AND SNACK_TYPE in (${searchType})
            </if>
        GROUP BY
            <choose>
                <when test='"2".equals(searchDept)'>
                    REG_TEAM_NAME
                </when>
                <otherwise>
                    REG_DEPT_NAME
                </otherwise>
            </choose>
    </select>

    <select id="getSnackStat" resultType="map" parameterType="map">
        /* getSnackStat */
        SELECT
            SUM(AMOUNT_SN) AS value
        FROM
            CAM_INSIDE.DJ_SNACK_INFO
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
            <if test='"2".equals(searchDept)'>
                AND REG_TEAM_NAME != ""
            </if>
            <if test='searchType != null and searchType != ""'>
                AND SNACK_TYPE in (${searchType})
            </if>
        GROUP BY
            <choose>
                <when test='"2".equals(searchDept)'>
                    REG_TEAM_NAME
                </when>
                <otherwise>
                    REG_DEPT_NAME
                </otherwise>
            </choose>
    </select>

    <select id="getSnackExcelList" resultType="map" parameterType="map">
        /* getSnackExcelList */
        SELECT
            ISI.USE_DT,
            ISI.SNACK_TYPE,
            ISI.SNACK_TYPE_TEXT,
            IFNULL(CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END, "") AS REG_DEPT_NAME,
            IFNULL(CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END, "") AS REG_TEAM_NAME,
            IFNULL(HEI.EMP_NAME_KR, "") AS EMP_NAME,
            ISI.AMOUNT_SN
        FROM
            CAM_INSIDE.DJ_SNACK_INFO ISI
        LEFT JOIN
            CAM_INSIDE.DJ_SNACK_COMPANION ISC ON ISI.SNACK_INFO_SN = ISC.SNACK_INFO_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON ISC.EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
        <if test='searchTypeText != null and searchTypeText != ""'>
            AND SNACK_TYPE in (${searchTypeText})
        </if>
        ORDER BY REG_DEPT_NAME, REG_TEAM_NAME, SNACK_TYPE, USE_DT
    </select>

    <select id="getArchiveList" resultType="map" parameterType="map">
        /* getArchiveList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IAI.*,
                    <![CDATA[
                        case
                        when (DISPOSAL_YEAR >= DATE_FORMAT(NOW(), '%Y'))
                    then 'N'
                    ELSE 'Y'
                    END AS DISPOSE_YN,
                    CFI.file_org_name,
                    CFI.file_ext,
                    CFI.file_size,
                    IFNULL(CFI.file_no, 0) AS file_no,
                    CFI.file_path,
                    CFI.file_uuid
                    ]]>
                FROM
                    CAM_INSIDE.DJ_ARCHIVE_INFO IAI
                LEFT JOIN
                    CAM_COMMON.DJ_FILE_INFO CFI ON IAI.ARCHIVE_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'archive',
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                AND DOC_YEAR = #{searchDate}
                <choose>
                    <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                        AND DOC_NUM like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                        AND DEPT_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                        AND VISIT like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "4".equals(searchType)'>
                        AND DOC_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "5".equals(searchType)'>
                        AND MANAGER_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                </choose>
                AND ACTIVE != 'N'
                ORDER BY IAI.REG_DT
            ) RE
        <if test='"1".equals(doclistState)'>
            WHERE RE.DISPOSE_YN = 'N'
        </if>
        <if test='"2".equals(doclistState)'>
            WHERE RE.DISPOSE_YN = 'Y'
        </if>
        <if test='"3".equals(doclistState)'>
            WHERE ACTIVE = 'D'
        </if>
        ORDER BY ARCHIVE_INFO_SN
    </select>

    <insert id="setDocumentInsert" parameterType="map">
        /* setDocumentInsert */
        INSERT INTO CAM_COMMON.DJ_CAMTIC_DOCUMENT
            (
                DOCU_TYPE,
                DOCUMENT_PART_TYPE,
                DOCUMENT_PART_NAME,
                EFFECTIVE_DT,
                SHIPMENT_DT,
                RECEIVE_NAME,
                MANAGER_SN,
                MANAGER_NAME,
                DOCUMENT_TITLE_NAME,
                <if test='"2".equals(docuType)'>
                    DEPT_PART_TYPE,
                    DEPT_PART_TEXT,
                    <if test='"6".equals(deptPartType)'>
                        USER_SN,
                        USER_TEXT,
                    </if>
                </if>
                REMARK_CN,
                DOCUMENT_FIRST_NUMBER,
                DOCUMENT_SECOND_NUMBER,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT
            )
        VALUES
            (
                #{docuType},
                #{documentPartType},
                #{documentPartName},
                #{effectiveDt},
                #{shipmentDt},
                #{receiveName},
                #{managerSn},
                #{managerName},
                #{documentTitleName},
                <if test='"2".equals(docuType)'>
                    #{deptPartType},
                    #{deptPartText},
                    <if test='"6".equals(deptPartType)'>
                        #{userSn},
                        #{userText},
                    </if>
                </if>
                #{remarkCn},
                CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                (SELECT IFNULL(MAX(SCCD.DOCUMENT_SECOND_NUMBER), 0)+1 FROM CAM_COMMON.DJ_CAMTIC_DOCUMENT SCCD WHERE SCCD.DOCUMENT_FIRST_NUMBER = CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
                #{regEmpSeq},
                #{regEmpName},
                NOW()
            )
    </insert>

    <insert id="setInComeInsert" parameterType="map">
        /* setDocumentInsert */
        INSERT INTO CAM_COMMON.DJ_CAMTIC_DOCUMENT
        (
        DOCU_TYPE,
        DOCUMENT_PART_TYPE,
        DOCUMENT_PART_NAME,
        EFFECTIVE_DT,
        SHIPMENT_DT,
        RECEIVE_NAME,
        MANAGER_SN,
        MANAGER_NAME,
        DOCUMENT_TITLE_NAME,
        <if test='"2".equals(docuType)'>
            DEPT_PART_TYPE,
            DEPT_PART_TEXT,
            <if test='"6".equals(deptPartType)'>
                USER_SN,
                USER_TEXT,
            </if>
        </if>
        REMARK_CN,
        REG_EMP_SEQ,
        REG_EMP_NAME,
        REG_DT
        )
        VALUES
        (
        #{docuType},
        #{documentPartType},
        #{documentPartName},
        #{effectiveDt},
        #{shipmentDt},
        #{receiveName},
        #{managerSn},
        #{managerName},
        #{documentTitleName},
        <if test='"2".equals(docuType)'>
            #{deptPartType},
            #{deptPartText},
            <if test='"6".equals(deptPartType)'>
                #{userSn},
                #{userText},
            </if>
        </if>
        #{remarkCn},
        #{regEmpSeq},
        #{regEmpName},
        NOW()
        )
        <selectKey keyProperty="documentSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_COMMON' AND TABLE_NAME = 'DJ_CAMTIC_DOCUMENT'
        </selectKey>
    </insert>

    <insert id="setDocuOrderInsert" parameterType="map">
        /* setDocuOrderInsert */
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_ORDER
            (
                MAIN_CLASS_SN,
                CLASS_SN,
                CLASS_NAME,
                DOCU_YEAR_SN,
                DOCU_NO,
                DOCU_DE,
                DOCU_CHECK_SN,
                DOCU_CHECK_NAME,
                PROJECT_NAME,
                START_DE,
                END_DE,
                CO_SN,
                CO_NAME,
                CONDITION_NAME,
                REMARK_CN,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT
            )
        VALUES
            (
                1,
                #{classSn},
                #{className},
                CONCAT('TICS', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                (SELECT IFNULL(MAX(SIDO.DOCU_NO), 0)+1 FROM CAM_INSIDE.DJ_DOCUMENT_ORDER SIDO WHERE DOCU_YEAR_SN = CONCAT('TICS', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
                #{docuDe},
                #{docuCheckSn},
                #{docuCheckName},
                #{projectName},
                #{startDe},
                #{endDe},
                #{coSn},
                #{coName},
                #{conditionName},
                #{remarkCn},
                #{regEmpSeq},
                #{regEmpName},
                NOW()
            )
    </insert>

    <insert id="setDocuContractInsert" parameterType="map">
        /* setDocuContractInsert */
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_CONTRACT
            (
                MAIN_CLASS_SN,
                MAIN_CLASS_NAME,
                CLASS_SN,
                CLASS_NAME,
                DOCU_YEAR_SN,
                DOCU_NO,
                DOCU_DE,
                PROJECT_NAME,
                PROJECT_MONEY,
                START_DE,
                END_DE,
                CO_SN,
                CO_NAME,
                REMARK_CN,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT,

                PROJECT_NUMBER,
                REPRESENTATIVE,
                BUSINESS_NUMBER,
                ZIP_CODE,
                ADDR,
                ADDR_DETAIL,
                RENTAL_EA,
                RENTAL_INFO,
                TOTAL_MONTH,
                PAYMENT,
                SURT_INSR,
                DLV_LOC,
                METHOD_SN,
                METHOD_NAME

            )
        VALUES
            (
                #{mainClassSn},
                #{mainClassName},
                #{classSn},
                #{className},
                CONCAT(#{docuName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                (select lpad(max(cast(b.docu_no as char(3))) + 1, 3, '0') from cam_inside.dj_document_contract b where right(docu_year_sn, 2) = date_format(now(), '%y') and b.active='y'),
                #{docuDe},
                #{projectName},
                #{contractAmount},
                #{startDe},
                #{endDe},
                #{coSn},
                #{coName},
                #{remarkCn},
                #{regEmpSeq},
                #{regEmpName},
                NOW(),
                #{projectNumber},
                #{representative},
                #{businessNumber},
                #{zipCode},
                #{addr},
                #{addrDetail},
                #{rentalEa},
                #{rentalInfo},
                #{totalMonth},
                #{payment},
                #{surtInsr},
                #{dlvLoc},
                #{methodSn},
                #{methodName}
            )
        <selectKey keyProperty="documentContractSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_DOCUMENT_CONTRACT'
        </selectKey>
    </insert>

    <insert id="setDocuContractUpd" parameterType="map">
        /* setDocuContractUpd */
        UPDATE CAM_INSIDE.DJ_DOCUMENT_CONTRACT
        SET
            MAIN_CLASS_SN = #{mainClassSn},
            MAIN_CLASS_NAME = #{mainClassName},
            CLASS_SN = #{classSn},
            CLASS_NAME = #{className},
            DOCU_DE = #{docuDe},
            PROJECT_NAME = #{projectName},
            PROJECT_MONEY = #{contractAmount},
            START_DE = #{startDe},
            END_DE = #{endDe},
            CO_SN = #{coSn},
            CO_NAME = #{coName},
            REMARK_CN = #{remarkCn},

            PROJECT_NUMBER = #{projectNumber},
            REPRESENTATIVE = #{representative},
            BUSINESS_NUMBER = #{businessNumber},
            ZIP_CODE = #{zipCode},
            ADDR = #{addr},
            ADDR_DETAIL = #{addrDetail},
            RENTAL_EA = #{rentalEa},
            RENTAL_INFO = #{rentalInfo},
            TOTAL_MONTH = #{totalMonth},
            PAYMENT = #{payment},
            SURT_INSR = #{surtInsr},
            DLV_LOC = #{dlvLoc},
            DOCU_YEAR_SN = #{projectNumber},
            DOCU_NO = #{projectNumber2},
            METHOD_SN = #{methodSn},
            METHOD_NAME = #{methodName}
        WHERE
            DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </insert>

    <insert id="setDocuContractDel" parameterType="map">
        /* setDocuContractDel */
        UPDATE CAM_INSIDE.DJ_DOCUMENT_CONTRACT
        SET
            DEL_STS = #{delSts},
            ACTIVE = CASE WHEN #{delSts} = 999 THEN 'N' ELSE 'Y' END
        WHERE
            DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </insert>

    <insert id="setSnackInsert" parameterType="map">
        /* setSnackInsert */
        INSERT INTO CAM_INSIDE.DJ_SNACK_INFO
            (
                USE_DT,
                USE_TIME,
                SNACK_TYPE,
                SNACK_TYPE_TEXT,
                USER_SN,
                USER_TEXT,
                PAY_TYPE,
                PAY_TYPE_TEXT,
                RECIPIENT_EMP_SEQ,
                RECIPIENT_EMP_NAME,
                AREA_SEQ,
                AREA_NAME,
                AMOUNT_SN,
                USE_REASON,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DEPT_NAME,
                REG_TEAM_NAME,
                STATUS,
                FR_FILE_NO,
                CARD_TEXT,
                CARD_SN
            )
        VALUES
            (
                #{useDt},
                CONCAT(#{useHour}, ':', #{useMin}),
                #{snackType},
                #{snackTypeText},
                #{userSn},
                #{userText},
                #{payType},
                #{payTypeText},
                #{chargeUser},
                #{chargeUserText},
                #{areaSn},
                #{areaName},
                #{usAmount},
                #{useReason},
                #{empSeq},
                #{empName},
                #{regDeptName},
                #{regTeamName},
                '100',
                #{fileNo},
                #{cardText},
                #{cardSn}
            )
        <selectKey keyProperty="snackInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_SNACK_INFO'
        </selectKey>
    </insert>

    <update id="setSnackUpdate" parameterType="map">
        /* setSnackUpdate */
        UPDATE CAM_INSIDE.DJ_SNACK_INFO
        SET
            USE_DT = #{useDt},
            USE_TIME = CONCAT(#{useHour}, ':', #{useMin}),
            SNACK_TYPE = #{snackType},
            SNACK_TYPE_TEXT = #{snackTypeText},
            USER_SN = #{userSn},
            USER_TEXT = #{userText},
            PAY_TYPE = #{payType},
            PAY_TYPE_TEXT =  #{payTypeText},
            RECIPIENT_EMP_SEQ = #{chargeUser},
            RECIPIENT_EMP_NAME = #{chargeUserText},
            AREA_SEQ = #{areaSn},
            AREA_NAME = #{areaName},
            AMOUNT_SN = #{usAmount},
            USE_REASON = #{useReason},
            FR_FILE_NO = #{fileNo}
        WHERE
            SNACK_INFO_SN = #{snackInfoSn}
    </update>

    <delete id="setSnackDel" parameterType="map">
        /* setSnackDel */
        DELETE FROM CAM_INSIDE.DJ_SNACK_INFO WHERE SNACK_INFO_SN IN (${snackInfoSn})
    </delete>

    <insert id="setSnackCompanionInsert" parameterType="map">
        /* setSnackCompanionInsert */
        INSERT INTO CAM_INSIDE.DJ_SNACK_COMPANION
            (
                SNACK_INFO_SN,
                EMP_SEQ,
                EMP_NAME,
                AMT
            )
        VALUES
        <foreach collection="amt" item="item" separator=" , ">
            (
                #{snackInfoSn},
                #{item.amtEmpSeq},
                #{item.amtEmpName},
                #{item.amt}
            )
        </foreach>
    </insert>

    <insert id="insCardHist" parameterType="map">
        /* insCardHist */
        INSERT INTO CAM_INSIDE.DJ_SNACK_CARD_HIST
            (
                SNACK_INFO_SN,
                CARD_NO,
                AUTH_DD,
                AUTH_NO,
                AUTH_HH,
                BUY_STS
            )
        VALUES
            (
                #{snackInfoSn},
                #{cardNo},
                #{authDate},
                #{authNum},
                #{authTime},
                #{buySts}
            )
    </insert>

    <delete id="delCardHist" parameterType="map">
        /* delCardHist */
        DELETE FROM CAM_INSIDE.DJ_SNACK_CARD_HIST WHERE SNACK_INFO_SN IN (${snackInfoSn})
    </delete>

    <delete id="delSnackUseCardInfo" parameterType="map">
        /* delSnackUseCardInfo */
        DELETE FROM CAM_MNG.DJ_USE_CARD_INFO WHERE SNACK_INFO_SN IN (${snackInfoSn})
    </delete>

    <update id="setSnackReqCert" parameterType="map">
        /* setSnackReqCert */
        UPDATE
            CAM_INSIDE.DJ_SNACK_INFO
        SET
        <if test='status != null and !"".equals(status) and !"110".equals(status) and !"10".equals(status)'>
            APPROVAL_EMP_SEQ = #{empSeq},
            APPROVAL_RESULT_DATE = now(),
        </if>
            STATUS = ${status}
        WHERE
            <if test='snackInfoSn != null and !"".equals(snackInfoSn)'>
                SNACK_INFO_SN = #{snackInfoSn}
            </if>
            <if test='snackInfoSnArr != null and !"".equals(snackInfoSnArr)'>
                SNACK_INFO_SN IN (${snackInfoSnArr})
            </if>
    </update>

    <insert id="setArchiveInsert" parameterType="map">
        /* setArchiveInsert */
        INSERT INTO CAM_INSIDE.DJ_ARCHIVE_INFO
            (
                DOC_YEAR,
                DOC_NUM,
                DEPT_SEQ,
                DEPT_NAME,
                TEAM_SEQ,
                TEAM_NAME,
                VISIT,
                MANAGER_SN,
                MANAGER_NAME,
                PRESERVATION_PERIOD,
                DISPOSAL_YEAR,
                DOC_NAME,
                UPDT_DT
            )
        VALUES
            (
                #{docYear},
                #{docNum},
                #{deptSn},
                #{deptName},
                #{teamSn},
                #{teamName},
                #{visit},
                #{managerSn},
                #{managerName},
                #{prePeriod},
                #{disYear},
                #{docName},
                NULL
            )
        <selectKey keyProperty="archiveInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_ARCHIVE_INFO'
        </selectKey>
    </insert>

    <!--문서고 등록 - 문서위치 조회-->
    <select id="getDocumentPlaceList" parameterType="map" resultType="map">
        /*getDocumentPlaceList*/
        SELECT
            CM_CODE_NM AS TEXT,
            CM_CODE_ID AS VALUE
        FROM
            CAM_COMMON.DJ_COM_CODE
        WHERE
            CM_GROUP_CODE_ID = 10
    </select>

    <insert id="setProductInsert" parameterType="map">
        /*setProductInsert*/
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_PRODUCT
        (
            DOCUMENT_CONTRACT_SN,
            PRODUCT_NAME,
            PRODUCT_COUNT,
            PRODUCT_ONE_MONEY,
            PRODUCT_TOTAL_MONEY,
            BMK
        )
        VALUES
        <foreach collection="area" item="item" separator=" , ">
        (
            #{documentContractSn},
            #{item.productName},
            #{item.productCount},
            #{item.productOneMoney},
            #{item.productTotalMoney},
            #{item.bmk}
        )
        </foreach>
    </insert>

    <update id="setProductUpdate" parameterType="map">
        /*setProductUpdate*/
        <foreach collection="area" item="item" separator=";">
            UPDATE
                CAM_INSIDE.DJ_DOCUMENT_PRODUCT
            SET
                PRODUCT_NAME = #{item.productName},
                PRODUCT_COUNT = #{item.productCount},
                PRODUCT_ONE_MONEY = #{item.productOneMoney},
                PRODUCT_TOTAL_MONEY = #{item.productTotalMoney},
                BMK = #{item.bmk}
            WHERE
                DOCUMENT_CONTRACT_SN = #{documentContractSn}
        </foreach>
    </update>

    <insert id="insOneFileInfo" parameterType="map" >
        /* insOneFileInfo */
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
        FILE_CD,
        FILE_UUID,
        FILE_ORG_NAME,
        FILE_PATH,
        FILE_SIZE,
        FILE_EXT,
        EMP_SEQ,
        REG_EMP_SEQ
         <if test="frKey != null and frKey != ''">
             , FR_KEY
         </if>
        )
        VALUES
        (
        #{fileCd},
        #{fileUUID},
        #{fileOrgName},
        #{filePath},
        #{fileSize},
        #{fileExt},
        #{empSeq},
        #{empSeq}
        <if test="frKey != null and frKey != ''">
            , #{frKey}
        </if>
        )

        <selectKey keyProperty="fileNo" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_COMMON' AND TABLE_NAME = 'DJ_FILE_INFO'
        </selectKey>
    </insert>

    <update id="setDocuContractFileKey" parameterType="map">
        UPDATE CAM_INSIDE.DJ_DOCUMENT_CONTRACT
        SET FILE_SN = #{fileNo}
        WHERE DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </update>

    <!--문서고 삭제-->
    <update id="setAchiveDelete" parameterType="java.util.List">
        /* setAchiveDelete */
        UPDATE
        CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
        ACTIVE = 'N', UPDT_DT = NOW()
        WHERE
        ARCHIVE_INFO_SN IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--문서고 폐기-->
    <update id="setAchiveScrap" parameterType="java.util.List">
        /* setAchiveScrap */
        UPDATE
        CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
        ACTIVE = 'D', UPDT_DT = NOW()
        WHERE
        ARCHIVE_INFO_SN IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--문서고 업데이트-->
    <update id="setArchiveUpdate" parameterType="map">
        /* setArchiveUpdate */
        UPDATE
            CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
            DOC_YEAR = #{docYear},
            DOC_NUM = #{docNum},
            DEPT_SEQ = #{deptSn},
            DEPT_NAME = #{deptName},
            TEAM_SEQ = #{teamSn},
            TEAM_NAME = #{teamName},
            VISIT = #{visit},
            MANAGER_SN = #{managerSn},
            MANAGER_NAME = #{managerName},
            PRESERVATION_PERIOD = #{prePeriod},
            DISPOSAL_YEAR = #{disYear},
            DOC_NAME = #{docName},
            UPDT_DT = NOW(),
            UPDUSR_SN = #{empSeq}
        WHERE
            ARCHIVE_INFO_SN = #{pk}
    </update>

    <select id="getArchiveinfoList" parameterType="map" resultType="map">
        /* getArchiveinfoList */
        SELECT
            a.*,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid
        FROM
            CAM_INSIDE.DJ_ARCHIVE_INFO as a
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON a.ARCHIVE_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'archive'
        WHERE
            ARCHIVE_INFO_SN = #{pk}
    </select>

    <update id="delDocumentList" parameterType="map">
        /*등록대장, 접수대장 임시 삭제*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 10
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <update id="delCancelDocumentList" parameterType="map">
        /*등록대장, 접수대장 삭제 복구*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 1
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <update id="delFinalDocumentList" parameterType="map">
        /*등록대장, 접수대장 최종삭제*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 999
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>


    <update id="setRlDelete" parameterType="map">
        UPDATE
            cam_common.dj_camtic_document
        SET
            <if test='DEL_STS != null and !"".equals(DEL_STS) and "1".equals(DEL_STS)'>
                DEL_STS = "10"
            </if>
            <if test='DEL_STS != null and !"".equals(DEL_STS) and "10".equals(DEL_STS)'>
                DEL_STS = "999"
            </if>
        WHERE
            DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <select id="getDocViewOne" resultType="map" parameterType="map">
        /*getDocViewOne*/
        SELECT
            CCD.*,
            DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
            DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD
        WHERE
            DOCUMENT_SN = #{documentSn}
    </select>

    <update id="setDocumentUpdate" parameterType="map">
        /*setDocumentUpdate*/
        UPDATE
            cam_common.dj_camtic_document
        SET
            docu_type=#{docuType},
            document_part_type=#{documentPartType},
            document_part_name=#{documentPartName},
            effective_dt=#{effectiveDt},
            shipment_dt=#{shipmentDt},
            receive_name=#{receiveName},
            manager_sn=#{managerSn},
            manager_name=#{managerName},
            document_title_name=#{documentTitleName},
            <if test='"2".equals(docuType)'>
                dept_part_type=#{deptPartType}
                dept_part_text=#{deptPartText}
                <if test='"6".equals(deptPartType)'>
                    user_sn=#{userSn},
                    user_text=#{userText},
                </if>
            </if>
            remark_Cn=#{remarkCn},
            document_first_number= CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
            document_second_number=(SELECT IFNULL(MAX(SCCD.document_second_number), 0)+1 FROM CAM_COMMON.DJ_CAMTIC_DOCUMENT SCCD WHERE SCCD.document_first_number = CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
            MOD_EMP_SEQ=#{regEmpSeq},
            MOD_EMP_NAME=#{regEmpName},
            MOD_DT = NOW()
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <select id="getInComeUpdateList" resultType="map" parameterType="map">
        /* getInComeUpdateList */
        SELECT
            CCD.*,
            DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
            DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            DI.APPROVE_STAT_CODE
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON FILE_NO = (SELECT MAX(FILE_NO) FROM CAM_COMMON.DJ_FILE_INFO SCFI WHERE CCD.DOCUMENT_SN = SCFI.CONTENT_ID AND SCFI.FILE_CD = 'inCome')
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON CCD.DOC_ID = DI.DOC_ID
        WHERE
            DOCUMENT_SN = #{documentSn}
    </select>



    <select id="getInComeUpdateFileList" resultType="map" parameterType="map">
        /* getInComeUpdateFileList */
        SELECT
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid
        FROM
            CAM_COMMON.DJ_FILE_INFO CFI
        WHERE
            CFI.CONTENT_ID = #{documentSn}
          AND CFI.FILE_CD = 'inCome'
    </select>


    <update id="setInComeUpdate" parameterType="map">
        /*접수대장 팝업 수정 */
        UPDATE
            CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET
            DEPT_PART_TYPE = #{deptPartType},
            DEPT_PART_TEXT = #{deptPartText},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_EMP_NAME = #{regEmpName},
            MOD_DT = NOW(),
            MANAGER_SN = #{managerSn},
            MANAGER_NAME = #{managerName},
            DOCUMENT_TITLE_NAME = #{documentTitleName},
            RECEIVE_NAME = #{receiveName},
            EFFECTIVE_DT = #{effectiveDt},
            SHIPMENT_DT = #{shipmentDt},
            REMARK_CN = #{remarkCn},
            USER_SN = CASE WHEN DEPT_PART_TYPE != 6 THEN NULL ELSE #{userSn} END,
            USER_TEXT = CASE WHEN DEPT_PART_TYPE != 6 THEN NULL ELSE #{userText} END
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <select id="getCardList" parameterType="map" resultType="map">
        /* getCardList */
        SELECT
            A.*,
            B.FR_FILE_NO
        FROM
            CAM_INSIDE.DJ_SNACK_CARD_HIST A
        LEFT JOIN
            CAM_INSIDE.DJ_SNACK_INFO B
          ON
              A.SNACK_INFO_SN = B.SNACK_INFO_SN
        WHERE A.SNACK_INFO_SN = #{snackInfoSn}
    </select>

    <select id="getFileListC" parameterType="map" resultType="map">
        /* getFileListC */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{documentContractSn} AND FILE_CD = 'contract'
    </select>

    <select id="getFileList" parameterType="map" resultType="map">
        /* getFileList */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{snackInfoSn} AND FILE_CD = 'snack'
            <if test='reqTypeZ != null and !"".equals(reqTypeZ)'>
                <if test='fileNo != null and !"".equals("fileNo")'>
                    OR (CONTENT_ID = CONCAT('snack_', #{snackInfoSn}) AND FILE_CD = 'useCard')
                    OR FILE_NO IN (${fileNo})
                </if>
                <if test='snackInfoSnArr != null and !"".equals("snackInfoArr")'>
                   OR ((FILE_CD = 'useCard' or FILE_CD = 'snack') AND CONTENT_ID IN
                   <foreach collection="snackInfoSnArr" item="item" open="(" close=")" separator=",">
                       CONCAT('snack_', #{item})
                   </foreach>
                   )
               </if>
           </if>
    </select>

    <select id="migFileInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            CONTENT_ID = #{migKey}
    </select>

    <update id="updateInComeApprStat" parameterType="map">
        /* updateInComeApprStat */
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <update id="updateInComeFinalApprStat" parameterType="map">
        /* updateInComeFinalApprStat */
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <update id="setIncomeFileDocNm" parameterType="map">
        /* setIncomeFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{file_no}
        AND file_cd = #{file_cd}
    </update>

    <update id="setDocuContractUnlink" parameterType="map">
        /* setDocuContractUnlink */
        UPDATE CAM_INSIDE.DJ_DOCUMENT_CONTRACT
        SET
            UNLINK_YN = 'Y'
        WHERE
            CLAIM_SN = #{claimSn}
    </update>

    <update id="setInComeDocNumUpdate" parameterType="map">
        /*setInComeDocNumUpdate*/
        UPDATE
            CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET
            DOCUMENT_FIRST_NUMBER = CONCAT('[CAMTIC]', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
            DOCUMENT_SECOND_NUMBER = (SELECT IFNULL(MAX(SCCD.DOCUMENT_SECOND_NUMBER), 0)+1 FROM CAM_COMMON.DJ_CAMTIC_DOCUMENT SCCD WHERE SCCD.DOCUMENT_FIRST_NUMBER = CONCAT('[CAMTIC]', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)))
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <select id="getUpdatedDocNum" parameterType="map" resultType="map">
        SELECT
            CONCAT(DOCUMENT_FIRST_NUMBER, '-', DOCUMENT_SECOND_NUMBER) as updatedDocNum
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT
        WHERE
            DOCUMENT_SN = #{documentSn}
    </select>

    <insert id="setInsuranceInsert" parameterType="map">
        /*setInsuranceInsert*/
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_INSURANCE
        (
            DOCUMENT_CONTRACT_SN,
            WARRANTY_INSURANCE_SN,
            WARRANTY_INSURANCE_NAME,
            WARRANTY_START_DE,
            WARRANTY_END_DE,
            GUARANTEE_RATE,
            REG_EMP_SEQ,
            REG_EMP_NAME
        )
        VALUES
        <foreach collection="insurance" item="item" separator=" , ">
            (
                #{documentContractSn},
                #{item.warrantyInsuranceSn},
                #{item.warrantyInsuranceName},
                #{item.insStartDe},
                #{item.insEndDe},
                #{item.guaranteeRate},
                #{regEmpSeq},
                #{regEmpName}
            )
        </foreach>
    </insert>

    <select id="getInsuranceList" resultType="map" parameterType="map">
        /* getInsuranceList */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_DOCUMENT_INSURANCE
        WHERE
            DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </select>

    <delete id="setInsuranceDelete" parameterType="map">
        /* setInsuranceDelete */
        DELETE FROM
            CAM_INSIDE.DJ_DOCUMENT_INSURANCE
        WHERE
            DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </delete>
</mapper>