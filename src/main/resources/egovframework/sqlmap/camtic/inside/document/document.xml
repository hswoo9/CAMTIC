<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="document">

    <select id="getSnackList" resultType="map" parameterType="map">
        /* getSnackList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    ISI.*
                FROM
                    CAM_INSIDE.DJ_SNACK_INFO ISI,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                ORDER BY ISI.REG_DT
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getSnackOne" resultType="map" parameterType="map">
        /* getSnackOne */
        SELECT
            ISI.SNACK_INFO_SN,
            ISI.USE_DT,
            ISI.USE_TIME,
            ISI.SNACK_TYPE,
            ISI.SNACK_TYPE_TEXT,
            ISI.USER_SN,
            ISI.USER_TEXT,
            ISI.PAY_TYPE,
            ISI.PAY_TYPE_TEXT,
            ISI.RECIPIENT_EMP_SEQ,
            ISI.RECIPIENT_EMP_NAME,
            ISI.CARD_TEXT,
            ISI.AREA_SEQ,
            ISI.AREA_NAME,
            ISI.AMOUNT_SN,
            ISI.USE_REASON,
            ISI.REG_EMP_SEQ,
            ISI.REG_EMP_NAME,
            ISI.STATUS,
            HEI.EMP_NAME_KR,
            HEI.DEPT_NAME,
            HEI.DEPT_TEAM_NAME,
            CASE WHEN HEI.DUTY_NAME IS NULL THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END AS POSITION_NAME
        FROM
            CAM_INSIDE.DJ_SNACK_INFO ISI
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON ISI.REG_EMP_SEQ = HEI.EMP_SEQ
        WHERE
            SNACK_INFO_SN = #{snackInfoSn}
    </select>

    <insert id="setSnackInsert" parameterType="map">
        /* setCertificateInsert */
        INSERT INTO CAM_INSIDE.DJ_SNACK_INFO
            (
                USE_DT,
                USE_TIME,
                SNACK_TYPE,
                SNACK_TYPE_TEXT,
                USER_SN,
                USER_TEXT,
                PAY_TYPE,
                PAY_TYPE_TEXT,
                RECIPIENT_EMP_SEQ,
                RECIPIENT_EMP_NAME,
                AREA_SEQ,
                AREA_NAME,
                AMOUNT_SN,
                USE_REASON,
                REG_EMP_SEQ,
                REG_EMP_NAME
            )
        VALUES
            (
                #{useDt},
                CONCAT(#{useHour}, ':', #{useMin}),
                #{snackType},
                #{snackTypeText},
                #{userSn},
                #{userText},
                #{payType},
                #{payTypeText},
                #{chargeUser},
                #{chargeUserText},
                #{areaSn},
                #{areaName},
                #{usAmount},
                #{useReason},
                #{empSeq},
                #{empName}
            )
    </insert>

    <update id="setSnackReqCert" parameterType="map">
        /* setSnackReqCert */
        UPDATE
            CAM_INSIDE.DJ_SNACK_INFO
        SET
        <if test='status != null and !"".equals(status) and !"110".equals(status)'>
            APPROVAL_EMP_SEQ = #{empSeq},
            APPROVAL_RESULT_DATE = now(),
        </if>
            STATUS = ${status}
        WHERE
            <if test='snackInfoSn != null and !"".equals(snackInfoSn)'>
                SNACK_INFO_SN = #{snackInfoSn}
            </if>
            <if test='snackInfoSnArr != null and !"".equals(snackInfoSnArr)'>
                SNACK_INFO_SN IN (${snackInfoSnArr})
            </if>
    </update>

</mapper>