<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="document">

    <select id="getDocumentList" resultType="map" parameterType="map">
        /* getDocumentList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    CCD.*,
                    DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
                    DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE
                FROM
                    CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                CCD.DEL_STS != 999
                <if test='docuType != null and !"".equals(docuType)'>
                    AND CCD.DOCU_TYPE = #{docuType}
                </if>
                <if test='documentPart != null and !"".equals(documentPart)'>
                    AND CCD.DOCUMENT_PART_TYPE = #{documentPart}
                </if>
                <if test='deptPart != null and !"".equals(deptPart)'>
                    AND CCD.DEPT_PART_TYPE = #{documentPart}
                </if>

                <choose>
                    <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                        AND CCD.DOCUMENT_TITLE_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                        AND CONCAT(CCD.DOCUMENT_FIRST_NUMBER,'-',CCD.DOCUMENT_SECOND_NUMBER) like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                        AND DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "4".equals(searchType)'>
                        AND CCD.RECEIVE_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "5".equals(searchType)'>
                        AND DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "6".equals(searchType)'>
                        AND CCD.MANAGER_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "6".equals(searchType)'>
                        AND CCD.REMARK_CN like CONCAT('%', #{searchText}, '%')
                    </when>
                </choose>
                ORDER BY CCD.REG_DT
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getDocuOrderList" resultType="map" parameterType="map">
        /* getDocuOrderList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IDO.*
                FROM
                    CAM_INSIDE.DJ_DOCUMENT_ORDER IDO,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                    <if test='classType != null and !"".equals(classType)'>
                        AND IDO.CLASS_SN = #{classType}
                    </if>
                    <choose>
                        <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                            AND CONCAT(IDO.DOCU_YEAR_SN,'-',IDO.DOCU_NO) like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                            AND IDO.PROJECT_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                            AND DATE_FORMAT(IDO.CO_NAME, '%Y-%m-%d') like CONCAT('%', #{searchText}, '%')
                        </when>
                    </choose>
                ORDER BY IDO.REG_DT
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getDocuContractList" resultType="map" parameterType="map">
        /* getDocuContractList */
        SELECT
            RE.*,
            DFI.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IDC.*
                FROM
                    CAM_INSIDE.DJ_DOCUMENT_CONTRACT IDC,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                    <if test='classType != null and !"".equals(classType)'>
                        AND IDC.CLASS_SN = #{classType}
                    </if>
                    <choose>
                        <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                            AND CONCAT(IDC.DOCU_YEAR_SN,'-',IDC.DOCU_NO) like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                            AND IDC.PROJECT_NAME like CONCAT('%', #{searchText}, '%')
                        </when>
                        <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                            AND DATE_FORMAT(IDC.CO_NAME, '%Y-%m-%d') like CONCAT('%', #{searchText}, '%')
                        </when>
                    </choose>
                ORDER BY IDC.REG_DT
            ) RE
            LEFT JOIN CAM_COMMON.DJ_FILE_INFO DFI
            ON RE.FILE_SN = DFI.FILE_NO
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getSnackList" resultType="map" parameterType="map">
        /* getSnackList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    ISI.*,
                    CFI.file_org_name,
                    CFI.file_ext,
                    CFI.file_size,
                    IFNULL(CFI.file_no, 0) AS file_no,
                    CFI.file_path,
                    CFI.file_uuid
                FROM
                    CAM_INSIDE.DJ_SNACK_INFO ISI
                LEFT JOIN
                    CAM_COMMON.DJ_FILE_INFO CFI ON ISI.SNACK_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'snack',
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                <if test="empSeq != null and empSeq != ''">
                    AND ISI.REG_EMP_SEQ = #{empSeq}
                </if>
                <if test="mealsDivision != null and mealsDivision != ''">
                    AND ISI.SNACK_TYPE = #{mealsDivision}
                </if>
                <if test="payDivision != null and payDivision != ''">
                    AND ISI.PAY_TYPE = #{payDivision}
                </if>
                <if test="approval != null and approval != ''">
                    AND ISI.STATUS = #{approval}
                </if>
                AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
                ORDER BY ISI.REG_DT
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getSnackOne" resultType="map" parameterType="map">
        /* getSnackOne */
        SELECT
            ISI.SNACK_INFO_SN,
            ISI.USE_DT,
            ISI.USE_TIME,
            ISI.SNACK_TYPE,
            ISI.SNACK_TYPE_TEXT,
            ISI.USER_SN,
            ISI.USER_TEXT,
            ISI.PAY_TYPE,
            ISI.PAY_TYPE_TEXT,
            ISI.RECIPIENT_EMP_SEQ,
            ISI.RECIPIENT_EMP_NAME,
            ISI.CARD_TEXT,
            ISI.AREA_SEQ,
            ISI.AREA_NAME,
            ISI.AMOUNT_SN,
            ISI.USE_REASON,
            ISI.REG_EMP_SEQ,
            ISI.REG_EMP_NAME,
            ISI.STATUS,
            HEI.EMP_NAME_KR,
            HEI.DEPT_NAME,
            HEI.DEPT_TEAM_NAME,
            CASE WHEN HEI.DUTY_NAME IS NULL THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END AS POSITION_NAME,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid
        FROM
            CAM_INSIDE.DJ_SNACK_INFO ISI
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON ISI.REG_EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON ISI.SNACK_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'snack'
        WHERE
            SNACK_INFO_SN = #{snackInfoSn}
    </select>

    <select id="getSnackStatDept" resultType="map" parameterType="map">
        /* getSnackStatDept */
        SELECT
        <choose>
            <when test='"2".equals(searchDept)'>
                REG_TEAM_NAME AS dept
            </when>
            <otherwise>
                REG_DEPT_NAME AS dept
            </otherwise>
        </choose>
        FROM
            CAM_INSIDE.DJ_SNACK_INFO
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
            <if test='"2".equals(searchDept)'>
                AND REG_TEAM_NAME != ""
            </if>
            <if test='searchType != null and searchType != ""'>
                AND SNACK_TYPE in (${searchType})
            </if>
        GROUP BY
            <choose>
                <when test='"2".equals(searchDept)'>
                    REG_TEAM_NAME
                </when>
                <otherwise>
                    REG_DEPT_NAME
                </otherwise>
            </choose>
    </select>

    <select id="getSnackStat" resultType="map" parameterType="map">
        /* getSnackStat */
        SELECT
            SUM(AMOUNT_SN) AS value
        FROM
            CAM_INSIDE.DJ_SNACK_INFO
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
            <if test='"2".equals(searchDept)'>
                AND REG_TEAM_NAME != ""
            </if>
            <if test='searchType != null and searchType != ""'>
                AND SNACK_TYPE in (${searchType})
            </if>
        GROUP BY
            <choose>
                <when test='"2".equals(searchDept)'>
                    REG_TEAM_NAME
                </when>
                <otherwise>
                    REG_DEPT_NAME
                </otherwise>
            </choose>
    </select>

    <select id="getSnackExcelList" resultType="map" parameterType="map">
        /* getSnackExcelList */
        SELECT
            ISI.USE_DT,
            ISI.SNACK_TYPE,
            ISI.SNACK_TYPE_TEXT,
            IFNULL(CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END, "") AS REG_DEPT_NAME,
            IFNULL(CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END, "") AS REG_TEAM_NAME,
            IFNULL(HEI.EMP_NAME_KR, "") AS EMP_NAME,
            ISI.AMOUNT_SN
        FROM
            CAM_INSIDE.DJ_SNACK_INFO ISI
        LEFT JOIN
            CAM_INSIDE.DJ_SNACK_COMPANION ISC ON ISI.SNACK_INFO_SN = ISC.SNACK_INFO_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON ISC.EMP_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
            1=1
        AND DATE_FORMAT(USE_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
        <if test='searchTypeText != null and searchTypeText != ""'>
            AND SNACK_TYPE in (${searchTypeText})
        </if>
        ORDER BY REG_DEPT_NAME, REG_TEAM_NAME, SNACK_TYPE, USE_DT
    </select>

    <select id="getArchiveList" resultType="map" parameterType="map">
        /* getArchiveList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    IAI.*,
                    <![CDATA[
                        case
                        when (DISPOSAL_YEAR >= DATE_FORMAT(NOW(), '%Y'))
                    then 'N'
                    ELSE 'Y'
                    END AS DISPOSE_YN,
                    CFI.file_org_name,
                    CFI.file_ext,
                    CFI.file_size,
                    IFNULL(CFI.file_no, 0) AS file_no,
                    CFI.file_path,
                    CFI.file_uuid
                    ]]>
                FROM
                    CAM_INSIDE.DJ_ARCHIVE_INFO IAI
                LEFT JOIN
                    CAM_COMMON.DJ_FILE_INFO CFI ON IAI.ARCHIVE_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'archive',
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    1=1
                AND DOC_YEAR = #{searchDate}
                <choose>
                    <when test='searchText != null and !"".equals(searchText) and "1".equals(searchType)'>
                        AND DOC_NUM like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "2".equals(searchType)'>
                        AND DEPT_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "3".equals(searchType)'>
                        AND VISIT like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "4".equals(searchType)'>
                        AND DOC_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                    <when test='searchText != null and !"".equals(searchText) and "5".equals(searchType)'>
                        AND MANAGER_NAME like CONCAT('%', #{searchText}, '%')
                    </when>
                </choose>
                AND ACTIVE != 'N'
                ORDER BY IAI.REG_DT
            ) RE
        <if test='"1".equals(doclistState)'>
            WHERE RE.DISPOSE_YN = 'N'
        </if>
        <if test='"2".equals(doclistState)'>
            WHERE RE.DISPOSE_YN = 'Y'
        </if>
        <if test='"3".equals(doclistState)'>
            WHERE ACTIVE = 'D'
        </if>
        ORDER BY ARCHIVE_INFO_SN
    </select>

    <insert id="setDocumentInsert" parameterType="map">
        /* setDocumentInsert */
        INSERT INTO CAM_COMMON.DJ_CAMTIC_DOCUMENT
            (
                DOCU_TYPE,
                DOCUMENT_PART_TYPE,
                DOCUMENT_PART_NAME,
                EFFECTIVE_DT,
                SHIPMENT_DT,
                RECEIVE_NAME,
                MANAGER_SN,
                MANAGER_NAME,
                DOCUMENT_TITLE_NAME,
                <if test='"2".equals(docuType)'>
                    DEPT_PART_TYPE,
                    DEPT_PART_TEXT,
                    <if test='"6".equals(deptPartType)'>
                        USER_SN,
                        USER_TEXT,
                    </if>
                </if>
                REMARK_CN,
                DOCUMENT_FIRST_NUMBER,
                DOCUMENT_SECOND_NUMBER,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT
            )
        VALUES
            (
                #{docuType},
                #{documentPartType},
                #{documentPartName},
                #{effectiveDt},
                #{shipmentDt},
                #{receiveName},
                #{managerSn},
                #{managerName},
                #{documentTitleName},
                <if test='"2".equals(docuType)'>
                    #{deptPartType},
                    #{deptPartText},
                    <if test='"6".equals(deptPartType)'>
                        #{userSn},
                        #{userText},
                    </if>
                </if>
                #{remarkCn},
                CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                (SELECT IFNULL(MAX(SCCD.DOCUMENT_SECOND_NUMBER), 0)+1 FROM CAM_COMMON.DJ_CAMTIC_DOCUMENT SCCD WHERE SCCD.DOCUMENT_FIRST_NUMBER = CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
                #{regEmpSeq},
                #{regEmpName},
                NOW()
            )
    </insert>

    <insert id="setDocuOrderInsert" parameterType="map">
        /* setDocuOrderInsert */
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_ORDER
            (
                MAIN_CLASS_SN,
                CLASS_SN,
                CLASS_NAME,
                DOCU_YEAR_SN,
                DOCU_NO,
                DOCU_DE,
                DOCU_CHECK_SN,
                DOCU_CHECK_NAME,
                PROJECT_NAME,
                START_DE,
                END_DE,
                CO_SN,
                CO_NAME,
                CONDITION_NAME,
                REMARK_CN,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT
            )
        VALUES
            (
                1,
                #{classSn},
                #{className},
                CONCAT('TICS', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                (SELECT IFNULL(MAX(SIDO.DOCU_NO), 0)+1 FROM CAM_INSIDE.DJ_DOCUMENT_ORDER SIDO WHERE DOCU_YEAR_SN = CONCAT('TICS', RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
                #{docuDe},
                #{docuCheckSn},
                #{docuCheckName},
                #{projectName},
                #{startDe},
                #{endDe},
                #{coSn},
                #{coName},
                #{conditionName},
                #{remarkCn},
                #{regEmpSeq},
                #{regEmpName},
                NOW()
            )
    </insert>

    <insert id="setDocuContractInsert" parameterType="map">
        /* setDocuContractInsert */
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_CONTRACT
            (
                MAIN_CLASS_SN,
                MAIN_CLASS_NAME,
                CLASS_SN,
                CLASS_NAME,
                DOCU_YEAR_SN,
                DOCU_NO,
                DOCU_DE,
                PROJECT_NAME,
                PROJECT_MONEY,
                START_DE,
                END_DE,
                CO_SN,
                CO_NAME,
                REMARK_CN,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DT,

                PROJECT_NUMBER,
                REPRESENTATIVE,
                BUSINESS_NUMBER,
                ZIP_CODE,
                ADDR,
                ADDR_DETAIL,
                RENTAL_EA,
                RENTAL_INFO,
                TOTAL_MONTH,
                PAYMENT,
                SURT_INSR,
                DLV_LOC

            )
        VALUES
            (
                #{mainClassSn},
                #{mainClassName},
                #{classSn},
                #{className},
                CONCAT(#{docuName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
                #{projectNumber},
                #{docuDe},
                #{projectName},
                #{contractAmount},
                #{startDe},
                #{endDe},
                #{coSn},
                #{coName},
                #{remarkCn},
                #{regEmpSeq},
                #{regEmpName},
                NOW(),
                #{projectNumber},
                #{representative},
                #{businessNumber},
                #{zipCode},
                #{addr},
                #{addrDetail},
                #{rentalEa},
                #{rentalInfo},
                #{totalMonth},
                #{payment},
                #{surtInsr},
                #{dlvLoc}
            )
        <selectKey keyProperty="documentContractSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_DOCUMENT_CONTRACT'
        </selectKey>
    </insert>

    <insert id="setSnackInsert" parameterType="map">
        /* setSnackInsert */
        INSERT INTO CAM_INSIDE.DJ_SNACK_INFO
            (
                USE_DT,
                USE_TIME,
                SNACK_TYPE,
                SNACK_TYPE_TEXT,
                USER_SN,
                USER_TEXT,
                PAY_TYPE,
                PAY_TYPE_TEXT,
                RECIPIENT_EMP_SEQ,
                RECIPIENT_EMP_NAME,
                AREA_SEQ,
                AREA_NAME,
                AMOUNT_SN,
                USE_REASON,
                REG_EMP_SEQ,
                REG_EMP_NAME,
                REG_DEPT_NAME,
                REG_TEAM_NAME,
                STATUS
            )
        VALUES
            (
                #{useDt},
                CONCAT(#{useHour}, ':', #{useMin}),
                #{snackType},
                #{snackTypeText},
                #{userSn},
                #{userText},
                #{payType},
                #{payTypeText},
                #{chargeUser},
                #{chargeUserText},
                #{areaSn},
                #{areaName},
                #{usAmount},
                #{useReason},
                #{empSeq},
                #{empName},
                #{regDeptName},
                #{regTeamName},
                '10'
            )
        <selectKey keyProperty="snackInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_SNACK_INFO'
        </selectKey>
    </insert>

    <insert id="setSnackCompanionInsert" parameterType="map">
        /* setSnackCompanionInsert */
        INSERT INTO CAM_INSIDE.DJ_SNACK_COMPANION
            (
                SNACK_INFO_SN,
                EMP_SEQ,
                EMP_NAME,
                AMT
            )
        VALUES
        <foreach collection="amt" item="item" separator=" , ">
            (
                #{snackInfoSn},
                #{item.amtEmpSeq},
                #{item.amtEmpName},
                #{item.amt}
            )
        </foreach>
    </insert>

    <update id="setSnackReqCert" parameterType="map">
        /* setSnackReqCert */
        UPDATE
            CAM_INSIDE.DJ_SNACK_INFO
        SET
        <if test='status != null and !"".equals(status) and !"110".equals(status)'>
            APPROVAL_EMP_SEQ = #{empSeq},
            APPROVAL_RESULT_DATE = now(),
        </if>
            STATUS = ${status}
        WHERE
            <if test='snackInfoSn != null and !"".equals(snackInfoSn)'>
                SNACK_INFO_SN = #{snackInfoSn}
            </if>
            <if test='snackInfoSnArr != null and !"".equals(snackInfoSnArr)'>
                SNACK_INFO_SN IN (${snackInfoSnArr})
            </if>
    </update>

    <insert id="setArchiveInsert" parameterType="map">
        /* setArchiveInsert */
        INSERT INTO CAM_INSIDE.DJ_ARCHIVE_INFO
            (
                DOC_YEAR,
                DOC_NUM,
                DEPT_SEQ,
                DEPT_NAME,
                TEAM_SEQ,
                TEAM_NAME,
                VISIT,
                MANAGER_SN,
                MANAGER_NAME,
                PRESERVATION_PERIOD,
                DISPOSAL_YEAR,
                DOC_NAME,
                UPDT_DT
            )
        VALUES
            (
                #{docYear},
                #{docNum},
                #{deptSn},
                #{deptName},
                #{teamSn},
                #{teamName},
                #{visit},
                #{managerSn},
                #{managerName},
                #{prePeriod},
                #{disYear},
                #{docName},
                NULL
            )
        <selectKey keyProperty="archiveInfoSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'DJ_ARCHIVE_INFO'
        </selectKey>
    </insert>

    <!--문서고 등록 - 문서위치 조회-->
    <select id="getDocumentPlaceList" parameterType="map" resultType="map">
        /*getDocumentPlaceList*/
        SELECT
            CM_CODE_NM AS TEXT,
            CM_CODE_ID AS VALUE
        FROM
            CAM_COMMON.DJ_COM_CODE
        WHERE
            CM_GROUP_CODE_ID = 10
    </select>

    <insert id="setProductInsert" parameterType="map">
        INSERT INTO CAM_INSIDE.DJ_DOCUMENT_PRODUCT
        (
            DOCUMENT_CONTRACT_SN,
            PRODUCT_NAME,
            PRODUCT_COUNT,
            PRODUCT_ONE_MONEY,
            PRODUCT_TOTAL_MONEY,
            BMK
        )
        VALUES
        <foreach collection="area" item="item" separator=" , ">
        (
            #{documentContractSn},
            #{item.productName},
            #{item.productCount},
            #{item.productOneMoney},
            #{item.productTotalMoney},
            #{item.bmk}
        )
        </foreach>
    </insert>

    <insert id="insOneFileInfo" parameterType="map" >
        /* insOneFileInfo */
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
        FILE_CD,
        FILE_UUID,
        FILE_ORG_NAME,
        FILE_PATH,
        FILE_SIZE,
        FILE_EXT,
        EMP_SEQ,
        REG_EMP_SEQ
         <if test="frKey != null and frKey != ''">
             , FR_KEY
         </if>
        )
        VALUES
        (
        #{fileCd},
        #{fileUUID},
        #{fileOrgName},
        #{filePath},
        #{fileSize},
        #{fileExt},
        #{empSeq},
        #{empSeq}
        <if test="frKey != null and frKey != ''">
            , #{frKey}
        </if>
        )

        <selectKey keyProperty="fileNo" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_COMMON' AND TABLE_NAME = 'DJ_FILE_INFO'
        </selectKey>
    </insert>

    <update id="setDocuContractFileKey" parameterType="map">
        UPDATE CAM_INSIDE.DJ_DOCUMENT_CONTRACT
        SET FILE_SN = #{fileNo}
        WHERE DOCUMENT_CONTRACT_SN = #{documentContractSn}
    </update>

    <!--문서고 삭제-->
    <update id="setAchiveDelete" parameterType="java.util.List">
        /* setAchiveDelete */
        UPDATE
        CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
        ACTIVE = 'N', UPDT_DT = NOW()
        WHERE
        ARCHIVE_INFO_SN IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--문서고 폐기-->
    <update id="setAchiveScrap" parameterType="java.util.List">
        /* setAchiveScrap */
        UPDATE
        CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
        ACTIVE = 'D', UPDT_DT = NOW()
        WHERE
        ARCHIVE_INFO_SN IN
        (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <!--문서고 업데이트-->
    <update id="setArchiveUpdate" parameterType="map">
        /* setArchiveUpdate */
        UPDATE
            CAM_INSIDE.DJ_ARCHIVE_INFO
        SET
            DOC_YEAR = #{docYear},
            DOC_NUM = #{docNum},
            DEPT_SEQ = #{deptSn},
            DEPT_NAME = #{deptName},
            TEAM_SEQ = #{teamSn},
            TEAM_NAME = #{teamName},
            VISIT = #{visit},
            MANAGER_SN = #{managerSn},
            MANAGER_NAME = #{managerName},
            PRESERVATION_PERIOD = #{prePeriod},
            DISPOSAL_YEAR = #{disYear},
            DOC_NAME = #{docName},
            UPDT_DT = NOW(),
            UPDUSR_SN = #{empSeq}
        WHERE
            ARCHIVE_INFO_SN = #{pk}
    </update>

    <select id="getArchiveinfoList" parameterType="map" resultType="map">
        /* getArchiveinfoList */
        SELECT
            a.*,
            CFI.file_org_name,
            CFI.file_ext,
            CFI.file_size,
            IFNULL(CFI.file_no, 0) AS file_no,
            CFI.file_path,
            CFI.file_uuid
        FROM
            CAM_INSIDE.DJ_ARCHIVE_INFO as a
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO CFI ON a.ARCHIVE_INFO_SN = CFI.CONTENT_ID AND CFI.FILE_CD = 'archive'
        WHERE
            ARCHIVE_INFO_SN = #{pk}
    </select>

    <update id="delDocumentList" parameterType="map">
        /*등록대장, 접수대장 임시 삭제*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 10
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <update id="delCancelDocumentList" parameterType="map">
        /*등록대장, 접수대장 삭제 복구*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 1
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <update id="delFinalDocumentList" parameterType="map">
        /*등록대장, 접수대장 최종삭제*/
        UPDATE CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET DEL_STS = 999
        WHERE DOCUMENT_SN = #{DOCUMENT_SN}
    </update>


    <update id="setRlDelete" parameterType="map">
        UPDATE
            cam_common.dj_camtic_document
        SET
            <if test='DEL_STS != null and !"".equals(DEL_STS) and "1".equals(DEL_STS)'>
                DEL_STS = "10"
            </if>
            <if test='DEL_STS != null and !"".equals(DEL_STS) and "10".equals(DEL_STS)'>
                DEL_STS = "999"
            </if>
        WHERE
            DOCUMENT_SN = #{DOCUMENT_SN}
    </update>

    <select id="getDocViewOne" resultType="map" parameterType="map">
        /*getDocViewOne*/
        SELECT
            CCD.*,
            DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
            DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD
        WHERE
            DOCUMENT_SN = #{documentSn}
    </select>

    <update id="setDocumentUpdate" parameterType="map">
        /*setDocumentUpdate*/
        UPDATE
            cam_common.dj_camtic_document
        SET
            docu_type=#{docuType},
            document_part_type=#{documentPartType},
            document_part_name=#{documentPartName},
            effective_dt=#{effectiveDt},
            shipment_dt=#{shipmentDt},
            receive_name=#{receiveName},
            manager_sn=#{managerSn},
            manager_name=#{managerName},
            document_title_name=#{documentTitleName},
            <if test='"2".equals(docuType)'>
                dept_part_type=#{deptPartType}
                dept_part_text=#{deptPartText}
                <if test='"6".equals(deptPartType)'>
                    user_sn=#{userSn},
                    user_text=#{userText},
                </if>
            </if>
            remark_Cn=#{remarkCn},
            document_first_number= CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2)),
            document_second_number=(SELECT IFNULL(MAX(SCCD.document_second_number), 0)+1 FROM CAM_COMMON.DJ_CAMTIC_DOCUMENT SCCD WHERE SCCD.document_first_number = CONCAT(#{documentPartName}, RIGHT(DATE_FORMAT(NOW(), '%Y'), 2))),
            reg_emp_seq=#{regEmpSeq},
            reg_emp_name=#{regEmpName},
            reg_dt = NOW()
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>

    <select id="getInComeUpdateList" resultType="map" parameterType="map">
        /*접수대장 팝업 조회*/
        SELECT
            CCD.*,
            DATE_FORMAT(CCD.EFFECTIVE_DT, '%Y-%m-%d') AS EFFECTIVE_DATE,
            DATE_FORMAT(CCD.SHIPMENT_DT, '%Y-%m-%d') AS SHIPMENT_DATE
        FROM
            CAM_COMMON.DJ_CAMTIC_DOCUMENT CCD
        WHERE
            DOCUMENT_SN = #{documentSn}
    </select>

    <update id="setInComeUpdate" parameterType="map">
        /*접수대장 팝업 수정*/
        UPDATE
            CAM_COMMON.DJ_CAMTIC_DOCUMENT
        SET
            DEPT_PART_TYPE = #{deptPartType},
            DEPT_PART_TEXT = #{deptPartText},
            REG_EMP_SEQ = #{regEmpSeq},
            REG_EMP_NAME = #{regEmpName},
            MANAGER_SN = #{managerSn},
            MANAGER_NAME = #{managerName},
            DOCUMENT_TITLE_NAME = #{documentTitleName},
            RECEIVE_NAME = #{receiveName},
            EFFECTIVE_DT = #{effectiveDt},
            SHIPMENT_DT = #{shipmentDt},
            REMARK_CN = #{remarkCn}
        WHERE
            DOCUMENT_SN = #{documentSn}
    </update>



</mapper>