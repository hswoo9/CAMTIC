<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employInterviewCard">
    <!-- cam_inside.dj_employee_interview_topic 테이블에 값을 삽입하는 쿼리 -->
    <insert id="setInterviewTitle" parameterType="Map">
        INSERT INTO cam_inside.dj_employee_interview_topic (interview_topic1, interview_topic2, interview_topic3, interview_topic4, interview_topic5)
        VALUES (#{content1}, #{content2}, #{content3}, #{content4}, #{content5})
        <selectKey keyProperty="interview_number" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_INSIDE' AND TABLE_NAME = 'dj_employee_interview_topic'
        </selectKey>
    </insert>

<!--    면담내용설정-->
    <select id="getTopicList" parameterType="map" resultType="map">
        SELECT
            interview_topic1 AS interview_topic1,
            interview_topic2 AS interview_topic2,
            interview_topic3 AS interview_topic3,
            interview_topic4 AS interview_topic4,
            interview_topic5 as interview_topic5
        from cam_inside.dj_employee_interview_topic
        order by interview_number desc LIMIT 1;
    </select>

<!--    면담카드등록-->
    <insert id="setInterviewContent" parameterType="Map">
        /* setInterviewContent */
        INSERT INTO cam_inside.dj_employee_interview_card
            (
                card_interview_date,
                stime,
                etime,
                card_interviewer,
                interview_content1,
                interview_content2,
                interview_content3,
                interview_content4,
                interview_content5,
                EMP_SEQ,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{cardDate},
                #{sTime},
                #{eTime},
                #{cardInterviewer},
                #{interviewContent1},
                #{interviewContent2},
                #{interviewContent3},
                #{interviewContent4},
                #{interviewContent5},
                #{empSeq},
                #{regEmpSeq}
            )
    </insert>

    <update id="updInterviewContent" parameterType="Map">
        /* updInterviewContent */
        UPDATE CAM_INSIDE.DJ_EMPLOYEE_INTERVIEW_CARD
        SET
            CARD_INTERVIEW_DATE = #{cardDate},
            STIME = #{sTime},
            ETIME = #{eTime},
            INTERVIEW_CONTENT1 = #{interviewContent1},
            INTERVIEW_CONTENT2 = #{interviewContent2},
            INTERVIEW_CONTENT3 = #{interviewContent3},
            INTERVIEW_CONTENT4 = #{interviewContent4},
            INTERVIEW_CONTENT5 = #{interviewContent5},
            EMP_SEQ = #{empSeq}
        WHERE
            CARD_NUMBER = #{cardNumber}
    </update>

    <update id="delInterviewContent" parameterType="Map">
        /* delInterviewContent */
        UPDATE CAM_INSIDE.DJ_EMPLOYEE_INTERVIEW_CARD
        SET
            ACTIVE = 'N'
        WHERE
            CARD_NUMBER = #{cardNumber}
    </update>

    <!--    면담카드등록-->
    <insert id="setInterviewContent2" parameterType="Map">
        UPDATE cam_inside.dj_employee_interview_card
        SET
            INTERVIEW_CONTENT_ADMIN = #{interviewContentAdmin}
        WHERE
            CARD_NUMBER = #{cardNumber}
    </insert>

<!--    리스트(조회)-->
    <select id="getInterviewCardList" parameterType="map" resultType="map">
        /*getInterviewCardList*/
        SELECT
            ROW_NUMBER() OVER (ORDER BY CARD_NUMBER ASC) AS ROW_NUM,
            DATE_FORMAT(DEIC.CARD_INTERVIEW_DATE,'%Y-%m-%d') AS CARD_INTERVIEW_DATE,
            DEIC.EMP_SEQ,
            DEIC.CARD_INTERVIEWER,
            DEIC.STIME,
            DEIC.ETIME,
            DEIC.CARD_NUMBER,
            DEIC.CARD_SUPERIOR_PERSON,
            DEIC.CARD_SUPERIOR_PERSON2,
            DEIC.CARD_STATUS,
            CAR.DEPT_NAME,
            CAR.TEAM_NAME,
            CAR.EMP_NAME_KR,
            CAR.DEPT_SEQ,
            CAR.TEAM_SEQ
        FROM (
            SELECT
                CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE A.DEPT_NAME END AS DEPT_NAME,
                CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE A.DEPT_SEQ END AS DEPT_SEQ,
                CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.DEPT_SEQ = DI.DEPT_SEQ) ELSE '' END AS TEAM_NAME,
                CASE WHEN DDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE DDI.DEPT_SEQ = DI.DEPT_SEQ) ELSE '' END AS TEAM_SEQ,
                A.EMP_SEQ,
                A.EMP_NAME_KR
            FROM CAM_HR.DJ_EMP_INFO AS A
            JOIN CAM_HR.DJ_DEPT_INFO DDI ON A.DEPT_SEQ = DDI.DEPT_SEQ
        ) AS CAR
        JOIN CAM_INSIDE.DJ_EMPLOYEE_INTERVIEW_CARD DEIC
        ON CAR.EMP_SEQ = DEIC.EMP_SEQ
        WHERE
            1=1
        <!-- searchDate 조건 -->
        <if test='searchDate != null and !"".equals(searchDate)'>
            AND
                YEAR(DEIC.CARD_INTERVIEW_DATE) = YEAR(STR_TO_DATE(#{searchDate}, '%Y'))
        </if>
        <!-- dept 조건 -->
        <if test='dept != null and !"".equals(dept)'>
            AND
                CAR.DEPT_SEQ = #{dept}
        </if>
        <!-- team 조건 -->
        <if test='team != null and !"".equals(team)'>
            AND
                CAR.TEAM_SEQ = #{team}
        </if>
        <!-- searchText 조건 -->
        <if test='searchText != null and !"1".equals(searchText)'>
            AND
                CAR.EMP_NAME_KR LIKE CONCAT('%', #{searchText}, '%')
        </if>
            AND
                DEIC.ACTIVE = 'Y'
        ORDER BY DEIC.CARD_NUMBER DESC
    </select>

<!--    상세(팝업)-->
    <select id="getInterviewDetail" parameterType="map" resultType="map">
        SELECT
            deic.*,
            DATE_FORMAT(deic.CARD_INTERVIEW_DATE, '%Y-%m-%d') AS CARD_INTERVIEW_DT,
            dei.EMP_NAME_KR,
            dei.DEPT_NAME,
            dei.DEPT_TEAM_NAME
        FROM
            CAM_INSIDE.DJ_EMPLOYEE_INTERVIEW_CARD deic
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO dei ON deic.EMP_SEQ = dei.EMP_SEQ
        WHERE
            deic.CARD_NUMBER = #{cardNumber}
    </select>

<!--    인사기록카드 - 직원면담카드 리스트 -->
    <select id="getInterviewCardByEmpSeq" parameterType="map" resultType="map">
        select
        row_number() OVER (ORDER BY card_number ASC) AS row_num,
        DATE_FORMAT(deic.card_interview_date, '%Y-%m-%d') as card_interview_date,
        deic.EMP_SEQ,
        deic.card_interviewer,
        deic.stime,
        deic.etime,
        deic.card_number,
        deic.card_superior_person,
        deic.card_superior_person2,
        deic.card_status,
        car.dept_name,
        car.dept_team_name,
        car.emp_name_kr,
        car.dept_seq,
        car.team_seq
        from (
        select
        CASE WHEN ddi.DEPT_LEVEL = 2 THEN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO DI WHERE ddi.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE a.DEPT_SEQ END AS dept_seq,
        CASE WHEN ddi.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE ddi.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE a.DEPT_NAME END AS dept_name,
        CASE WHEN ddi.DEPT_LEVEL = 2 THEN a.DEPT_SEQ ELSE "" END AS team_seq,
        a.emp_seq,
        a.dept_team_name,
        a.emp_name_kr
        from cam_hr.dj_emp_info as a
        join cam_hr.dj_dept_info ddi
        on a.DEPT_SEQ = ddi.dept_seq
        )as car
        join cam_inside.dj_employee_interview_card deic
        on car.emp_seq = deic.EMP_SEQ
        WHERE deic.EMP_SEQ = #{empSeq}
    </select>
</mapper>