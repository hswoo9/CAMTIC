<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salaryManage">

    <select id="getEmpSalaryManageList" parameterType="map" resultType="map">
        /* getEmpSalaryManageList */
        SELECT
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.RES_REGIS_NUM,
            DATEDIFF(now(), EI.JOIN_DAY) as DIFF_DAY,
            DATE_FORMAT(EI.JOIN_DAY, '%Y-%m-%d') AS JOIN_DAY,
            CASE WHEN EI.DIVISION = '0' THEN '정규직원'
                WHEN EI.DIVISION = '4' AND EI.DIVISION_SUB = '1' THEN '계약직원'
                WHEN EI.DIVISION = '4' AND EI.DIVISION_SUB = '2' THEN '인턴사원'
            END AS DIVISION,
            CONCAT(EI.DEPT_NAME, IF(EI.DEPT_TEAM_NAME != '', CONCAT('/', EI.DEPT_TEAM_NAME), '')) AS DEPT_NAME,
            SM.START_DT,
            SM.END_DT,
            SM.BASIC_SALARY,
            SM.FOOD_PAY,
            SM.EXTRA_PAY,
            SM.BONUS,
            RS.NATIONAL_PENSION,
            RS.LIMIT_AMT,
            RS.HEALTH_INSURANCE,
            RS.LONG_CARE_INSURANCE,
            RS.EMPLOY_INSURANCE,
            RS.ACCIDENT_INSURANCE
        FROM
            CAM_INSIDE.DJ_SALARY_MANAGE SM
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON SM.EMP_SEQ = EI.EMP_SEQ
        JOIN
            CAM_INSIDE.DJ_SOCIAL_RATE RS
        ON SM.SOCIAL_RATE_SN = RS.SOCIAL_RATE_SN
        WHERE 1=1
        <if test='workStatusCode != null and !"".equals(workStatusCode)'>
            AND EI.WORK_STATUS_CODE = #{workStatusCode}
        </if>

        <choose>
            <when test='"j".equals(searchDateType)'>
                <![CDATA[
                AND
                    DATE_FORMAT(#{startDt}, '%Y%m%d') <= DATE_FORMAT(EI.JOIN_DAY, '%Y%m%d')
                AND
                    DATE_FORMAT(#{endDt}, '%Y%m%d') >= DATE_FORMAT(EI.JOIN_DAY, '%Y%m%d')
                ]]>
            </when>
            <when test='"q".equals(searchDateType)'>
                <![CDATA[
                AND
                    DATE_FORMAT(#{startDt}, '%Y%m%d') <= DATE_FORMAT(EI.RESIGN_DAY, '%Y%m%d')
                AND
                    DATE_FORMAT(#{endDt}, '%Y%m%d') >= DATE_FORMAT(EI.RESIGN_DAY, '%Y%m%d')
                ]]>
            </when>
            <when test='"a".equals(searchDateType)'>
                <![CDATA[
                AND (
                        DATE_FORMAT(SM.START_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d') OR
                        DATE_FORMAT(SM.END_DT, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startDt}, '%Y-%m-%d') AND DATE_FORMAT(#{endDt}, '%Y-%m-%d')
                )
                ]]>
            </when>
        </choose>

        <if test='division != null and !"".equals(division)'>
            <choose>
                <when test='"r".equals(division)'>
                    AND EI.DIVISION = '0'
                </when>
                <when test='"c".equals(division)'>
                    AND EI.DIVISION = '4' AND EI.DIVISION_SUB = '1'
                </when>
                <when test='"i".equals(division)'>
                    AND EI.DIVISION = '4' AND EI.DIVISION_SUB = '2'
                </when>
            </choose>
        </if>

        <choose>
            <when test='"userName".equals(searchKeyWord)'>
                AND EI.EMP_NAME_KR LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test='"deptName".equals(searchKeyWord)'>
                AND EI.DEPT_NAME LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test='"teamName".equals(searchKeyWord)'>
                AND EI.DEPT_TEAM_NAME LIKE CONCAT('%', #{searchText}, '%')
            </when>
            <when test='"projectCnt".equals(searchKeyWord)'>
                AND EI.EMP_NAME_KR LIKE CONCAT('%', #{searchText}, '%')
            </when>
        </choose>
        <if test='year != null and !"".equals(year)'>
            AND (YEAR(SM.START_DT) = #{year} OR YEAR(SM.END_DT) = #{year})
        </if>
        ORDER BY EI.EMP_NAME_KR
    </select>

    <select id="getEmpSalaryDataList" parameterType="map" resultType="map">
        /* getEmpSalaryDataList */
        SELECT
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            EI.RES_REGIS_NUM,
            DATE_FORMAT(EI.JOIN_DAY, '%Y-%m-%d') AS JOIN_DAY,
            CASE WHEN EI.DIVISION = '0' THEN '정규직원'
                 WHEN EI.DIVISION = '4' AND EI.DIVISION_SUB = '1' THEN '계약직원'
                 WHEN EI.DIVISION = '4' AND EI.DIVISION_SUB = '2' THEN '인턴사원'
            END AS DIVISION,
            CONCAT(EI.DEPT_NAME, IF(EI.DEPT_TEAM_NAME != '', CONCAT('/', EI.DEPT_TEAM_NAME), '')) AS DEPT_NAME,
            SM.START_DT,
            SM.END_DT,
            SM.BASIC_SALARY,
            SM.FOOD_PAY,
            SM.EXTRA_PAY,
            SM.BONUS,
            RS.NATIONAL_PENSION,
            RS.LIMIT_AMT,
            RS.HEALTH_INSURANCE,
            RS.LONG_CARE_INSURANCE,
            RS.EMPLOY_INSURANCE,
            RS.ACCIDENT_INSURANCE,
            SM.SOCIAL_RATE_SN,
            SM.SALARY_SN
        FROM
            CAM_INSIDE.DJ_SALARY_MANAGE SM
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON SM.EMP_SEQ = EI.EMP_SEQ
        JOIN
            CAM_INSIDE.DJ_SOCIAL_RATE RS
        ON SM.SOCIAL_RATE_SN = RS.SOCIAL_RATE_SN
        WHERE
            SM.EMP_SEQ = #{empSeq}
        ORDER BY SM.START_DT DESC
    </select>

    <update id="updBefEndDt" parameterType="map">
        /*updBefEndDt*/
        UPDATE CAM_INSIDE.DJ_SALARY_MANAGE
        SET
            END_DT = #{befEndDt}
        WHERE
            EMP_SEQ = #{empSeq}
        AND
            END_DT = ""
    </update>

    <insert id="insSalaryManage" parameterType="map">
        /*insSalaryManage*/
        INSERT INTO CAM_INSIDE.DJ_SALARY_MANAGE
        (
            SOCIAL_RATE_SN,
            EMP_SEQ,
            EMP_NAME,
            START_DT,
            END_DT,
            BASIC_SALARY,
            FOOD_PAY,
            EXTRA_PAY,
            BONUS,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{socialRateSn},
            #{empSeq},
            #{empName},
            #{startDt},
            #{endDt},
            #{basicSalary},
            #{foodPay},
            #{extraPay},
            #{bonus},
            #{loginEmpSeq}
        )
    </insert>

    <update id="updSalaryManage" parameterType="map">
        /*updSalaryManage*/
        UPDATE CAM_INSIDE.DJ_SALARY_MANAGE
        SET
            SOCIAL_RATE_SN = #{socialRateSn},
            START_DT = #{startDt},
            END_DT = #{endDt},
            BASIC_SALARY = #{basicSalary},
            FOOD_PAY = #{foodPay},
            EXTRA_PAY = #{extraPay},
            BONUS = #{bonus},
            MOD_EMP_SEQ = #{loginEmpSeq},
            MOD_DATE = NOW()
        WHERE
            SALARY_SN = #{salarySn}
    </update>

    <select id="getSocialRateManageList" parameterType="map" resultType="map">
        /* getSocialRateManageList */
        SELECT
            A.*,
            CONCAT(A.START_DATE, ' ~ ', A.END_DATE) AS DT_RNG
        FROM
            CAM_INSIDE.DJ_SOCIAL_RATE A
        WHERE
            A.ACTIVE = 'Y'
        <if test='socialRateSn != null and !"".equals(socialRateSn)'>
            AND A.SOCIAL_RATE_SN = #{socialRateSn}
        </if>
        <if test='mainType != null and !"".equals(mainType)'>
            ORDER BY A.END_DATE ASC
        </if>
        <if test='mainType == null or "".equals(mainType)'>
            ORDER BY A.END_DATE DESC
        </if>
    </select>

    <insert id="setSocialRate" parameterType="map">
        /* setSocialRate */
        INSERT INTO CAM_INSIDE.DJ_SOCIAL_RATE
        (
            START_DATE,
            END_DATE,
            NATIONAL_PENSION,
            LIMIT_AMT,
            HEALTH_INSURANCE,
            LONG_CARE_INSURANCE,
            EMPLOY_INSURANCE,
            ACCIDENT_INSURANCE,
            REG_EMP_SEQ
        )
        VALUES
        <foreach collection="newRateArr" item="item" separator=" , ">
        (
            #{item.startDate},
            #{item.endDate},
            #{item.nationalPension},
            #{item.limitAmt},
            #{item.healthInsurance},
            #{item.longCareInsurance},
            #{item.employInsurance},
            #{item.accidentInsurance},
            #{item.empSeq}
        )
        </foreach>
    </insert>

    <update id="setSocialRateUpd" parameterType="map">
        /* setSocialRateUpd */
        UPDATE
            CAM_INSIDE.DJ_SOCIAL_RATE
        SET
            START_DATE = #{startDate},
            END_DATE = #{endDate},
            NATIONAL_PENSION = #{nationalPension},
            LIMIT_AMT = #{limitAmt},
            HEALTH_INSURANCE = #{healthInsurance},
            LONG_CARE_INSURANCE = #{longCareInsurance},
            EMPLOY_INSURANCE = #{employInsurance},
            ACCIDENT_INSURANCE = #{accidentInsurance},
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            SOCIAL_RATE_SN = #{socialRateSn}
    </update>

    <update id="setSocialRateDel" parameterType="map">
        /* setSocialRateDel */
        UPDATE
            CAM_INSIDE.DJ_SOCIAL_RATE
        SET
            ACTIVE = 'N',
            MOD_EMP_SEQ = #{empSeq},
            MOD_DATE = NOW()
        WHERE
            SOCIAL_RATE_SN = #{socialRateSn}
    </update>

    <select id="getSalaryList" parameterType="map" resultType="map">
        /*getSalaryList*/
        SELECT
            EI.EMP_SEQ,
            EI.EMP_NAME_KR,
            CONCAT(EI.DEPT_NAME, IF(EI.DEPT_TEAM_NAME != '', CONCAT('/', EI.DEPT_TEAM_NAME), '')) AS DEPT_NAME,
            SM.START_DT,
            SM.END_DT,
            TIMESTAMPDIFF(MONTH, SM.START_DT, SM.END_DT) + 1 AS DIFF_MON,
            SM.BASIC_SALARY,
            SM.EXTRA_PAY,
            SM.BONUS,
            SM.FOOD_PAY,
            SM.SOCIAL_RATE_SN
        FROM
            CAM_INSIDE.DJ_SALARY_MANAGE SM
                JOIN
            CAM_HR.DJ_EMP_INFO EI
            ON SM.EMP_SEQ = EI.EMP_SEQ
        WHERE 1=1
    </select>

    <delete id="delSalaryManage" parameterType="map">
        /*delSalaryManage*/
        DELETE FROM CAM_INSIDE.DJ_SALARY_MANAGE
        WHERE SALARY_SN = #{salarySn}
    </delete>

    <delete id="delSalaryManageList" parameterType="map">
        /*delSalaryManageList*/
        DELETE FROM CAM_INSIDE.DJ_MON_SALARY
    </delete>

    <insert id="insSalaryManageList" parameterType="map">
        /*insSalaryManageList*/
        INSERT INTO CAM_INSIDE.DJ_MON_SALARY
        (
            SOCIAL_RATE_SN,
            EMP_SEQ,
            EMP_NAME,
            DEPT_NAME,
            MON,
            BASIC_SALARY,
            EXTRA_PAY,
            BONUS,
            FOOD_PAY
        )
        VALUES
        <foreach collection="list" item="item" separator=" , ">
            (
                #{item.socialRateSn},
                #{item.empSeq},
                #{item.empName},
                #{item.deptName},
                #{item.mon},
                #{item.bsSal},
                #{item.extraPay},
                #{item.bonus},
                #{item.foodPay}
            )
        </foreach>
    </insert>

    <select id="getsocialRateSn" parameterType="map" resultType="int">
        SELECT
            SOCIAL_RATE_SN
        FROM
            CAM_INSIDE.DJ_SOCIAL_RATE
        WHERE
            (IF(#{endDt} = '9999-12-31',
            (#{startDt} BETWEEN START_DATE AND #{endDt}) OR (#{endDt} BETWEEN START_DATE AND END_DATE),
            ((#{startDt} BETWEEN START_DATE AND END_DATE) AND #{endDt} BETWEEN START_DATE AND END_DATE)))
        ORDER BY SOCIAL_RATE_SN
        LIMIT 1
    </select>

    <select id="getExcelEmpInfoList" parameterType="map" resultType="map">
        SELECT
            ERP_EMP_SEQ
            ,EMP_NAME_KR
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            ACTIVE = 'Y'
        AND
            WORK_STATUS_CODE = 'Y'
        AND
            DEPT_SEQ IS NOT NULL
        AND
            ERP_EMP_SEQ != ''
        AND
            EMP_NAME_KR NOT IN ('관리자', '부관리자')
    </select>

    <select id="getExcelEmpSeq" parameterType="map" resultType="int">
        SELECT
            EMP_SEQ
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            ERP_EMP_SEQ = #{erpEmpSeq}
        LIMIT 1
    </select>
</mapper>



