<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="campus">
    <select id="getCodeList" resultType="map" parameterType="map">
        /* getCodeList */
        SELECT
            *
        FROM
            CAMPUS.DJ_CAMPUS_CODE CC
        WHERE
            ACTIVE = 'Y'
    </select>

    <select id="getEduInfoList" resultType="map" parameterType="map">
        /* getEduInfoList */
        SELECT
            RE.*
        FROM
            (
                SELECT
                    @ROWNUM := @ROWNUM + 1 AS ROW_NUM,
                    EI.EDU_INFO_ID,
                    EI.EDU_NAME,
                    EI.START_DT,
                    EI.END_DT,
                    EI.CARE_LOCATION,
                    CONCAT('Level. ', EI.LEVEL_ID) AS LEVEL_ID,
                    EI.EDU_FORM_TYPE,
                    EI.STATUS
                FROM
                    CAMPUS.DJ_EDU_INFO EI,
                    (SELECT @ROWNUM := 0) TMP
                WHERE
                    EI.REG_EMP_SEQ = #{empSeq}
                AND (DATE_FORMAT(START_DT, '%Y') = #{eduYear} || DATE_FORMAT(END_DT, '%Y') = #{eduYear})
                ORDER BY EI.REG_DATE
            ) RE
        ORDER BY RE.ROW_NUM DESC
    </select>

    <select id="getEduInfoOne" resultType="map" parameterType="map">
        /* getEduInfoOne */
        SELECT
            *
        FROM
            CAMPUS.DJ_EDU_INFO EI
        WHERE
            EI.EDU_INFO_ID = #{eduInfoId}
    </select>

    <select id="getEduResultOne" resultType="map" parameterType="map">
        /* getEduResultOne */
        SELECT
            EI.*,
            ER.EDU_TEACHER_NAME,
            ER.EDU_EVAL,
            ER.EDU_POINT,
            ER.FBLIST
        FROM
            CAMPUS.DJ_EDU_INFO EI
                LEFT JOIN
            CAMPUS.DJ_EDU_RESULT ER ON EI.EDU_INFO_ID = ER.EDU_INFO_ID
        WHERE
            EI.EDU_INFO_ID = #{eduInfoId}
    </select>

    <select id="getTargetYearList" resultType="map" parameterType="map">
        /* getTargetYearList */
        SELECT
            CONCAT(ET.TARGET_YEAR, '년') AS TEXT,
            ET.TARGET_YEAR AS VALUE
        FROM
            CAMPUS.DJ_EDU_TARGET ET
        WHERE
            ET.REG_EMP_SEQ = #{empSeq}
        ORDER BY EDU_TARGET_ID DESC
    </select>

    <select id="getTargetOne" resultType="map" parameterType="map">
        /* getTargetOne */
        SELECT
            EDU_TARGET_ID,
            TARGET_YEAR,
            TARGET_CODE,
            LOGIN_ID,
            STATUS,
            REG_EMP_SEQ,
            REG_DATE
        FROM
            CAMPUS.DJ_EDU_TARGET ET
        WHERE
            TARGET_YEAR = #{targetYear}
        AND REG_EMP_SEQ = #{empSeq}
    </select>

    <select id="getTargetList" resultType="map" parameterType="map">
        /* getTargetList */
        SELECT
            ETD.EDU_TARGET_DETAIL_ID,
            ETD.EDU_TARGET_ID,
            ET.TARGET_YEAR,
            ET.TARGET_CODE,
            ET.LOGIN_ID,
            ETD.EDU_CATEGORY_DETAIL_ID,
            ETD.TARGET_CLASS,
            ETD.DUTY_CLASS,
            ETD.STATUS
        FROM
            CAMPUS.DJ_EDU_TARGET ET
        LEFT JOIN
            CAMPUS.DJ_EDU_TARGET_DETAIL ETD ON ET.EDU_TARGET_ID = ETD.EDU_TARGET_ID
        WHERE
            ET.TARGET_YEAR = #{targetYear}
        AND ET.REG_EMP_SEQ = #{empSeq}
        <if test='dutyClass != null and dutyClass != ""'>
            AND ETD.DUTY_CLASS = #{dutyClass}
        </if>
    </select>

    <select id="getCategoryOne" resultType="map" parameterType="map">
        /* getCategoryOne */
        SELECT
            EC.EDU_CATEGORY_NAME
        FROM
            CAMPUS.DJ_EDU_CATEGORY EC
                LEFT JOIN
            CAMPUS.DJ_EDU_CATEGORY_DETAIL ECD ON EC.EDU_CATEGORY_ID = ECD.EDU_CATEGORY_ID
        WHERE ECD.EDU_CATEGORY_ID = #{eduCategoryId}
        GROUP BY EC.EDU_CATEGORY_NAME
    </select>

    <select id="getTargetCategoryList" resultType="map" parameterType="map">
        /* getTargetCategoryList */
        SELECT
            EC.EDU_CATEGORY_ID,
            EC.EDU_CATEGORY_NAME
        FROM
            CAMPUS.DJ_EDU_CATEGORY EC
        WHERE
            EC.EDU_CATEGORY_ID IN (
                SELECT
                    EDU_CATEGORY_ID
                FROM
                    CAMPUS.DJ_EDU_TARGET ET
                LEFT JOIN
                    CAMPUS.DJ_EDU_TARGET_DETAIL ETD ON ET.EDU_TARGET_ID = ETD.EDU_TARGET_ID
                LEFT JOIN
                    CAMPUS.DJ_EDU_CATEGORY_DETAIL ECD ON ETD.EDU_CATEGORY_DETAIL_ID = ECD.EDU_CATEGORY_DETAIL_ID
                WHERE
                    ET.TARGET_YEAR = #{targetYear}
                AND ET.REG_EMP_SEQ = #{empSeq}
                <if test='dutyClass != null and dutyClass != ""'>
                    AND ETD.DUTY_CLASS = #{dutyClass}
                </if>
            )
    </select>

    <select id="getTargetCategoryDetailList" resultType="map" parameterType="map">
        /* getTargetCategoryDetailList */
        SELECT
            ETD.EDU_TARGET_DETAIL_ID,
            ETD.TARGET_CLASS,
            ECD.EDU_CATEGORY_ID,
            ECD.EDU_CATEGORY_DETAIL_ID,
            ECD.EDU_CATEGORY_DETAIL_NAME,
            ECD.LEVEL_ID,
            ETD.STATUS
        FROM
            CAMPUS.DJ_EDU_TARGET ET
        LEFT JOIN
            CAMPUS.DJ_EDU_TARGET_DETAIL ETD ON ET.EDU_TARGET_ID = ETD.EDU_TARGET_ID
        LEFT JOIN
            CAMPUS.DJ_EDU_CATEGORY_DETAIL ECD ON ETD.EDU_CATEGORY_DETAIL_ID = ECD.EDU_CATEGORY_DETAIL_ID
        WHERE
            ET.TARGET_YEAR = #{targetYear}
        AND
            ET.REG_EMP_SEQ = #{empSeq}
        <if test='dutyClass != null and dutyClass != ""'>
            AND ETD.DUTY_CLASS = #{dutyClass}
        </if>
    </select>

    <select id="getEduCategoryList" resultType="map" parameterType="map">
        /* getEduCategoryList */
        SELECT
            EC.EDU_CATEGORY_ID,
            EC.EDU_CATEGORY_NAME,
            EC.LARGE_CATEGORY_ID,
            EC.LARGE_CATEGORY_NAME
        FROM
            CAMPUS.DJ_EDU_CATEGORY EC
        WHERE
        EC.ACTIVE = 'Y'
        <if test='largeCategoryId != null and largeCategoryId != ""'>
            AND EC.LARGE_CATEGORY_ID in (${largeCategoryId})
        </if>
        ORDER BY EC.ORDER
    </select>

    <select id="getEduCategoryDetailList" resultType="map" parameterType="map">
        /* getEduCategoryDetailList */
        SELECT
            ECD.EDU_CATEGORY_DETAIL_ID,
            ECD.EDU_CATEGORY_DETAIL_NAME,
            ECD.EDU_CATEGORY_ID,
            ECD.EDU_CATEGORY_NAME,
            ECD.LEVEL_ID,
            ECD.LEVEL_NAME
        FROM
            CAMPUS.DJ_EDU_CATEGORY_DETAIL ECD
        WHERE
            ECD.ACTIVE = 'Y'
        <if test='levelId != null and levelId != ""'>
        AND ECD.LEVEL_ID = #{levelId}
        </if>
        ORDER BY ECD.ORDER
    </select>

    <select id="getEduPlanList" resultType="map" parameterType="map">
        /* getEduPlanList */
        SELECT
            EP.EDU_PLAN_ID,
            EP.EDU_CATEGORY_ID,
            EP.EDU_PLAN
        FROM
            CAMPUS.DJ_EDU_PLAN EP
        WHERE
            TARGET_YEAR = #{targetYear}
        AND REG_EMP_SEQ = #{empSeq}
        AND DUTY_CLASS = #{dutyClass}
    </select>

    <select id="getEduPlanOne" resultType="map" parameterType="map">
        /* getEduPlanOne */
        SELECT
            EP.EDU_PLAN_ID,
            EP.EDU_PLAN
        FROM
            CAMPUS.DJ_EDU_PLAN EP
        WHERE
            EDU_CATEGORY_ID = #{eduCategoryId}
        AND TARGET_YEAR = #{targetYear}
        AND DUTY_CLASS = #{dutyClass}
        AND REG_EMP_SEQ = #{empSeq}
    </select>

    <select id="getEduStat" resultType="map" parameterType="map">
        /* getEduStat */
        SELECT
            CONCAT(HEI.DEPT_NAME, ' ', HEI.DEPT_TEAM_NAME) AS TEAM,
            HEI.DUTY_NAME,
            HEI.EMP_NAME_KR AS EMP_NAME,
            '주업무' AS DUTY_CLASS,
            CEC.LARGE_CATEGORY_NAME,
            CEC.EDU_CATEGORY_NAME,
            CONCAT('Level ', CECD.LEVEL_ID) AS LEVEL,
            CECD.EDU_CATEGORY_DETAIL_NAME,
            (SELECT SUM(TERM_TIME) FROM CAMPUS.DJ_EDU_INFO SEI WHERE SEI.REG_EMP_SEQ = CEI.REG_EMP_SEQ AND SEI.EDU_CATEGORY_DETAIL_NAME = CECD.EDU_CATEGORY_DETAIL_NAME) AS SUM_TIME,
            (SELECT COUNT(TERM_TIME) FROM CAMPUS.DJ_EDU_INFO SEI WHERE SEI.REG_EMP_SEQ = CEI.REG_EMP_SEQ AND SEI.EDU_CATEGORY_DETAIL_NAME = CECD.EDU_CATEGORY_DETAIL_NAME) AS COUNT_BY,
            (SELECT SUM(TERM_TIME) FROM CAMPUS.DJ_EDU_INFO SEI WHERE SEI.REG_EMP_SEQ = CEI.REG_EMP_SEQ) AS SUM_ALL
        FROM
            CAMPUS.DJ_EDU_INFO CEI
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON CEI.REG_EMP_SEQ = HEI.EMP_SEQ
                LEFT JOIN
            CAMPUS.DJ_EDU_CATEGORY_DETAIL CECD ON CEI.EDU_CATEGORY_DETAIL_ID = CECD.EDU_CATEGORY_DETAIL_ID
                LEFT JOIN
            CAMPUS.DJ_EDU_CATEGORY CEC ON CEC.EDU_CATEGORY_ID = CECD.EDU_CATEGORY_ID
        WHERE
            1=1
        GROUP BY HEI.EMP_NAME_KR, DUTY_CLASS, EDU_CATEGORY_DETAIL_NAME
    </select>

    <insert id="setEduInfoInsert" parameterType="map">
        /* setEduInfoInsert */
        INSERT INTO CAMPUS.DJ_EDU_INFO
            (
                REG_EMP_SEQ,
                REG_EMP_NAME,
                DEPT_NAME,
                EDU_CATEGORY_DETAIL_ID,
                EDU_CATEGORY_DETAIL_NAME,
                LEVEL_ID,
                EDU_NAME,
                EDU_OBJECT,
                EDU_CONTENT,
                START_DT,
                END_DT,
                TERM_DAY,
                TERM_TIME,
                CARE_NAME,
                CARE_LOCATION,
                CARE_TEL_NUM,
                EDU_MONEY,
                EDU_MONEY_TYPE,
                TRAVEL_MONEY_TYPE,
                RETURN_MONEY,
                RETURN_DOC,
                ATTACH_DOC_NAME,
                REG_DT,
                <if test='eduFormType == "3"'>
                    OBJECT_FORUM_TYPE,
                    <if test='objectForumType == "1"'>
                        OBJECT_FORUM_VAL,
                    </if>
                </if>
                <if test='eduFormType == "5"'>
                    BOOK_WRITER_NAME,
                    BOOK_PAGE_VAL,
                    BOOK_PULISH_NAME,
                </if>
                EDU_FORM_TYPE
            )
        VALUES
            (
                #{empSeq},
                #{empName},
                #{deptName},
                #{eduCategoryDetailId},
                #{eduCategoryDetailName},
                #{levelId},
                #{eduName},
                #{eduObject},
                #{eduContent},
                #{startDt},
                #{endDt},
                #{termDay},
                #{termTime},
                #{careName},
                #{careLocation},
                #{careTelNum},
                #{eduMoney},
                #{eduMoneyType},
                #{travelMoneyType},
                #{returnMoney},
                #{returnDoc},
                #{attachDocName},
                #{regDate},
                <if test='eduFormType == "3"'>
                    #{objectForumType},
                    <if test='objectForumType == "1"'>
                        #{objectForumVal},
                    </if>
                </if>
                <if test='eduFormType == "5"'>
                    #{bookWriter},
                    #{bookPage},
                    #{bookPulish},
                </if>
                #{eduFormType}
            )
    </insert>

    <update id="setEduInfoUpdate" parameterType="map">
        /* setEduInfoUpdate */
        UPDATE
            CAMPUS.DJ_EDU_INFO
        SET
            TERM_DAY = #{termDay},
            TERM_TIME = #{termTime},
            EDU_CONTENT = #{eduContent}
        WHERE
            EDU_INFO_ID = #{eduInfoId}
    </update>

    <insert id="setEduResultInsert" parameterType="map">
        /* setEduResultInsert */
        INSERT INTO CAMPUS.DJ_EDU_RESULT
            (
                EDU_INFO_ID,
                EDU_TEACHER_NAME,
                EDU_EVAL,
                EDU_POINT,
                FBLIST,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{eduInfoId},
                #{eduTeacherName},
                #{eduEval},
                #{eduPoint},
                #{FBList},
                #{empSeq}
            )
    </insert>

    <insert id="setStudyInfoInsert" parameterType="map">
        /* setStudyInfoInsert */
        INSERT INTO CAMPUS.DJ_STUDY_INFO
            (
                STUDY_NAME,
                START_DT,
                END_DT,
                DATE_VAL,
                STUDY_LOCATION,
                STUDY_OBJECT,
                STUDY_CONTENT,
                STUDY_MONEY,
                STUDY_MONEY_VAL,
                REG_EMP_SEQ,
                REG_DT
            )
        VALUES
            (
                #{studyName},
                #{startDt},
                #{endDt},
                #{dateVal},
                #{studyLocation},
                #{studyObject},
                #{studyContent},
                #{studyMoney},
                #{studyMoneyVal},
                #{empSeq},
                #{regDate}
            )
    </insert>

    <insert id="setTargetInsert" parameterType="map">
        /* setTargetInsert */
        INSERT INTO CAMPUS.DJ_EDU_TARGET
            (
                TARGET_YEAR,
                TARGET_CODE,
                LOGIN_ID,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{targetYear},
                #{targetCode},
                #{loginId},
                #{empSeq}
            )
    </insert>

    <insert id="setTargetDetailInsert" parameterType="map">
        /* setTargetDetailInsert */
        INSERT INTO CAMPUS.DJ_EDU_TARGET_DETAIL
            (
                EDU_TARGET_ID,
                EDU_CATEGORY_DETAIL_ID,
                DUTY_CLASS,
                REG_EMP_SEQ
            )
        VALUES
        <foreach collection="eduCategoryDetailIdList" item="item" separator=" , ">
            (
                (SELECT EDU_TARGET_ID FROM CAMPUS.DJ_EDU_TARGET WHERE TARGET_YEAR = #{targetYear} AND REG_EMP_SEQ = #{empSeq}),
                #{item.eduCategoryDetailId},
                #{dutyClass},
                #{empSeq}
            )
        </foreach>
    </insert>

    <update id="setEduTargetDetailUpdate" parameterType="map">
        /* setEduTargetDetailUpdate */
        UPDATE
            CAMPUS.DJ_EDU_TARGET_DETAIL
        SET
            TARGET_CLASS = #{classNum}
        WHERE
            EDU_TARGET_DETAIL_ID IN
        <foreach collection="eduTargetDetailIdList" item="item" open="(" separator="," close=")">
            #{item.eduTargetDetailId}
        </foreach>
    </update>

    <delete id="setTargetDetailDelete" parameterType="map">
        /* setTargetDetailDelete */
        DELETE FROM
            CAMPUS.DJ_EDU_TARGET_DETAIL
        WHERE
            EDU_TARGET_ID = (
                SELECT
                    EDU_TARGET_ID
                FROM
                    CAMPUS.DJ_EDU_TARGET
                WHERE
                    TARGET_YEAR = #{targetYear}
                AND REG_EMP_SEQ = #{empSeq}
            )
        AND DUTY_CLASS = #{dutyClass}
    </delete>

    <insert id="setEduPlanInsert" parameterType="map">
        /* setEduPlanInsert */
        INSERT INTO CAMPUS.DJ_EDU_PLAN
            (
                EDU_CATEGORY_ID,
                TARGET_YEAR,
                DUTY_CLASS,
                EDU_PLAN,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{eduCategoryId},
                #{targetYear},
                #{dutyClass},
                #{eduPlan},
                #{empSeq}
            )
    </insert>

    <update id="setEduPlanUpdate" parameterType="map">
        /* setEduPlanUpdate */
        UPDATE
            CAMPUS.DJ_EDU_PLAN
        SET
            EDU_PLAN = #{eduPlan}
        WHERE
            EDU_PLAN_ID = #{eduPlanId}
    </update>

    <update id="updateEduInfoApprStat" parameterType="map">
        /* updateEduInfoApprStat */
        UPDATE
            CAMPUS.DJ_EDU_INFO
        SET
            STATUS = ${status}
        WHERE
            EDU_INFO_ID = #{eduInfoId}
    </update>

    <update id="updateApprStat" parameterType="map">
        /* updateApprStat */
        UPDATE
            CAMPUS.DJ_EDU_TARGET
        SET
            STATUS = ${status}
        WHERE
            TARGET_YEAR = #{targetYear}
        AND REG_EMP_SEQ = #{empSeq}
    </update>
</mapper>