<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project">

    <select id="getProjectList" parameterType="map" resultType="map">
        SELECT A.* FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        WHERE
        1=1
        AND A.TEAM_STAT = "N"
        <if test='busnClass != null and busnClass != ""'>
            AND
            A.BUSN_CLASS = #{busnClass}
        </if>
        <if test='busnSubClass != null and busnSubClass != "" and !"Y".equals(busnSubClass)'>
            AND
            A.PJT_STEP in (${busnSubClass})
            AND
            A.PJT_STOP = "N"
        </if>
        <if test='busnSubClass == "Y" or "Y".equals(busnSubClass)'>
            AND
            A.PJT_STOP = "Y"
        </if>
        <if test='deptSeq != null and deptSeq != ""'>
            AND
            A.DEPT_SEQ in (${deptSeq})
        </if>
        <if test= '"1".equals(searchValue)'>
            AND
            A.REG_EMP_SEQ = #{regEmpSeq} AND A.PJT_STEP in ('E1','E2','E3','E4','E5','R2')
        </if>
        <if test= '"2".equals(searchValue)'>
            AND
            A.REG_EMP_SEQ = #{regEmpSeq}
        </if>
        <if test='"1".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            A.PJT_CD LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"1".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            (A.PJT_NM LIKE CONCAT('%', #{searchText}, '%') OR A.PJT_SUB_NM LIKE CONCAT('%', #{searchText}, '%'))
        </if>
        <if test='"3".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            B.CRM_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"4".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            A.PM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        ORDER BY A.REG_DT DESC
    </select>

    <select id="getProjectStep" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN B
        ON
            A.PJT_SN = B.PJT_SN AND B.ACTIVE = "Y"
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO D
        ON
            A.CRM_SN = D.CRM_SN
        LEFT JOIN
            (SELECT CRM_NM as CRM_CON_NM, CRM_SN as CRM_CON_SN FROM CAM_CRM.DJ_CRM_INFO) DA
        ON
            A.CRM_CON_SN = DA.CRM_CON_SN
        LEFT JOIN
            (SELECT CRM_NM as CRM_PART_NM, CRM_SN as CRM_PART_SN FROM CAM_CRM.DJ_CRM_INFO) DB
        ON
            A.CRM_PART_SN = DB.CRM_PART_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON
            D.CRM_SN = CM.CRM_SN AND CM.CRM_MEM_SN = A.CRM_MEM_SN
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insProject" parameterType="map">
        /* insProject >> 프로젝트 엔지니어링 최초 등록 */
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
        (
        PJT_NM,
        EMP_SEQ,
        EMP_NAME,
        DEPT_SEQ,
        DEPT_NAME,
        BUSN_CLASS,
        BUSN_NM,
        PJT_STEP,
        PJT_STEP_NM,
        CONSULT_DT
        ) VALUES (
        #{pjtNm},
        #{empSeq},
        #{empName},
        #{deptSeq},
        #{deptName},
        #{busnClass},
        #{busnNm},
        #{pjtStep},
        #{pjtStepNm},
        #{contDt}
        )
        <selectKey keyProperty="PJT_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
        </selectKey>
    </insert>

    <insert id="insPjtEngn" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_ENGN
        (
        PJT_SN,
        CONT_DT,
        EXP_AMT,
        CONT_LOC,
        STEP1,
        REG_EMP_SEQ
        ) VALUES
        (
        #{PJT_SN},
        #{contDt},
        #{expAmt},
        #{contLoc},
        'R',
        #{empSeq}
        )
        <selectKey keyProperty="ENGN_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_ENGN'
        </selectKey>
    </insert>

    <delete id="delProject" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn}
    </delete>

    <select id="getProjectData" parameterType="map" resultType="map">
        SELECT
            A.*,
            D.*,
            CM.*,
            EI.DEPT_NAME,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            DATE_FORMAT(STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        /*LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN B
        ON
            A.PJT_SN = B.PJT_SN*/
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_DELV DE
        ON
            A.PJT_SN = DE.PJT_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON
            DE.PM_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO D
        ON
            A.CRM_SN = D.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON
            A.CRM_MEM_SN = CM.CRM_MEM_SN
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insEngnEstInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_EST
        (
        PJT_SN,
        EST_DE,
        EST_NM,
        CRM_NM,
        CRM_MEM,
        VAT,
        EST_TOT_AMT,
        EST_ISS,
        REG_EMP_SEQ
        ) VALUES
        (
        #{pjtSn},
        #{estDe},
        #{estNm},
        #{crmNm},
        #{crmMem},
        #{vat},
        #{estTotAmt},
        #{estIss},
        #{regEmpSeq}
        )

        <selectKey keyProperty="EST_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_EST'
        </selectKey>
    </insert>

    <insert id="insEngnEstSub" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_EST_SUB
        (
            EST_SN,
            PROD_NM,
            PROD_CNT,
            UNIT,
            UNIT_AMT,
            SUP_AMT,
            ETC
        ) VALUES
            (
                #{estSn},
                #{prodNm},
                #{prodCnt},
                #{unit},
                #{unitAmt},
                #{supAmt},
                #{etc}
            )
    </insert>

    <update id="updEstInfo" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_EST
        SET
            EST_TOT_AMT = #{goodsTotAmt}
        WHERE
            EST_SN = #{estSn}
    </update>

    <update id="updProjectStep" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = #{pjtStep},
            PJT_STEP_NM = #{pjtStepNm}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProjectEngnStep" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
        MOD_DT = sysdate(),
        MOD_EMP_SEQ = #{regEmpSeq},
        <choose>
            <when test="step == 2">STEP2 = 'Y', STEP3 = 'R'</when>
            <when test="step == 3">STEP3 = 'Y', STEP4 = 'R'</when>
            <when test="step == 4">STEP4 = 'Y', STEP5 = 'R'</when>
            <when test="step == 5">STEP5 = 'Y', STEP6 = 'R'</when>
            <when test="step == 6">STEP6 = 'Y', STEP7 = 'R'</when>
            <when test="step == 7">STEP7 = 'Y', STEP8 = 'R'</when>
            <when test="step == 8">STEP8 = 'Y'</when>
            <otherwise>PJT_SN = #{pjtSn}</otherwise>
        </choose>
        WHERE
        PJT_SN = #{pjtSn}
    </update>

    <select id="getStep1EstList" parameterType="map" resultType="map">
        SELECT
            A.*,
            (SELECT EMP_NAME_KR from CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = 1) AS EMP_NAME,
            (SELECT COUNT(*) FROM CAM_PJT_MNG.DJ_PJT_EST_SUB WHERE EST_SN = A.EST_SN) AS CNT,
            (SELECT SUM(SUP_AMT) FROM CAM_PJT_MNG.DJ_PJT_EST_SUB WHERE EST_SN = A.EST_SN) AS SUM_AMT
        FROM
            CAM_PJT_MNG.DJ_PJT_EST A
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="getEstSubList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE
            EST_SN = #{estSn}
    </select>

    <select id="getEstData" parameterType="map" resultType="map">
        SELECT
            A.*,
            (SELECT EMP_NAME_KR from CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = 1) AS EMP_NAME
        FROM
            CAM_PJT_MNG.DJ_PJT_EST A
        WHERE
            PJT_SN = #{pjtSn}
        ORDER BY EST_SN DESC LIMIT 1
    </select>

    <delete id="delEstSub" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE
            EST_SN = #{estSn}
    </delete>
    <insert id="insStep2" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DELV
        (
        PJT_SN,
        DELV_DE,
        DELV_SUMR,
        DELV_SPEC,
        DELV_ITEM,
        DELV_CNT,
        DELV_UNIT,
        DELV_LOC,
        DELV_MEAN,
        DELV_ASSU,
        DELV_TEST,
        DELV_AMT,
        DELV_DEPT,
        PM_EMP_SEQ,
        PM_EMP_NM,
        REG_EMP_SEQ
        ) VALUES
        (
        #{pjtSn},
        #{delvDe},
        #{delvSumr},
        #{delvSpec},
        #{delvItem},
        #{delvCnt},
        #{delvUnit},
        #{delvLoc},
        #{delvMean},
        #{delvAssu},
        #{delvTest},
        #{delvAmt},
        #{delvDept},
        #{pmEmpSeq},
        #{pmEmpNm},
        #{regEmpSeq}
        )
        <selectKey keyProperty="DELV_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DELV'
        </selectKey>
    </insert>

    <insert id="insStep3" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DEV
        (
            PJT_SN,
            INV_AMT,
            INV_PER,
            DEP_OBJ,
            ETC,
            REG_EMP_SEQ
        ) VALUES
            (
                #{pjtSn},
                #{invAmt},
                #{invPer},
                #{depObj},
                #{etc},
                #{regEmpSeq}
            )
    </insert>

    <insert id="insStep4" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS_FILE
        (
            PJT_SN
        )
        VALUES
            (
                #{pjtSn}
            )
    </insert>

    <select id="checkModStep4" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM CAM_PJT_MNG.DJ_PJT_PS_FILE
        WHERE PJT_SN = #{pjtSn}
    </select>

    <!--DUPLICATE-->
    <update id="updProjectDelv" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_AMT = #{delvAmt},
            STR_DT = #{estDe},
            END_EXP_DT = #{delvDe},
            PM = #{pmEmpNm},
            PJT_TMP_CD = #{pjtTmpCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <!-- DUPLICATE -->
    <update id="updProjectDelvFn" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="checkProjectCode" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_SN = #{pjtSn}
          AND
            PJT_CD IS NOT NULL
    </select>

    <select id="getDelvData" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            A.STATUS AS DELV_STATUS
        FROM
            CAM_PJT_MNG.DJ_PJT_DELV A
                LEFT JOIN
            CAM_HR.DJ_EMP_INFO B ON A.PM_EMP_SEQ = B.EMP_SEQ
                LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE
            PJT_SN = #{pjtSn} ORDER BY DELV_SN DESC LIMIT 1
    </select>

    <select id="getDelvFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DELV_FILE_SN}
    </select>

    <select id="getDevFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DEV_FILE_SN}
    </select>

    <select id="getEstFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{EST_FILE_SN}
    </select>

    <select id="groupCodeList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        GROUP BY GRP_SN
    </select>

    <insert id="insGroupCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm}
            )
    </insert>

    <select id="codeList" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            LG_CD IS NOT NULL
          AND
            PJT_CD IS NULL
    </select>

    <select id="selLgCode" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            PJT_CD is null
    </select>

    <select id="selSmCode" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            LG_CD = #{lgCd}
          AND
            PJT_CD is not null
    </select>

    <insert id="insSetLgCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCode},
                #{lgCodeNm}
            )
    </insert>

    <select id="smCodeList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD = #{lgCd}
          AND
            PJT_CD IS NOT NULL
    </select>

    <insert id="insPjtCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM,
            PJT_CD,
            PJT_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCd},
                #{lgCdNm},
                #{pjtCd},
                #{pjtCdNm}
            )
    </insert>

    <select id="cntProjectCode" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_TMP_CD = #{pjtTmpCd}
    </select>

    <select id="checkModStep1" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_EST
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkModStep2" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DELV
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkModStep3" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkAddVersion" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
          AND
            STATUS = 0
    </select>

    <select id="getDevPjtVerList" parameterType="map" resultType="map">
        /*getDevPjtVerList*/
        SELECT
            *,
            C.REG_DT AS INV_DT
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            (SELECT *
             FROM
                 CAM_PJT_MNG.DJ_PJT_EST
             WHERE PJT_SN = #{pjtSn} ORDER BY EST_SN DESC LIMIT 1) B
        ON
            A.PJT_SN = B.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_DEV C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO D
        ON C.REG_EMP_SEQ = D.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON C.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getStep3PmInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            EMP_SEQ = #{PM_EMP_SEQ}
    </select>

    <insert id="insPjtPs" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS
        (
        PJT_SN,
        PS_ROW,
        PS_PREP,
        PS_PREP_NM,
        PS_NM,
        PS_STR_DE,
        PS_END_DE,
        PS_EMP_SEQ,
        PS_EMP_NM,
        REG_EMP_SEQ
        ) VALUES
        (
        #{pjtSn},
        #{psRow},
        #{psPrep},
        #{psPrepNm},
        #{psNm},
        #{psStrDe},
        #{psEndDe},
        #{psEmpSeq},
        #{psEmpNm},
        #{regEmpSeq}
        )
        <selectKey keyProperty="PS_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_PS'
        </selectKey>
    </insert>

    <select id="getProcessList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PS
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <update id="updProcess" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_PS
        SET
            PS_ROW = #{psRow}
        WHERE
            PS_SN = #{psSn}
    </update>

    <delete id="delProcess" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_PS
        WHERE
            PS_SN = #{psSn}
    </delete>

    <insert id="insInvData" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_INV
        (
            PJT_SN,
            DEV_SN,
            INV_ROW,
            DIV_CD,
            DIV_NM,
            INV_NM,
            INV_CNT,
            INV_UNIT,
            EST_TOT_AMT,
            EST_OFC,
            INV_ETC,
            REG_EMP_SEQ
        ) VALUES
        (
            #{pjtSn},
            #{devSn},
            #{invRow},
            #{divCd},
            #{divNm},
            #{invNm},
            #{invCnt},
            #{invUnit},
            #{estTotAmt},
            #{estOfc},
            #{invEtc},
            #{regEmpSeq}
        )
        <selectKey keyProperty="INV_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_INV'
        </selectKey>
    </insert>

    <select id="getInvList" parameterType="map" resultType="map">
        SELECT * FROM
            CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <update id="updInvest" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_INV
        SET
            INV_ROW = #{invRow},
            DIV_CD = #{divCd},
            DIV_NM = #{divNm},
            INV_NM = #{invNm},
            INV_CNT = #{invCnt},
            INV_UNIT = #{invUnit},
            EST_TOT_AMT = #{estTotAmt},
            EST_OFC = #{estOfc},
            INV_ETC = #{invEtc}
        WHERE
            INV_SN = #{invSn}
    </update>

    <delete id="delInvest" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            INV_SN = #{invSn}
    </delete>

    <select id="getDevelopPlan" parameterType="map" resultType="map">
        SELECT
            A.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM CAM_PJT_MNG.DJ_PJT_DEV A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE PJT_SN = #{pjtSn}
        ORDER BY DEV_SN DESC LIMIT 1
    </select>

    <select id="getPjtSnToDev" parameterType="map" resultType="map">
        SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PJT_DEV
        WHERE DEV_SN = #{devSn}
    </select>

    <select id="getPsList" parameterType="map" resultType="map">
        SELECT
            M.*,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_CODE = M.POSITION_CODE AND CM_GROUP_CODE_ID = 4) AS POSITION_NAME,
            (SELECT LABOR_AMT FROM CAM_PJT_MNG.DJ_PJT_LABOR WHERE POSITION_CD = M.POSITION_CODE) AS LABOR_AMT,
            (SELECT TEAM_COST_AMT FROM CAM_PJT_MNG.DJ_PJT_TEAM_COST WHERE DEPT_CD = M.DEPT_SEQ) AS TEAM_COST_AMT
        FROM
            (SELECT
                 A.*,
                 C.PREP_A_TIME,
                 C.PREP_B_TIME,
                 C.PREP_C_TIME,
                 C.PREP_D_TIME,
                 C.COST_ETC,
                 C.DOC_ID AS COST_DOC_ID,
                 C.STATUS AS COST_STATUS,
                 B.PS_FILE_SN,
                 B.FILE_ETC1,
                 B.FILE_ETC2,
                 B.FILE_ETC3,
                 (SELECT POSITION_CODE FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS POSITION_CODE,
                 (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS EMP_NM,
                 (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS DEPT_SEQ,
                 DI.APPRO_KEY,
                 DI.DOC_MENU_CD
             FROM
                 CAM_PJT_MNG.DJ_PJT_PS A
                     LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_PS_FILE B
                 ON
                     A.PJT_SN = B.PJT_SN
                     LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_COST C
                 ON
                     A.PJT_SN = C.PJT_SN
                     LEFT JOIN
                 DJ_CAMTIC.A_DOC_INFO DI
                 ON
                     C.DOC_ID = DI.DOC_ID
             WHERE
                 A.PJT_SN = #{pjtSn}) M
    </select>


    <select id="getResultPsMember" parameterType="map" resultType="map">
        /*getResultPsMember*/
        SELECT
            M.*,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_CODE = M.POSITION_CODE AND CM_GROUP_CODE_ID = 4) AS POSITION_NAME,
            (SELECT LABOR_AMT FROM CAM_PJT_MNG.DJ_PJT_LABOR WHERE POSITION_CD = M.POSITION_CODE) AS LABOR_AMT,
            (SELECT TEAM_COST_AMT FROM CAM_PJT_MNG.DJ_PJT_TEAM_COST WHERE DEPT_CD = M.DEPT_SEQ) AS TEAM_COST_AMT
        FROM
            (SELECT
                 A.*,
                 C.PREP_A_TIME,
                 C.PREP_B_TIME,
                 C.PREP_C_TIME,
                 C.PREP_D_TIME,
                 C.COST_ETC,
                 C.DOC_ID AS COST_DOC_ID,
                 C.STATUS AS COST_STATUS,
                 B.PS_FILE_SN,
                 B.FILE_ETC1,
                 B.FILE_ETC2,
                 B.FILE_ETC3,
                 (SELECT POSITION_CODE FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS POSITION_CODE,
                 (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS EMP_NM,
                 (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS DEPT_SEQ,
                 DI.APPRO_KEY,
                 DI.DOC_MENU_CD
             FROM
                 CAM_PJT_MNG.DJ_PJT_PS A
                     LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_PS_FILE B
                 ON
                     A.PJT_SN = B.PJT_SN
                     LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_COST C
                 ON
                     A.PJT_SN = C.PJT_SN
                     LEFT JOIN
                 DJ_CAMTIC.A_DOC_INFO DI
                 ON
                     C.DOC_ID = DI.DOC_ID
             WHERE
                 A.PJT_SN = #{pjtSn}) M
        GROUP BY PS_EMP_SEQ
    </select>

    <select id="getPsFile1" parameterType="map" resultType="map">
        /*getPsFile1*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile1"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <select id="getPsFile2" parameterType="map" resultType="map">
        /*getPsFile2*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile2"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <select id="getPsFile3" parameterType="map" resultType="map">
        /*getPsFile3*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile3"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <update id="updStep5" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DELV_DE = #{delvDe},
            PJT_AMT = #{estTotAmt}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updStepEst5" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_EST
        SET
            EST_ISS = #{estIss},
            EST_TOT_AMT = #{estTotAmt}
        WHERE
            EST_SN = #{estSn}
    </update>

    <delete id="delStepEstSub5" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE EST_SN = #{estSn}
    </delete>

    <select id="checkDelvStat" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_SN = #{pjtSn} AND DELV_STAT = 'Y'
    </select>

    <update id="updEngnCrmInfo" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            CRM_SN = #{crmSn},
            <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                CRM_MEM_SN = #{crmMemSn},
            </if>
            CRM_MEM_TEMP_NM = #{crmReqMem}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProject" parameterType="map">
        /* updProject */
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = #{step}
        WHERE
            PJT_SN = #{pjtSn}
          AND
        <![CDATA[
            PJT_STEP < #{step}
        ]]>
    </update>

    <update id="updEngn" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
            ${stepColumn} = #{stepValue},
            ${nextStepColumn} = #{nextStepValue},
            MOD_DT = now()
        WHERE
            ENGN_SN = #{engnSn} AND ${stepColumn} = 'N'
    </update>

    <update id="updateDelvApprStat" parameterType="map">
        /* updateDelvApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateDelvFinalApprStat" parameterType="map">
        /* updateDelvFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateDevApprStat" parameterType="map">
        /* updateDevApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updateDevFinalApprStat" parameterType="map">
        /* updateDevFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updateResApprStat" parameterType="map">
        /* updateResApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateResFinalApprStat" parameterType="map">
        /* updateResFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateCostApprStat" parameterType="map">
        /* updateCostApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateCostFinalApprStat" parameterType="map">
        /* updateCostFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        /*getCrmInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT DP
                LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN PE
            ON
                DP.PJT_SN = PE.PJT_SN
                LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON
                DP.CRM_SN = CI.CRM_SN
                LEFT JOIN
            CAM_CRM.DJ_CRM_MEM DM
            ON
                DP.CRM_MEM_SN = DM.CRM_MEM_SN
        WHERE
            DP.PJT_SN = #{pjtSn}
    </select>

    <select id="getBustInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT HR
                LEFT JOIN
            CAM_INSIDE.DJ_HR_BIZ_REQ HRQ
            ON
                HR.HR_BIZ_REQ_ID = HRQ.HR_BIZ_REQ_ID
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <insert id="insDelvInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DELV
        (
        PJT_SN,
        DELV_DE,
        DELV_ISSU,
        DELV_ITEM,
        DELV_CNT,
        DELV_UNIT,
        DELV_LOC,
        DELV_AMT,
        DELV_DEPT,
        PM_EMP_SEQ,
        PM_EMP_NM,
        PJT_STR_DT,
        PJT_END_DT,
        DELV_PAY,
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        #{delvDe},
        #{delvIssu},
        #{delvItem},
        #{delvCnt},
        #{delvUnit},
        #{delvLoc},
        #{delvAmt},
        #{delvDept},
        #{pmEmpSeq},
        #{pmEmpNm},
        #{pjtStrDt},
        #{pjtEndDt},
        #{delvPay},
        #{empSeq}
        )

        <selectKey keyProperty="delvSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DELV'
        </selectKey>

    </insert>

    <update id="updDelvInfo" parameterType="map">
        /*updDelvInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            DELV_DE = #{delvDe},
            DELV_ISSU = #{delvIssu},
            DELV_ITEM = #{delvItem},
            DELV_CNT = #{delvCnt},
            DELV_UNIT = #{delvUnit},
            DELV_LOC = #{delvLoc},
            DELV_AMT = #{delvAmt},
            DELV_DEPT = #{delvDept},
            PM_EMP_SEQ = #{pmEmpSeq},
            PM_EMP_NM = #{pmEmpNm},
            PJT_STR_DT = #{pjtStrDt},
            PJT_END_DT = #{pjtEndDt},
            DELV_PAY = #{delvPay},
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            DELV_SN = #{delvSn}
    </update>

    <insert id="insDevInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DEV
        (
        PJT_SN,
        INV_AMT,
        INV_PER,
        DEP_OBJ,
        ETC,
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        #{invAmt},
        #{invPer},
        #{depObj},
        #{etc},
        #{regEmpSeq}
        )
        <selectKey keyProperty="devSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DEV'
        </selectKey>
    </insert>

    <update id="updDevInfo" parameterType="map">
        /*updDevInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            INV_AMT = #{invAmt},
            INV_PER = #{invPer},
            DEP_OBJ = #{depObj},
            ETC = #{etc},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProjectTmpCode" parameterType="map">
        /*updProjectTmpCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_AMT = #{delvAmt},
            PJT_TMP_CD = #{pjtTmpCd},
            DELV_STAT = 'Y',
            STR_DT = #{estDe},
            END_EXP_DT = #{delvDe},
            PM = #{pmEmpNm}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateProjectCode" parameterType="map">
        /*updateProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = PJT_TMP_CD
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updInv" parameterType="map">
        /*updInv*/
        UPDATE CAM_PJT_MNG.DJ_PJT_INV
        SET
            DEV_SN = #{devSn}
        WHERE
            PJT_SN = #{pjtSn} AND DEV_SN IS NULL
    </update>

    <update id="updPs" parameterType="map">
        /*updPs*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PS
        SET
            DEV_SN = #{devSn}
        WHERE
            PJT_SN = #{pjtSn} AND DEV_SN IS NULL
    </update>

    <select id="getDevData" parameterType="map" resultType="map">
        /*getDevData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
        ORDER BY DEV_SN DESC LIMIT 1
    </select>

    <update id="stopProject" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STOP = "Y",
            PJT_STOP_RS = #{pjtStopRs}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPsPrepInfo" parameterType="map" resultType="map">
        /*getPsPrepInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PS_FILE
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <insert id="insPsPrepInfo" parameterType="map">
        /*insPsPrepInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS_FILE
        (
        PJT_SN,
        FILE_ETC1,
        FILE_ETC2,
        FILE_ETC3
        )
        VALUES
        (
        #{pjtSn},
        #{fileEtc1},
        #{fileEtc2},
        #{fileEtc3}
        )

        <selectKey keyProperty="psFileSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_PS_FILE'
        </selectKey>
    </insert>

    <insert id="updPsPrepInfo" parameterType="map">
        /*updPsPrepInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PS_FILE
        SET
            FILE_ETC1 = #{fileEtc1},
            FILE_ETC2 = #{fileEtc2},
            FILE_ETC3 = #{fileEtc3}
        WHERE
            PS_FILE_SN = #{psFileSn}
    </insert>

    <update id="updGoodInfo" parameterType="map">
        /*updGoodInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DELV_DE = #{delvDe},
            GOODS_ISS = #{goodsIss}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getResultInfo" parameterType="map" resultType="map">
        /*getResultInfo*/
        SELECT
            A.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_PJT_MNG.DJ_PJT_RESULT A
                LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insResultInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_RESULT
        (
        PJT_SN,
        PROTOTYPE,
        SUP_CONT,
        RS_ISS,
        RS_ETC,
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            DELV_PREP_A,
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            DELV_PREP_B,
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            DELV_PREP_C,
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            INV_PREP_A,
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            INV_PREP_B,
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            INV_PREP_C,
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            PREP_A,
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            PREP_B,
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            PREP_C,
        </if>
        RS_STR_DT,
        RS_END_DT,
        RS_ACT_EQUIP,
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        #{prototype},
        #{supCont},
        #{rsIss},
        #{rsEtc},
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            #{delvPrepA},
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            #{delvPrepB},
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            #{delvPrepC},
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            #{invPrepA},
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            #{invPrepB},
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            #{invPrepC},
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            #{prepA},
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            #{prepB},
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            #{prepC},
        </if>
        #{rsStrDt},
        #{rsEndDt},
        #{rsActEquip},
        #{empSeq}
        )
        <selectKey keyProperty="rsSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_RESULT'
        </selectKey>
    </insert>

    <update id="updResultInfo" parameterType="map">
        /*updResultInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
        PROTOTYPE = #{prototype},
        SUP_CONT = #{supCont},
        RS_ISS = #{rsIss},
        RS_ETC = #{rsEtc},
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            DELV_PREP_A = #{delvPrepA},
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            DELV_PREP_B = #{delvPrepB},
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            DELV_PREP_C = #{delvPrepC},
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            INV_PREP_A = #{invPrepA},
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            INV_PREP_B = #{invPrepB},
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            INV_PREP_C = #{invPrepC},
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            PREP_A = #{prepA},
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            PREP_B = #{prepB},
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            PREP_C = #{prepB},
        </if>
        RS_STR_DT = #{rsStrDt},
        RS_END_DT = #{rsEndDt},
        RS_ACT_EQUIP = #{rsActEquip},
        MOD_EMP_SEQ = #{empSeq}
        WHERE
        RS_SN = #{rsSn}
    </update>

    <update id="updResultDesignFile" parameterType="map">
        /*updResultDesignFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            DSGN_FILE_SN = #{file_no}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <update id="updResultProdFile" parameterType="map">
        /*updResultProdFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            PROD_FILE_SN = #{file_no}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <select id="getDesignFile" parameterType="map" resultType="map">
        /*getDesignFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DSGN_FILE_SN}
    </select>

    <select id="getProdFile" parameterType="map" resultType="map">
        /*getProdFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{PROD_FILE_SN}
    </select>

    <update id="updDelvFile" parameterType="map">
        /*updDelvFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            DELV_FILE_SN = #{file_no}
        WHERE
            DELV_SN = #{delvSn}
    </update>

    <update id="updDevFile" parameterType="map">
        /*updDevFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            DEV_FILE_SN = #{file_no}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updDevEstFile" parameterType="map">
        /*updDevEstFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            EST_FILE_SN = #{file_no}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="setDelvFileDocNm" parameterType="map">
        /* setDelvFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
          AND file_cd = 'delvFile'
    </update>

    <update id="setDevFileDocNm" parameterType="map">
        /* setDevFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no in (${fileNo})
          AND file_cd in ('devEstFile', 'devFile')
    </update>

    <update id="setResultFileDocNm" parameterType="map">
        /* setResultFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
          AND file_cd = 'engnRsFile'
    </update>

    <insert id="insTeamInfo" parameterType="map">
        /*insTeamInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_TEAM
            (
                PJT_SN,
                TM_DEPT_SEQ,
                TM_TEAM_SEQ,
                TM_PM_SEQ,
                TM_CRM_SN,
                TM_AMT,
                TM_BALANCE,
                TM_EXPT_PROFIT,
                TM_EXPT_PER,
                TM_EXPT_COST
            )
        VALUES
            (
                #{pjtSn},
                #{tmDeptSeq},
                #{tmTeamSeq},
                #{tmPMSeq},
                #{tmCrmSn},
                #{tmAmt},
                #{tmBalance},
                #{tmExptProfit},
                #{tmExptPer},
                #{tmExptCost}
            )

        <selectKey keyProperty="tmSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_TEAM'
        </selectKey>
    </insert>

    <update id="updTeamProject" parameterType="map">
        /*updTeamProject*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            TM_SN = #{tmSn},
            EMP_SEQ = #{tmPMSeq},
            EMP_NAME = (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = #{tmPMSeq}),
            DEPT_SEQ = #{tmTeamSeq},
            DEPT_NAME = (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = #{tmTeamSeq})
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <insert id="insTeamProject" parameterType="map">
        /*insTeamProject*/
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
            (
                EMP_SEQ,
                EMP_NAME,
                DEPT_SEQ,
                DEPT_NAME,
                BUSN_CLASS,
                BUSN_NM,
                TEAM_STAT,
                PNT_PJT_SN,
                SBJ_CLASS,
                SBJ_CHAR,
                SBJ_DEP,
                SBJ_DEP_SUB,
                SBJ_SEP,
                SBJ_STAT_YN,
                PJT_CON_YEAR,
                PJT_CD,
                PJT_TMP_CD,
                BS_TITLE,
                PJT_NM,
                PJT_SUB_NM,
                PJT_STEP,
                PJT_STEP_NM,
                CRM_SN,
                CRM_MEM_SN,
                CRM_MEM_TEMP_NM,
                CRM_CON_SN,
                CRM_PART_SN,
                PM,
                PJT_AMT,
                PJT_EXP_AMT,
                CONSULT_DT,
                STR_DT,
                ACTIVE,
                REG_EMP_SEQ,
                REG_DT
            )
            (SELECT
                EMP_SEQ,
                EMP_NAME,
                DEPT_SEQ,
                DEPT_NAME,
                BUSN_CLASS,
                BUSN_NM,
                "Y" AS TEAM_STAT,
                #{pjtSn} AS PNT_PJT_SN,
                SBJ_CLASS,
                SBJ_CHAR,
                SBJ_DEP,
                SBJ_DEP_SUB,
                SBJ_SEP,
                SBJ_STAT_YN,
                PJT_CON_YEAR,
                PJT_CD,
                PJT_TMP_CD,
                BS_TITLE,
                CONCAT("[협업] ", PJT_NM) AS PJT_NM,
                PJT_SUB_NM,
                PJT_STEP,
                PJT_STEP_NM,
                CRM_SN,
                CRM_MEM_SN,
                CRM_MEM_TEMP_NM,
                CRM_CON_SN,
                CRM_PART_SN,
                PM,
                #{tmAmt},
                #{tmAmt},
                CONSULT_DT,
                NOW(),
                ACTIVE,
                REG_EMP_SEQ,
                REG_DT
            FROM CAM_PJT_MNG.DJ_PROJECT
            WHERE PJT_SN = #{pjtSn})
        <selectKey keyProperty="PJT_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
        </selectKey>
    </insert>

    <select id="getTeamList" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.*,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.TM_DEPT_SEQ) AS DEPT_NAME,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.TM_TEAM_SEQ) AS TEAM_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.TM_PM_SEQ) AS EMP_NAME,
            (SELECT CRM_NM FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.TM_CRM_SN) AS CRM_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_TEAM A
                LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
            ON
                A.PJT_SN = B.PJT_SN
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getCostData" parameterType="map" resultType="map">
        /*getCostData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_COST
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <insert id="insCostInfo" parameterType="map">
        /*insCostInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_COST
        (
            PJT_SN,
            PREP_A_TIME,
            PREP_B_TIME,
            PREP_C_TIME,
            PREP_D_TIME,
            COST_ETC,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{pjtSn},
                #{prepATime},
                #{prepBTime},
                #{prepCTime},
                #{prepDTime},
                #{costEtc},
                #{empSeq}
            )
    </insert>

    <update id="updCostInfo" parameterType="map">
        /*updCostInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            PREP_A_TIME = #{prepATime},
            PREP_B_TIME = #{prepBTime},
            PREP_C_TIME = #{prepCTime},
            PREP_D_TIME = #{prepDTime},
            COST_ETC = #{costEtc},
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getProjectDocInfo" parameterType="map" resultType="map">
        SELECT
            A.*, B.*,
            IFNULL(DELV.DOC_ID, '') AS DELV_DOC_ID,
            DELVDI.APPRO_KEY AS DELV_APPRO_KEY,
            DELVDI.DOC_MENU_CD AS DELV_DOC_MENU_CD,

            IFNULL(DEV.DOC_ID, '') AS DEV_DOC_ID,
            DEVDI.APPRO_KEY AS DEV_APPRO_KEY,
            DEVDI.DOC_MENU_CD AS DEV_DOC_MENU_CD,

            IFNULL(RESULT.DOC_ID, '') AS RESULT_DOC_ID,
            RESULTDI.APPRO_KEY AS RESULT_APPRO_KEY,
            RESULTDI.DOC_MENU_CD AS RESULT_DOC_MENU_CD,

            IFNULL(COST.DOC_ID, '') AS COST_DOC_ID,
            COSTDI.APPRO_KEY AS COST_APPRO_KEY,
            COSTDI.DOC_MENU_CD AS COST_DOC_MENU_CD

        FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN B
        ON A.PJT_SN = B.PJT_SN AND B.ACTIVE = "Y"

        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV DELV ON A.PJT_SN = DELV.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DEV DEV ON A.PJT_SN = DEV.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT RESULT ON A.PJT_SN = RESULT.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_COST COST ON A.PJT_SN = COST.PJT_SN

        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DELVDI ON DELV.DOC_ID = DELVDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DEVDI ON DEV.DOC_ID = DEVDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO RESULTDI ON RESULT.DOC_ID = RESULTDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO COSTDI ON COST.DOC_ID = COSTDI.DOC_ID

        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <update id="updPjtDevTotAmt" parameterType="map">
        /*updPjtDevTotAmt*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            INV_AMT = #{totAmt}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <select id="getPartRateVersionList" parameterType="map" resultType="map">
        /*getPartRateVersionList*/
        SELECT
            A.*,
            B.PJT_NM,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS STR_DT,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DT,
            DATE_FORMAT(A.REQ_DATE, '%Y-%m-%d') AS REQ_DT,
            B.BUSN_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        WHERE
            1 = 1
        <if test='busnClass != null and !"".equals(busnClass)'>
            AND
                B.BUSN_CLASS = #{busnClass}
        </if>
        <if test='pjtNm != null and !"".equals(pjtNm)'>
            AND
                PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
    </select>

    <select id="getPartRateVer" parameterType="map" resultType="map">
        /*getPartRateVer*/
        SELECT
            A.*,
            B.PJT_NM,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS STR_DT,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DT,
            DATE_FORMAT(A.REQ_DATE, '%Y-%m-%d') AS REQ_DT,
            (SELECT LG_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" LIMIT 1) AS SBJ_DEP_NM,
            (SELECT PJT_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" AND PJT_CD = B.SBJ_DEP_SUB) AS SBJ_DEP_SUB_NM,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 37 AND CM_CODE = B.SBJ_CHAR) AS SBJ_CHAR_NM,
            B.BUSN_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </select>

    <select id="getProjectManagerInfo" parameterType="map" resultType="map"><![CDATA[
        /*getProjectManagerInfo*/
        SELECT
            A.*,
            B.*,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            D.CHNG_SAL,
            D.PART_DET_STR_DT,
            D.PART_DET_END_DT,
            D.PART_EMP_NM,
            D.PART_EMP_SEQ,
            D.PAY_RATE,
            D.ITEM_RATE,
            D.MON_SAL,
            D.MON_DIFF,
            D.TOT_PAY_BUDG,
            D.TOT_ITEM_BUDG,
            D.TOT_RATE,
            D.PAY_TOTAL
        FROM
            CAM_PJT_MNG.DJ_PJT_RND A
        LEFT JOIN
            (SELECT
                *
            FROM
                CAM_INSIDE.DJ_SALARY_MANAGE
            WHERE
                DATE(START_DT) < (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN})
                AND
                    IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31')) >= (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN})
            ) B
        ON
            A.MNG_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PART_RATE_DET D
        ON
            D.PART_RATE_VER_SN = #{PART_RATE_VER_SN} AND D.PART_EMP_SEQ = A.MNG_EMP_SEQ AND D.PJT_SN = #{PJT_SN}
        WHERE A.PJT_SN = #{PJT_SN}
        limit 1
        ]]>
    </select>

    <select id="getProjectMemberInfo" parameterType="map" resultType="map">
        <![CDATA[
        /*getProjectMemberInfo*/
        SELECT
            A.*,
            B.*,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            D.CHNG_SAL,
            D.PART_DET_STR_DT,
            D.PART_DET_END_DT,
            D.PART_EMP_NM,
            D.PART_EMP_SEQ,
            D.PAY_RATE,
            D.ITEM_RATE,
            D.MON_SAL,
            D.MON_DIFF,
            D.TOT_PAY_BUDG,
            D.TOT_ITEM_BUDG,
            D.TOT_RATE,
            D.PAY_TOTAL
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            (SELECT
                 *
             FROM
                 CAM_INSIDE.DJ_SALARY_MANAGE
             WHERE
                 DATE(START_DT) < (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN})
            AND
            IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31')) >= (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN})
            ) B
        ON
            B.EMP_SEQ = #{MEMBER_SEQ}
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PART_RATE_DET D
        ON
            A.PART_RATE_VER_SN = D.PART_RATE_VER_SN AND D.PART_EMP_SEQ = #{MEMBER_SEQ} AND D.PJT_SN = #{PJT_SN}
        WHERE A.PJT_SN = #{PJT_SN}
        limit 1
        ]]>
    </select>

    <update id="updTmpProjectCode" parameterType="map">
        /*updTmpProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_TMP_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProjectCode" parameterType="map">
        /*updProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updEngnProjectCode" parameterType="map">
        /*updEngnProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD =
                (SELECT
                    CASE
                        WHEN MAX(REPLACE(PJT_CD, #{PJT_TMP_CD}, '')) = "" THEN CONCAT(#{PJT_TMP_CD}, '01')
                        ELSE CONCAT(#{PJT_TMP_CD}, LPAD(SUBSTR(MAX(PJT_CD), 8) + 1, '2', '0'))
                        END AS tt
                FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_CD like CONCAT(#{PJT_TMP_CD}, '%'))
        WHERE
            PJT_SN = #{PJT_SN}
    </update>

    <select id="getProjectTotalData" parameterType="map" resultType="map">
        /*getProjectTotalData*/
        WITH RECURSIVE PROJECT AS (
            SELECT
                #{busnClass} AS BUSN_CLASS
        )
        SELECT
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E') AND SP.PJT_STOP = 'N') AS EXPECT_COUNT,
            (SELECT IFNULL(SUM(SE.EXP_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN SE ON SP.PJT_SN = SE.PJT_SN WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E') AND SP.PJT_STOP = 'N') AS EXPECT_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E1', 'E2', 'E3', 'E4', 'E5') AND SP.PJT_STOP = 'N') AS PROGRESS_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E1', 'E2', 'E3', 'E4', 'E5') AND SP.PJT_STOP = 'N') AS PROGRESS_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N') AS COMPLETE_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.BUSN_CLASS = P.BUSN_CLASS AND PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N') AS COMPLETE_SUM
        FROM
            PROJECT P
    </select>

    <delete id="delTeamProject" parameterType="map">
        /*delTeamProject*/
        DELETE FROM CAM_PJT_MNG.DJ_PROJECT WHERE TM_SN = #{tmSn}
    </delete>

    <delete id="delTeamProjectData" parameterType="map">
        /*delTeamProjectData*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_TEAM WHERE TM_SN = #{tmSn}
    </delete>

    <select id="getTeamProjectList" parameterType="map" resultType="map">
        /*getTeamProjectList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_TEAM B
        ON
            A.PNT_PJT_SN = B.PJT_SN
        WHERE
            A.PNT_PJT_SN = #{pjtSn}
    </select>

</mapper>