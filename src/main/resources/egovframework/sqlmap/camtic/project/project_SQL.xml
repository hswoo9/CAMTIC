<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project">

    <select id="getProjectInfo" parameterType="map" resultType="map">
        /*getProjectInfo*/
        SELECT
            A.*,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT,
            CASE WHEN A.TM_SN IS NULL THEN 'N' ELSE 'Y' END AS TM_YN,
            C.TAX_GUBUN,
            CASE
                WHEN (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SA WHERE SA.PNT_PJT_SN = A.PJT_SN) > 0 THEN 'Y'
                ELSE 'N'
            END AS TEAM_CK
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_MNG.DJ_DEPO_SETTING C ON A.PJT_SN = C.FR_PJT_SN
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getProjectList" parameterType="map" resultType="map">
        /* getProjectList */
        SELECT * FROM (SELECT
            A.*,
            B.CRM_NM,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS PJT_STR_DE,
            DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS PJT_END_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND RND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND UNRND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') AND DLP.STATUS = '100' THEN DATE_FORMAT(DLP.DELV_EST_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_STR_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND RND.STATUS = '100' THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND UNRND.STATUS = '100' THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') THEN
                    CASE
                        WHEN A.DELV_DE IS NULL OR A.DELV_DE = '' THEN DATE_FORMAT(DLP.DELV_DE, '%Y-%m-%d')
                        ELSE DATE_FORMAT(A.DELV_DE, '%Y-%m-%d')
                    END
            ELSE ''
            END AS LIST_END_EX_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R', 'S', 'D', 'V') AND PR.STATUS = '100' THEN DATE_FORMAT(PR.RS_END_DT, '%Y-%m-%d')
                ELSE ''
            END AS LIST_END_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R') THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') THEN DATE_FORMAT(DLP.DELV_EST_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_STR_DE_T,
            CASE
                WHEN A.BUSN_CLASS IN ('R') THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') THEN DATE_FORMAT(A.END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') THEN
                    CASE
                        WHEN A.DELV_DE IS NULL OR A.DELV_DE = '' THEN DATE_FORMAT(DLP.DELV_DE, '%Y-%m-%d')
                        ELSE DATE_FORMAT(A.DELV_DE, '%Y-%m-%d')
                    END
                ELSE ''
            END AS LIST_END_EX_DE_T,
            CASE
                WHEN A.BUSN_CLASS IN ('R', 'S', 'D', 'V') THEN DATE_FORMAT(PR.RS_END_DT, '%Y-%m-%d')
                ELSE ''
            END AS LIST_END_DE_T,
            CASE
                WHEN A.BUSN_CLASS = 'R' THEN DATE_FORMAT(IFNULL((SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.STR_DT), '%Y-%m-%d')
                WHEN A.BUSN_CLASS = 'S' THEN DATE_FORMAT(IFNULL((SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.STR_DT), '%Y-%m-%d')
                ELSE DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
            END AS PJT_STR_DE2,
            CASE
                WHEN A.BUSN_CLASS = 'R' THEN DATE_FORMAT(IFNULL((SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.END_DT), '%Y-%m-%d')
                WHEN A.BUSN_CLASS = 'S' THEN DATE_FORMAT(IFNULL((SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.END_DT), '%Y-%m-%d')
                ELSE DATE_FORMAT(A.END_DT, '%Y-%m-%d')
            END AS PJT_END_DE2,
            DLP.DELV_EST_DE,
            (SELECT PNT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE A.PJT_SN = SP.PNT_PJT_SN limit 1) AS PNT_PJT_SN_CK,
            R.PART_EMP_SEQ,
            (SELECT INV_AMT FROM CAM_PJT_MNG.DJ_PJT_DEV WHERE PJT_SN = A.PJT_SN ORDER BY DEV_SN DESC LIMIT 1) AS INV_AMT,
            SPT.PM_EMP_SEQ AS TEAM_PM_EMP_SEQ, SPT.REG_EMP_SEQ AS TEAM_REG_EMP_SEQ, SPT.EMP_SEQ AS TEAM_EMP_SEQ,
            IFNULL(A.PARENT_PJT_SN, A.PJT_SN) AS PARENT_PJT_SN2
        FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV DLP ON A.PJT_SN = DLP.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RND RND ON A.PJT_SN = RND.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_UNRND UNRND ON A.PJT_SN = UNRND.PJT_SN
        LEFT JOIN (
            SELECT
                PJT_SN, PART_EMP_SEQ
            FROM
                CAM_PJT_MNG.DJ_PART_RATE_DET SA
            WHERE
                PART_RATE_VER_SN = (SELECT
                                        SSA.PART_RATE_VER_SN
                                    FROM
                                        CAM_PJT_MNG.DJ_PJT_PART_RATE_VER SSA
                                    WHERE
                                        SSA.PJT_SN = SA.PJT_SN
                                    AND SSA.PART_RATE_VER = (SELECT MAX(SSSA.PART_RATE_VER) FROM CAM_PJT_MNG.DJ_PJT_PART_RATE_VER SSSA WHERE SSSA.PJT_SN = SA.PJT_SN GROUP BY SSSA.PJT_SN ))
        ) R ON A.PJT_SN = R.PJT_SN
        LEFT JOIN (
            SELECT
                PJT_SN, PS_EMP_SEQ
            FROM cam_pjt_mng.dj_pjt_ps
        ) R2 ON A.PJT_SN = R2.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT PR ON A.PJT_SN = PR.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PROJECT SPT ON A.PJT_SN = SPT.PNT_PJT_SN
        WHERE
            1=1
        AND A.TEAM_STAT = 'N'
        <if test='pjtYear != null and pjtYear != ""'>
            AND
                DATE_FORMAT(A.STR_DT, '%Y') = #{pjtYear}
        </if>

        <if test='busnClass != null and busnClass != ""'>
            AND
                A.BUSN_CLASS = #{busnClass}
        </if>
        <if test='empName != null and empName != ""'>
            AND IF(
                A.BUSN_CLASS IN ('R','S'),
                A.EMP_NAME LIKE CONCAT('%', #{empName}, '%'),
                A.PM LIKE CONCAT('%', #{empName}, '%')
            )
        </if>
        <if test='busnSubClass != null and busnSubClass != "" and !"Y".equals(busnSubClass) and !"res".equals(busnSubClass)'>
            AND
                A.PJT_STEP in (${busnSubClass})
            AND
                A.PJT_STOP = "N"
            AND
                (PR.STATUS != '100' OR PR.STATUS IS NULL)
        </if>
        <if test='busnSubClass == "Y" or "Y".equals(busnSubClass)'>
            AND
                A.PJT_STOP = "Y"
        </if>
        <if test='"res".equals(busnSubClass)'>
            AND
                PR.STATUS = '100'
        </if>
        <if test='deptSeq != null and deptSeq != ""'>
            AND (
                A.DEPT_SEQ IN (${deptSeq})
                OR
                A.DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE PARENT_DEPT_SEQ IN (SELECT DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ IN (${deptSeq})))
            )
        </if>
        <if test='"1".equals(searchValue)'>
            AND
                (A.REG_EMP_SEQ = #{regEmpSeq} OR A.PM_EMP_SEQ = #{regEmpSeq} OR A.EMP_SEQ = #{regEmpSeq} OR R.PART_EMP_SEQ = #{regEmpSeq} OR R2.PS_EMP_SEQ = #{regEmpSeq}
            OR SPT.PM_EMP_SEQ = #{regEmpSeq} OR SPT.REG_EMP_SEQ = #{regEmpSeq} OR SPT.EMP_SEQ = #{regEmpSeq})
            AND
                A.PJT_STEP in ('E1','E2','E3','E4','E5','R','R2','S','S2')
            AND
                A.PJT_STOP != "Y"
        </if>
        <if test='"2".equals(searchValue)'>
            AND
                (A.REG_EMP_SEQ = #{regEmpSeq} OR A.PM_EMP_SEQ = #{regEmpSeq} OR A.EMP_SEQ = #{regEmpSeq} OR R.PART_EMP_SEQ = #{regEmpSeq} OR R2.PS_EMP_SEQ = #{regEmpSeq}
            OR SPT.PM_EMP_SEQ = #{regEmpSeq} OR SPT.REG_EMP_SEQ = #{regEmpSeq} OR SPT.EMP_SEQ = #{regEmpSeq})
        </if>
        <if test='"3".equals(searchValue)'>
            AND
                A.PJT_STEP in ('E1','E2','E3','E4','E5','R','R2','S','S2')
        </if>
        <if test='"".equals(searchValue) and "".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            (A.PJT_NM LIKE CONCAT('%', #{searchText}, '%') OR A.BS_TITLE LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"1".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            A.PJT_CD LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"2".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            A.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"3".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            B.CRM_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"4".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
            A.PM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='!"".equals(pjtNm) and pjtNm != null'>
            AND
            A.PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
        <if test='type != null and !"".equals(type)'>
            AND
            A.BUSN_CLASS IN ('S', 'R') AND A.PJT_CD IS NOT NULL
        </if>
        GROUP BY A.PJT_SN
        ORDER BY A.PJT_SN DESC
        ) AA

        GROUP BY AA.PARENT_PJT_SN2
        ORDER BY AA.REG_DT DESC
    </select>

    <select id="getRndProjectList" parameterType="map" resultType="map">
        /* getRndProjectList */
        SELECT
            A.*,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS STR_DT2,
            DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS END_DT2,
            B.CRM_NM,
            DLP.DELV_EST_DE,
            (SELECT PNT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE A.PJT_SN = SP.PNT_PJT_SN limit 1) AS PNT_PJT_SN_CK,
            C.GOVT_PJT_SN,
            IFNULL(C.PREV_SALE_AMT, 0) AS PREV_SALE_AMT,
            IFNULL(C.PREV_INCP_AMT, 0) AS PREV_INCP_AMT,
            IFNULL(C.NEXT_SALE_AMT, 0) AS NEXT_SALE_AMT,
            IFNULL(C.NEXT_INCP_AMT, 0) AS NEXT_INCP_AMT
        FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV DLP ON A.PJT_SN = DLP.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_GOVT_PROJECT_AMT C on A.PJT_SN = C.PJT_SN
        WHERE
            1=1
        AND
            A.BUSN_CLASS IN ('S', 'R') AND A.PJT_CD IS NOT NULL
        AND
            A.TEAM_STAT = "N"
        AND
            A.PJT_STEP in ('E3', 'E4', 'E5', 'E6', 'E7', 'R2', 'R2', 'S2', 'R3', 'S3')
        AND
            A.PJT_STOP = "N"
        <if test='pjtYear != null and pjtYear != ""'>
            AND
                DATE_FORMAT(A.STR_DT, '%Y') = #{pjtYear}
        </if>
        <if test='busnClass != null and busnClass != ""'>
            AND
                A.BUSN_CLASS = #{busnClass}
        </if>
        <if test='empName != null and empName != ""'>
            AND
                A.PM LIKE CONCAT('%', #{empName}, '%')
        </if>
        <if test='deptSeq != null and deptSeq != ""'>
            AND
            A.DEPT_SEQ in (${deptSeq})
        </if>
        <if test='"1".equals(searchValue) and searchText != null and !"".equals(searchText)'>
            AND
            A.PJT_CD LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"2".equals(searchValue) and searchText != null and !"".equals(searchText)'>
            AND
            A.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"3".equals(searchValue) and searchText != null and !"".equals(searchText)'>
            AND
            B.CRM_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"4".equals(searchValue) and searchText != null and !"".equals(searchText)'>
            AND
            A.PM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        GROUP BY A.PJT_SN
        ORDER BY A.REG_DT DESC
    </select>

    <select id="getDepoManageProjectList" parameterType="map" resultType="map">
        /* getDepoManageProjectList */
        SELECT
            A.*,
            (SELECT PNT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE A.PJT_SN = SP.PNT_PJT_SN limit 1) AS PNT_PJT_SN_CK,
            (select count(*) from cam_mng.dj_depo_setting where fr_pjt_sn = A.pjt_sn) AS setYn,
            C.*
        FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        LEFT JOIN CAM_MNG.DJ_DEPO_SETTING C ON A.PJT_SN = C.FR_PJT_SN
        WHERE
        1=1
        AND A.TEAM_STAT = 'N'
        AND A.PJT_STEP in (${busnSubClass})
        <![CDATA[ AND ((YEAR(STR_DT) <= #{year} AND YEAR(END_DT) >= #{year}) OR (YEAR(CONSULT_DT) <= #{year} AND YEAR(CONSULT_DT) >= #{year})) ]]>
        <if test='busnClass != null and busnClass != ""'>
            AND
                A.BUSN_CLASS = #{busnClass}
        </if>
        <if test='deptSeq != null and deptSeq != ""'>
            AND
                A.DEPT_SEQ in (${deptSeq})
        </if>
        <if test= '"1".equals(searchValue)'>
            AND
                A.REG_EMP_SEQ = #{regEmpSeq} AND A.PJT_STEP in ('E1','E2','E3','E4','E5','R2')
        </if>
        <if test= '"2".equals(searchValue)'>
            AND
                A.REG_EMP_SEQ = #{regEmpSeq}
        </if>
        <if test= '"3".equals(searchValue)'>
            AND
                A.PJT_STEP in ('E1','E2','E3','E4','E5','R2')
        </if>
        <if test='"".equals(searchValue) and "".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
                (A.PJT_NM LIKE CONCAT('%', #{searchText}, '%') OR A.BS_TITLE LIKE CONCAT('%', #{searchText}, '%'))
        </if>
        <if test='"1".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
                A.PJT_CD LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"2".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
                A.PJT_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"3".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
                B.CRM_NM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='"4".equals(searchValue2) and searchText != null and !"".equals(searchText)'>
            AND
                A.PM LIKE CONCAT('%', #{searchText}, '%')
        </if>
        <if test='!"".equals(pjtNm) and pjtNm != null'>
            AND
                A.PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
        <if test='type != null and !"".equals(type)'>
            AND A.BUSN_CLASS IN ('S', 'R') AND A.PJT_CD IS NOT NULL
        </if>
        <if test='"1000".equals(searchValue)'>
            AND C.FR_PJT_SN IS NOT NULL
        </if>
        <if test='"999".equals(searchValue)'>
            AND C.FR_PJT_SN IS NULL
        </if>
        ORDER BY A.REG_DT DESC
    </select>

    <select id="getAllProjectList" parameterType="map" resultType="map">
        /* getAllProjectList */

        /* 단년 사업 */
        SELECT * FROM (
        SELECT
        A.PJT_SN, A.PJT_CD, A.BUSN_CLASS, A.BUSN_NM, A.PJT_NM, A.PJT_AMT, DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS STR_DT, DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS END_DT, A.EMP_NAME, A.PM, A.PJT_STEP, A.PJT_STEP_NM, A.PJT_STOP
        FROM
        CAM_PJT_MNG.DJ_PROJECT A
        WHERE
        1=1
        AND (A.YEAR_CLASS != 'M' OR YEAR_CLASS IS NULL)
        AND A.PARENT_PJT_SN IS NULL
        <if test='tmStat != null and !"".equals(tmStat)'>
            AND A.TEAM_STAT = #{tmStat}
        </if>

        UNION ALL

        /* 다년사업이면서 차년도가 여러개인것들 */
        SELECT
        A.PJT_SN, A.PJT_CD, A.BUSN_CLASS, A.BUSN_NM, A.PJT_NM, A.PJT_AMT, DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS STR_DT, DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS END_DT, A.EMP_NAME, A.PM, A.PJT_STEP, A.PJT_STEP_NM, A.PJT_STOP
        FROM
        CAM_PJT_MNG.DJ_PROJECT A
        WHERE
        PJT_SN IN (SELECT MAX(PJT_SN) AS PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT A WHERE A.YEAR_CLASS = 'M' AND A.TEAM_STAT = "N" AND A.PARENT_PJT_SN IS NOT NULL GROUP BY PARENT_PJT_SN)

        UNION ALL

        /* 다년사업이면서 차년도가 1개인것들 */
        SELECT
        A.PJT_SN, A.PJT_CD, A.BUSN_CLASS, A.BUSN_NM, A.PJT_NM, A.PJT_AMT, DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS STR_DT, DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS END_DT, A.EMP_NAME, A.PM, A.PJT_STEP, A.PJT_STEP_NM, A.PJT_STOP
        FROM
        CAM_PJT_MNG.DJ_PROJECT A
        WHERE
        PJT_SN IN (SELECT AA.PJT_SN AS PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT AA WHERE AA.YEAR_CLASS = 'M' AND AA.TEAM_STAT = "N" AND AA.PARENT_PJT_SN IS NULL AND AA.PJT_SN NOT IN (SELECT MAX(A.PJT_SN) AS PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT A WHERE A.YEAR_CLASS = 'M' AND A.TEAM_STAT = "N" AND A.PARENT_PJT_SN IS NOT NULL GROUP BY A.PARENT_PJT_SN))

        UNION ALL

        /* 정부사업 */
        SELECT
        B.CORP_PJT_SN AS PJT_SN, B.CORP_PJT_CD AS PJT_CD, 'M' AS BUSN_CLASS, '법인' AS BUSN_NM, B.CORP_PJT_NM AS PJT_NM, 0 AS PJT_AMT, B.STR_DT AS STR_DT, B.END_DT AS END_DT, B.PM_EMP_NAME AS EMP_NAME, B.PM_EMP_NAME AS PM, '' AS PJT_STEP, '' AS PJT_STEP_NM, 'N' AS PJT_STOP
        FROM
        CAM_PJT_MNG.DJ_CORP_PROJECT B
        ) RE
        WHERE RE.PJT_CD IS NOT NULL
        <choose>
            <when test='busnClass != null and busnClass != ""'>
                AND
                RE.BUSN_CLASS = #{busnClass}
            </when>
            <otherwise>
                AND RE.PJT_CD IS NOT NULL
            </otherwise>
        </choose>
        <if test='!"".equals(pjtNm) and pjtNm != null'>
            AND
            RE.PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
        ORDER BY RE.STR_DT DESC
    </select>

    <select id="getProjectDataOne" parameterType="map" resultType="map">
        /*getProjectDataOne*/
        SELECT * FROM (
            SELECT
                A.PJT_SN, A.PJT_CD, A.BUSN_CLASS, A.BUSN_NM, A.PJT_NM, A.PJT_AMT, DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS STR_DT, DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS END_DT, A.EMP_NAME, A.PM, A.PJT_STEP, A.PJT_STEP_NM, A.PJT_STOP
            FROM
                CAM_PJT_MNG.DJ_PROJECT A
            WHERE
                1=1
            AND A.TEAM_STAT = 'N'

            UNION ALL

            SELECT
                B.CORP_PJT_SN AS PJT_SN, B.CORP_PJT_CD AS PJT_CD, 'M' AS BUSN_CLASS, '법인' AS BUSN_NM, B.CORP_PJT_NM AS PJT_NM, 0 AS PJT_AMT, B.STR_DT AS STR_DT, B.END_DT AS END_DT, B.PM_EMP_NAME AS EMP_NAME, B.PM_EMP_NAME AS PM, '' AS PJT_STEP, '' AS PJT_STEP_NM, 'N' AS PJT_STOP
            FROM
                CAM_PJT_MNG.DJ_CORP_PROJECT B
        ) RE
        WHERE
            RE.PJT_CD = #{pjtCd}
          AND
            DATE_FORMAT(RE.STR_DT,'%Y%m%d') = #{strDt} AND DATE_FORMAT(RE.END_DT,'%Y%m%d') = #{endDt}
    </select>

    <select id="getProjectStep" parameterType="map" resultType="map">
        /*getProjectStep*/
        SELECT
            *,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS PJT_STR_DT, DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            A.REG_EMP_SEQ AS WRITER_EMP_SEQ
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN B
        ON
            A.PJT_SN = B.PJT_SN AND B.ACTIVE = "Y"
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO D
        ON
            A.CRM_SN = D.CRM_SN
        LEFT JOIN
            (SELECT CRM_NM as CRM_CON_NM, CRM_SN as CRM_CON_SN FROM CAM_CRM.DJ_CRM_INFO) DA
        ON
            A.CRM_CON_SN = DA.CRM_CON_SN
        LEFT JOIN
            (SELECT CRM_NM as CRM_PART_NM, CRM_SN as CRM_PART_SN FROM CAM_CRM.DJ_CRM_INFO) DB
        ON
            A.CRM_PART_SN = DB.CRM_PART_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON
            D.CRM_SN = CM.CRM_SN AND CM.CRM_MEM_SN = A.CRM_MEM_SN
        LEFT JOIN
            CAM_MNG.DJ_DEPO_SETTING DDS
        ON
            A.PJT_SN = DDS.FR_PJT_SN
        WHERE
            1 = 1
            <choose>
                <when test='type != null and !"".equals(type) and "approve".equals(type)'>
                    AND A.PJT_SN = (SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PJT_CHANGE WHERE PJT_CH_SN = #{pjtSn})
                </when>
                <otherwise>
                    AND A.PJT_SN = #{pjtSn}
                </otherwise>
            </choose>
    </select>

    <select id="getMultiPjtList" parameterType="map" resultType="map">
        /*getMultiPjtList*/
        SELECT PJT_SN, PARENT_PJT_SN, BS_TITLE, PJT_NM FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{multiParentPjtSn}

        UNION ALL

        SELECT PJT_SN, PARENT_PJT_SN, BS_TITLE, PJT_NM FROM CAM_PJT_MNG.DJ_PROJECT WHERE PARENT_PJT_SN = #{multiParentPjtSn}
    </select>

    <select id="getTeamPjtList" parameterType="map" resultType="map">
        /*getTeamPjtList*/
        SELECT PJT_SN, CASE WHEN TM_SN IS NULL THEN 'N' ELSE 'Y' END AS TM_YN, DEPT_NAME FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn} AND PJT_STOP = 'N'

        UNION ALL

        SELECT PJT_SN, CASE WHEN TM_SN IS NULL THEN 'N' ELSE 'Y' END AS TM_YN, DEPT_NAME FROM CAM_PJT_MNG.DJ_PROJECT WHERE PNT_PJT_SN = #{pjtSn} AND PJT_STOP = 'N'
    </select>

    <insert id="insProject" parameterType="map">
        /* insProject >> 프로젝트 엔지니어링 최초 등록 */
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
            (
                PJT_NM,
                EMP_SEQ,
                EMP_NAME,
                DEPT_SEQ,
                DEPT_NAME,
                BUSN_CLASS,
                BUSN_NM,
                PJT_STEP,
                PJT_STEP_NM,
                CONSULT_DT,
                SECURITY,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtNm},
                #{empSeq},
                #{empName},
                #{deptSeq},
                #{deptName},
                #{busnClass},
                #{busnNm},
                #{pjtStep},
                #{pjtStepNm},
                #{contDt},
                #{security},
                #{regEmpSeq}
            )
            <selectKey keyProperty="PJT_SN" resultType="Integer" order="BEFORE">
                SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
            </selectKey>
    </insert>

    <update id="updProjectInfo" parameterType="map">
        /* updProjectInfo */
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_NM = #{pjtNm},
            CONSULT_DT = #{contDt},
            SECURITY = #{security},
            MOD_EMP_SEQ = #{regEmpSeq},
            <if test='pjtAmt != null and !"".equals(pjtAmt)'>
                PJT_AMT = #{pjtAmt},
            </if>
            MOD_DT = NOW()
        WHERE PJT_SN = #{pjtSn}
    </update>

    <insert id="insPjtEngn" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_ENGN
            (
                PJT_SN,
                CONT_DT,
                EXP_AMT,
                CONT_LOC,
                CONT_LOC_SN,
                STEP1,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{PJT_SN},
                #{contDt},
                #{expAmt},
                #{contLoc},
                #{contLocSn},
                'R',
                #{empSeq}
            )
        <selectKey keyProperty="ENGN_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_ENGN'
        </selectKey>
    </insert>

    <update id="updPjtEngn" parameterType="map">
        /* updPjtEngn */
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
            CONT_DT = #{contDt},
            EXP_AMT = #{expAmt},
            CONT_LOC = #{contLoc},
            CONT_LOC_SN = #{contLocSn}
        WHERE PJT_SN = #{pjtSn}
    </update>

    <delete id="delProject" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn}
    </delete>

    <select id="getProjectData" parameterType="map" resultType="map">
        /*getProjectData*/
        SELECT
            A.*,
            D.*,
            CM.*,
            DE.DELV_EST_DE,
            EI.DEPT_NAME,
            EI.EMP_NAME_KR,
            EI.POSITION_NAME,
            DATE_FORMAT(STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(END_DT, '%Y-%m-%d') AS PJT_END_DT,
            CASE
                WHEN A.BUSN_CLASS = 'R' THEN DATE_FORMAT(IFNULL((SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.STR_DT), '%Y-%m-%d')
                WHEN A.BUSN_CLASS = 'S' THEN DATE_FORMAT(IFNULL((SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.STR_DT), '%Y-%m-%d')
                ELSE DATE_FORMAT(STR_DT, '%Y-%m-%d')
            END AS PJT_START_DT2,
            CASE
                WHEN A.BUSN_CLASS = 'R' THEN DATE_FORMAT(IFNULL((SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.END_DT), '%Y-%m-%d')
                WHEN A.BUSN_CLASS = 'S' THEN DATE_FORMAT(IFNULL((SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN AND A.YEAR_CLASS = 'M'), A.END_DT), '%Y-%m-%d')
                ELSE DATE_FORMAT(END_DT, '%Y-%m-%d')
            END AS PJT_END_DT2,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT,
            DATE_FORMAT(STR_DT, '%Y%m%d') AS G20_STR_DT,
            DATE_FORMAT(END_DT, '%Y%m%d') AS G20_END_DT,
            CASE WHEN A.TM_SN IS NULL THEN 'N' ELSE 'Y' END AS TM_YN,
            DS.BUDGET_SN,
            (SELECT IFNULL(SUM(DEPO_AMT),0) FROM CAM_MNG.DJ_PAY_DEPO WHERE A.PJT_SN = PJT_SN ) AS TOT_DEPO_AMT,
            (SELECT INV_AMT FROM CAM_PJT_MNG.DJ_PJT_DEV WHERE PJT_SN = A.PJT_SN ORDER BY DEV_SN DESC LIMIT 1) AS INV_AMT,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND RND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND UNRND.STATUS = '100' THEN DATE_FORMAT(A.STR_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') AND DE.STATUS = '100' THEN DATE_FORMAT(DE.DELV_EST_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_STR_DE,
            CASE
                WHEN A.BUSN_CLASS IN ('R') AND PR.STATUS = '100' THEN DATE_FORMAT(PR.RS_END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('S') AND PR.STATUS = '100' THEN DATE_FORMAT(PR.RS_END_DT, '%Y-%m-%d')
                WHEN A.BUSN_CLASS IN ('D', 'V') AND PR.STATUS = '100' THEN DATE_FORMAT(A.DELV_DE, '%Y-%m-%d')
                ELSE ''
            END AS LIST_END_DE
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        /*LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN B
        ON
            A.PJT_SN = B.PJT_SN*/
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_DELV DE
        ON
            A.PJT_SN = DE.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_RND RND
        ON
            A.PJT_SN = RND.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_UNRND UNRND
        ON
            A.PJT_SN = UNRND.PJT_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON
            DE.PM_EMP_SEQ = EI.EMP_SEQ
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO D
        ON
            A.CRM_SN = D.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM CM
        ON
            A.CRM_MEM_SN = CM.CRM_MEM_SN
        LEFT JOIN
            CAM_MNG.DJ_DEPO_SETTING DS
        ON
            A.PJT_SN = DS.FR_PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_RESULT PR
        ON
            A.PJT_SN = PR.PJT_SN
        WHERE
            A.PJT_SN = #{pjtSn}
        LIMIT 1
    </select>

    <insert id="insEngnEstInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_EST
        (
            PJT_SN,
            EST_DE,
            EST_NM,
            CRM_NM,
            CRM_MEM,
            VAT,
            EST_TOT_AMT,
            EST_ISS,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{estDe},
            #{estNm},
            #{crmNm},
            #{crmMem},
            #{vat},
            #{estTotAmt},
            #{estIss},
            #{regEmpSeq}
        )

        <selectKey keyProperty="EST_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_EST'
        </selectKey>
    </insert>

    <insert id="insEngnEstSub" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_EST_SUB
            (
                EST_SN,
                PROD_NM,
                PROD_CNT,
                UNIT,
                UNIT_AMT,
                SUP_AMT,
                ETC
            )
        VALUES
            (
                #{estSn},
                #{prodNm},
                #{prodCnt},
                #{unit},
                #{unitAmt},
                #{supAmt},
                #{etc}
            )
    </insert>

    <update id="updEstInfo" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_EST
        SET
            EST_TOT_AMT = #{goodsTotAmt}
        WHERE
            EST_SN = #{estSn}
    </update>

    <update id="updProjectStep" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = #{pjtStep},
            PJT_STEP_NM = #{pjtStepNm}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProjectStepDev" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = #{pjtStep},
            PJT_STEP_NM = #{pjtStepNm}
        WHERE
            PJT_SN = (SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PJT_DEV WHERE DEV_SN = #{devSn})
    </update>

    <update id="updProjectEngnStep" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
        MOD_DT = sysdate(),
        MOD_EMP_SEQ = #{regEmpSeq},
        <choose>
            <when test="step == 2">STEP2 = 'Y', STEP3 = 'R'</when>
            <when test="step == 3">STEP3 = 'Y', STEP4 = 'R'</when>
            <when test="step == 4">STEP4 = 'Y', STEP5 = 'R'</when>
            <when test="step == 5">STEP5 = 'Y', STEP6 = 'R'</when>
            <when test="step == 6">STEP6 = 'Y', STEP7 = 'R'</when>
            <when test="step == 7">STEP7 = 'Y', STEP8 = 'R'</when>
            <when test="step == 8">STEP8 = 'Y'</when>
            <otherwise>PJT_SN = #{pjtSn}</otherwise>
        </choose>
        WHERE
        PJT_SN = #{pjtSn}
    </update>

    <select id="getStep1EstList" parameterType="map" resultType="map">
        SELECT
            A.*,
            (SELECT EMP_NAME_KR from CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS EMP_NAME,
            (SELECT COUNT(*) FROM CAM_PJT_MNG.DJ_PJT_EST_SUB WHERE EST_SN = A.EST_SN) AS CNT,
            (SELECT SUM(SUP_AMT) FROM CAM_PJT_MNG.DJ_PJT_EST_SUB WHERE EST_SN = A.EST_SN) AS SUM_AMT
        FROM
            CAM_PJT_MNG.DJ_PJT_EST A
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="getEstSubList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE
            EST_SN = #{estSn}
    </select>

    <select id="getEstData" parameterType="map" resultType="map">
        SELECT
            A.*,
            (SELECT EMP_NAME_KR from CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = 1) AS EMP_NAME
        FROM
            CAM_PJT_MNG.DJ_PJT_EST A
        WHERE 1=1
        <choose>
            <when test='estSn != null and !"".equals(estSn)'>
                AND EST_SN = #{estSn}
            </when>
            <otherwise>
                AND PJT_SN = #{pjtSn}
            </otherwise>
        </choose>
        ORDER BY EST_SN DESC LIMIT 1
    </select>

    <delete id="setEstInfoDel" parameterType="map">
        /* setEstInfoDel */
        DELETE FROM CAM_PJT_MNG.DJ_PJT_EST
        WHERE EST_SN = #{estSn}
    </delete>

    <delete id="delEstSub" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE
            EST_SN = #{estSn}
    </delete>

    <insert id="insStep2" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DELV
        (
        PJT_SN,
        DELV_DE,
        DELV_SUMR,
        DELV_SPEC,
        DELV_ITEM,
        DELV_CNT,
        DELV_UNIT,
        DELV_LOC,
        DELV_MEAN,
        DELV_ASSU,
        DELV_TEST,
        DELV_AMT,
        DELV_DEPT,
        PM_EMP_SEQ,
        PM_EMP_NM,
        REG_EMP_SEQ
        ) VALUES
        (
        #{pjtSn},
        #{delvDe},
        #{delvSumr},
        #{delvSpec},
        #{delvItem},
        #{delvCnt},
        #{delvUnit},
        #{delvLoc},
        #{delvMean},
        #{delvAssu},
        #{delvTest},
        #{delvAmt},
        #{delvDept},
        #{pmEmpSeq},
        #{pmEmpNm},
        #{regEmpSeq}
        )
        <selectKey keyProperty="DELV_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DELV'
        </selectKey>
    </insert>

    <insert id="insStep3" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DEV
        (
            PJT_SN,
            INV_AMT,
            DEP_OBJ,
            ETC,
            REG_EMP_SEQ
        ) VALUES
            (
                #{pjtSn},
                #{invAmt},
                #{depObj},
                #{etc},
                #{regEmpSeq}
            )
    </insert>

    <insert id="insStep4" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS_FILE
        (
            PJT_SN
        )
        VALUES
            (
                #{pjtSn}
            )
    </insert>

    <select id="checkModStep4" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM CAM_PJT_MNG.DJ_PJT_PS_FILE
        WHERE PJT_SN = #{pjtSn}
    </select>

    <!--DUPLICATE-->
    <update id="updProjectDelv" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_AMT = #{delvAmt},
            STR_DT = #{estDe},
            END_EXP_DT = #{delvDe},
            PM = #{pmEmpNm},
            PJT_TMP_CD = #{pjtTmpCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <!-- DUPLICATE -->
    <update id="updProjectDelvFn" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="checkProjectCode" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_SN = #{pjtSn}
          AND
            PJT_CD IS NOT NULL
    </select>

    <select id="getDelvData" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.DEPT_NAME,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD,
            A.STATUS AS DELV_STATUS
        FROM
            CAM_PJT_MNG.DJ_PJT_DELV A
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO B ON A.PM_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE
            PJT_SN = #{pjtSn} ORDER BY DELV_SN DESC LIMIT 1
    </select>

    <select id="getDelvFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DELV_FILE_SN}
    </select>

    <select id="getDevFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DEV_FILE_SN}
    </select>

    <select id="getEstFile" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{EST_FILE_SN}
    </select>

    <select id="groupCodeList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        GROUP BY GRP_SN
    </select>

    <insert id="insGroupCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm}
            )
    </insert>

    <select id="codeList" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            LG_CD IS NOT NULL
          AND
            PJT_CD IS NULL
    </select>

    <select id="selLgCode" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            PJT_CD is null
    </select>

    <select id="selSmCode" resultType="map" parameterType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD is not null
          AND
            LG_CD = #{lgCd}
          AND
            PJT_CD is not null
    </select>

    <insert id="insSetLgCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCode},
                #{lgCodeNm}
            )
    </insert>

    <select id="smCodeList" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CD
        WHERE
            GRP_SN = #{grpSn}
          AND
            LG_CD = #{lgCd}
          AND
            PJT_CD IS NOT NULL
    </select>

    <insert id="insPjtCode" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CD
        (
            GRP_SN,
            GRP_NM,
            LG_CD,
            LG_CD_NM,
            PJT_CD,
            PJT_CD_NM
        )
        VALUES
            (
                #{grpSn},
                #{grpNm},
                #{lgCd},
                #{lgCdNm},
                #{pjtCd},
                #{pjtCdNm}
            )
    </insert>

    <select id="cntProjectCode" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_TMP_CD = #{pjtTmpCd}
    </select>

    <select id="checkModStep1" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_EST
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkModStep2" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DELV
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkModStep3" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <select id="checkAddVersion" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
          AND
            STATUS IN (0, 30, 40)
    </select>

    <select id="getDevPjtVerList" parameterType="map" resultType="map">
        /*getDevPjtVerList*/
        SELECT
            *,
            C.REG_DT AS INV_DT,
            CASE WHEN A.TM_SN IS NULL THEN 'N' ELSE 'Y' END AS TM_YN,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS REG_EMP_NAME,
            D.EMP_NAME_KR AS DEV_REG_EMP_NAME,
            DATE_FORMAT(C.APPROVAL_DATE, '%Y-%m-%d') AS DEV_APP_DE,
            IFNULL((SELECT SUM(EST_TOT_AMT) FROM CAM_PJT_MNG.DJ_PJT_INV WHERE C.DEV_SN = DEV_SN), 0) AS INV_TOT_SUM
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            (SELECT *
             FROM
                 CAM_PJT_MNG.DJ_PJT_EST
             WHERE PJT_SN = #{pjtSn} ORDER BY EST_SN DESC LIMIT 1) B
        ON
            A.PJT_SN = B.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_DEV C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO D
        ON C.REG_EMP_SEQ = D.EMP_SEQ
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON C.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getStep3PmInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_HR.DJ_EMP_INFO
        WHERE
            EMP_SEQ = #{PM_EMP_SEQ}
    </select>

    <insert id="insPjtPs" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS
        (
            PJT_SN,
            DEV_SN,
            PS_ROW,
            PS_PREP,
            PS_PREP_NM,
            PS_NM,
            PS_STR_DE,
            PS_END_DE,
            PS_EMP_SEQ,
            PS_EMP_NM,
            REG_EMP_SEQ
        ) VALUES
        (
            #{pjtSn},
            #{devSn},
            #{psRow},
            #{psPrep},
            #{psPrepNm},
            #{psNm},
            #{psStrDe},
            #{psEndDe},
            #{psEmpSeq},
            #{psEmpNm},
            #{regEmpSeq}
        )
        <selectKey keyProperty="PS_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_PS'
        </selectKey>
    </insert>

    <select id="getProcessList" parameterType="map" resultType="map">
        /*getProcessList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PS
        WHERE
            DEV_SN = #{devSn}
    </select>

    <select id="getProcessList2" parameterType="map" resultType="map">
        /*getProcessList2*/
        SELECT
            GROUP_CONCAT(PS_EMP_NM SEPARATOR ', ') AS GROUP_PS_EMP_NM, A.*
        FROM
            CAM_PJT_MNG.DJ_PJT_PS A
        WHERE
            DEV_SN = #{devSn}
        GROUP BY PS_NM, PS_STR_DE, PS_END_DE, PS_PREP
    </select>

    <update id="updProcess" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_PS
        SET
            PS_ROW = #{psRow}
        WHERE
            PS_SN = #{psSn}
    </update>

    <delete id="delProcess" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_PS
        WHERE
            PS_SN = #{psSn}
    </delete>

    <insert id="insInvData" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_INV
        (
            PJT_SN,
            DEV_SN,
            INV_ROW,
            DIV_CD,
            DIV_NM,
            INV_NM,
            INV_CNT,
            INV_UNIT,
            INV_UNIT_PRICE,
            EST_TOT_AMT,
            EST_OFC,
            INV_ETC,
            REG_EMP_SEQ
        ) VALUES
        (
            #{pjtSn},
            #{devSn},
            #{invRow},
            #{divCd},
            #{divNm},
            #{invNm},
            #{invCnt},
            #{invUnit},
            #{invUnitPrice},
            #{estTotAmt},
            #{estOfc},
            #{invEtc},
            #{regEmpSeq}
        )
        <selectKey keyProperty="INV_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_INV'
        </selectKey>
    </insert>

    <select id="getInvList" parameterType="map" resultType="map">
        SELECT * FROM
            CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            DEV_SN = #{devSn}
    </select>

    <select id="getInvList2" parameterType="map" resultType="map">
        SELECT * FROM
            CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1)
    </select>

    <select id="getTeamInvList" parameterType="map" resultType="map">
        SELECT * FROM
            CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD LEFT JOIN CAM_PJT_MNG.DJ_PROJECT SP ON SPD.PJT_SN = SP.PJT_SN WHERE SPD.PJT_SN = #{pjtSn}
            <if test='ck != null and "1".equals(ck)'>
                AND SPD.STATUS = '100'
            </if>
            <if test='ck != null and "2".equals(ck)'>
                AND SP.DEV_TEAM_CK = 'Y'
            </if>
            ORDER BY SPD.DEV_SN DESC LIMIT 1)
    </select>

    <update id="updInvest" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_INV
        SET
            INV_ROW = #{invRow},
            DIV_CD = #{divCd},
            DIV_NM = #{divNm},
            INV_NM = #{invNm},
            INV_CNT = #{invCnt},
            INV_UNIT = #{invUnit},
            INV_UNIT_PRICE = #{invUnitPrice},
            EST_TOT_AMT = #{estTotAmt},
            EST_OFC = #{estOfc},
            INV_ETC = #{invEtc}
        WHERE
            INV_SN = #{invSn}
    </update>

    <delete id="delInvest" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_INV
        WHERE
            INV_SN = #{invSn}
    </delete>

    <select id="getDevelopPlan" parameterType="map" resultType="map">
        SELECT
            A.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM CAM_PJT_MNG.DJ_PJT_DEV A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE DEV_SN = #{devSn}
        ORDER BY DEV_SN DESC LIMIT 1
    </select>

    <select id="getPjtSnToDev" parameterType="map" resultType="map">
        SELECT MAX(PJT_SN) AS PJT_SN FROM CAM_PJT_MNG.DJ_PJT_DEV
        WHERE DEV_SN = #{devSn}
    </select>

    <select id="getPsList" parameterType="map" resultType="map">
        SELECT
            M.*,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_CODE = M.POSITION_CODE AND CM_GROUP_CODE_ID = 4) AS POSITION_NAME,
            (SELECT LABOR_AMT FROM CAM_PJT_MNG.DJ_PJT_LABOR WHERE POSITION_CD = M.POSITION_CODE) AS LABOR_AMT,
            (SELECT TEAM_COST_AMT FROM CAM_PJT_MNG.DJ_PJT_TEAM_COST WHERE DEPT_CD = M.DEPT_SEQ) AS TEAM_COST_AMT
        FROM
            (SELECT
                 A.*,
                 C.PREP_A_TIME,
                 C.PREP_B_TIME,
                 C.PREP_C_TIME,
                 C.PREP_D_TIME,
                 C.COST_ETC,
                 C.DOC_ID AS COST_DOC_ID,
                 C.STATUS AS COST_STATUS,
                 B.PS_FILE_SN,
                 B.FILE_ETC1,
                 B.FILE_ETC2,
                 B.FILE_ETC3,
                 B.FILE_ETC4,
                 B.FILE_ETC5,
                 B.FILE_ETC6,
                 (SELECT POSITION_CODE FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS POSITION_CODE,
                 (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS EMP_NM,
                 (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS DEPT_SEQ,
                 DI.APPRO_KEY,
                 DI.DOC_MENU_CD
             FROM
                 CAM_PJT_MNG.DJ_PJT_PS A
             LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_PS_FILE B
                 ON
                     A.PJT_SN = B.PJT_SN
                 AND A.DEV_SN = B.DEV_SN
             LEFT JOIN
                 CAM_PJT_MNG.DJ_PJT_COST C
                 ON
                     A.PJT_SN = C.PJT_SN
             LEFT JOIN
                 DJ_CAMTIC.A_DOC_INFO DI
                 ON
                     C.DOC_ID = DI.DOC_ID
             WHERE
                 A.PJT_SN = #{pjtSn}
            ) M
        WHERE
            M.DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1)
    </select>


    <select id="getResultPsMember" parameterType="map" resultType="map">
        /*getResultPsMember*/
        SELECT
            M.*,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_CODE = M.POSITION_CODE AND CM_GROUP_CODE_ID = 4) AS POSITION_NAME,
            (SELECT LABOR_AMT FROM CAM_PJT_MNG.DJ_PJT_LABOR WHERE POSITION_CD = M.POSITION_CODE) AS LABOR_AMT,
            (SELECT TEAM_COST_AMT FROM CAM_PJT_MNG.DJ_PJT_TEAM_COST WHERE DEPT_CD = M.DEPT_SEQ) AS TEAM_COST_AMT
        FROM (
            SELECT
                A.*,
                C.PREP_A_TIME,
                C.PREP_B_TIME,
                C.PREP_C_TIME,
                C.PREP_D_TIME,
                C.COST_ETC,
                C.DOC_ID AS COST_DOC_ID,
                C.STATUS AS COST_STATUS,
                B.PS_FILE_SN,
                B.FILE_ETC1,
                B.FILE_ETC2,
                B.FILE_ETC3,
                B.FILE_ETC4,
                B.FILE_ETC5,
                B.FILE_ETC6,
                (SELECT POSITION_CODE FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS POSITION_CODE,
                (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS EMP_NM,
                (SELECT DEPT_SEQ FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.PS_EMP_SEQ) AS DEPT_SEQ,
                DI.APPRO_KEY,
                DI.DOC_MENU_CD
            FROM
                CAM_PJT_MNG.DJ_PJT_PS A
            LEFT JOIN
                CAM_PJT_MNG.DJ_PJT_PS_FILE B
                ON
                    A.PJT_SN = B.PJT_SN
            LEFT JOIN
                CAM_PJT_MNG.DJ_PJT_COST C
                ON
                    A.PJT_SN = C.PJT_SN
            LEFT JOIN
                DJ_CAMTIC.A_DOC_INFO DI
                ON
                    C.DOC_ID = DI.DOC_ID
            WHERE
                A.PJT_SN = #{pjtSn}
            AND A.DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1)
            AND A.PS_PREP NOT IN (0)
        ) M
        GROUP BY PS_EMP_SEQ
    </select>

    <select id="getPsFile1" parameterType="map" resultType="map">
        /*getPsFile1*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile1"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <select id="getPsFile2" parameterType="map" resultType="map">
        /*getPsFile2*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile2"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <select id="getPsFile3" parameterType="map" resultType="map">
        /*getPsFile3*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile3"
          AND
            CONTENT_ID = #{psFileSn}
    </select>


    <select id="getPsFile4" parameterType="map" resultType="map">
        /*getPsFile4*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile4"
          AND
            CONTENT_ID = #{psFileSn}
    </select>


    <select id="getPsFile5" parameterType="map" resultType="map">
        /*getPsFile5*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile5"
          AND
            CONTENT_ID = #{psFileSn}
    </select>


    <select id="getPsFile6" parameterType="map" resultType="map">
        /*getPsFile6*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_CD = "engnPsFile6"
          AND
            CONTENT_ID = #{psFileSn}
    </select>

    <update id="updStep5" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DELV_DE = #{delvDe},
            PJT_AMT = #{estTotAmt}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updStepEst5" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_EST
        SET
            EST_ISS = #{estIss},
            EST_TOT_AMT = #{estTotAmt}
        WHERE
            EST_SN = #{estSn}
    </update>

    <delete id="delStepEstSub5" parameterType="map">
        DELETE FROM CAM_PJT_MNG.DJ_PJT_EST_SUB
        WHERE EST_SN = #{estSn}
    </delete>

    <select id="checkDelvStat" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_SN = #{pjtSn} AND DELV_STAT = 'Y'
    </select>

    <update id="updEngnCrmInfo" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            CRM_SN = #{crmSn},

            <if test='crmMemSn != null and !"".equals(crmMemSn)'>
                CRM_MEM_SN = #{crmMemSn},
            </if>

            CRM_MEM_TEMP_NM = #{crmReqMem},
            CRM_MEM_TEMP_PH = #{crmPhNum},
            CRM_MEM_TEMP_MAIL = #{crmMail},

            CRM_ETC = #{crmEtc}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProject" parameterType="map">
        /* updProject */
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = #{step}
        WHERE
            PJT_SN = #{pjtSn}
          AND
        <![CDATA[
            PJT_STEP < #{step}
        ]]>
    </update>

    <update id="updEngn" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
            ${stepColumn} = #{stepValue},
            ${nextStepColumn} = #{nextStepValue},
            MOD_DT = now()
        WHERE
            ENGN_SN = #{engnSn} AND ${stepColumn} = 'N'
    </update>

    <update id="updEngnAmt" parameterType="map">
        /** updEngnAmt */
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
            EXP_AMT = IFNULL((SELECT SUM(IF(A.VAT = 'Y', (FLOOR(UNIT_AMT * 10 / 11)) * PROD_CNT, SUP_AMT)) FROM CAM_PJT_MNG.DJ_PJT_EST A LEFT JOIN CAM_PJT_MNG.DJ_PJT_EST_SUB B ON A.EST_SN = B.EST_SN WHERE PJT_SN = #{pjtSn} AND A.EST_SN = (SELECT EST_SN FROM CAM_PJT_MNG.DJ_PJT_EST A WHERE PJT_SN = #{pjtSn} ORDER BY EST_SN DESC LIMIT 1)), 0)
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updLastEngnAmt" parameterType="map">
        /** updLastEngnAmt */
        UPDATE CAM_PJT_MNG.DJ_PJT_ENGN
        SET
            EXP_AMT = IFNULL((SELECT SUM(IF(A.VAT = 'Y', (FLOOR(UNIT_AMT * 10 / 11)) * PROD_CNT, SUP_AMT)) FROM CAM_PJT_MNG.DJ_PJT_EST A LEFT JOIN CAM_PJT_MNG.DJ_PJT_EST_SUB B ON A.EST_SN = B.EST_SN WHERE PJT_SN = #{pjtSn} AND A.EST_SN = (SELECT EST_SN FROM CAM_PJT_MNG.DJ_PJT_EST A WHERE PJT_SN = #{pjtSn} ORDER BY EST_SN DESC LIMIT 1)), 0)
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateDelvApprStat" parameterType="map">
        /* updateDelvApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateDelvFinalApprStat" parameterType="map">
        /* updateDelvFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateDevApprStat" parameterType="map">
        /* updateDevApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updateDevFinalApprStat" parameterType="map">
        /* updateDevFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updateResApprStat" parameterType="map">
        /* updateResApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateResFinalApprStat" parameterType="map">
        /* updateResFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateCostApprStat" parameterType="map">
        /* updateCostApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateCostFinalApprStat" parameterType="map">
        /* updateCostFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getCrmInfo" parameterType="map" resultType="map">
        /*getCrmInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT DP
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_ENGN PE
            ON
                DP.PJT_SN = PE.PJT_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO CI
            ON
                DP.CRM_SN = CI.CRM_SN
        LEFT JOIN
            CAM_CRM.DJ_CRM_MEM DM
            ON
                DP.CRM_MEM_SN = DM.CRM_MEM_SN
        WHERE
            DP.PJT_SN = #{pjtSn}
    </select>

    <select id="getBustInfo" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT HR
                LEFT JOIN
            CAM_INSIDE.DJ_HR_BIZ_REQ HRQ
            ON
                HR.HR_BIZ_REQ_ID = HRQ.HR_BIZ_REQ_ID
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <insert id="insDelvInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DELV
            (
                PJT_SN,
                DELV_EST_DE,
                DELV_DE,
                DELV_CONT,
                DELV_ISSU,
                DELV_ITEM,
            <if test='delvCnt != null and !"".equals(delvCnt)'>
                DELV_CNT,
            </if>
                DELV_UNIT,
                DELV_LOC,
                DELV_AMT,
                DELV_DEPT,
                PM_EMP_SEQ,
                PM_EMP_NM,
                PJT_STR_DT,
                PJT_END_DT,
                DELV_PAY,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtSn},
                #{delvEstDe},
                #{delvDe},
                #{delvCont},
                #{delvIssu},
                #{delvItem},
            <if test='delvCnt != null and !"".equals(delvCnt)'>
                #{delvCnt},
            </if>
                #{delvUnit},
                #{delvLoc},
                #{delvAmt},
                #{delvDept},
                #{pmEmpSeq},
                #{pmEmpNm},
                #{pjtStrDt},
                #{pjtEndDt},
                #{delvPay},
                #{empSeq}
            )
        <selectKey keyProperty="delvSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DELV'
        </selectKey>
    </insert>

    <update id="updDelvInfo" parameterType="map">
        /*updDelvInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            DELV_EST_DE = #{delvEstDe},
            DELV_DE = #{delvDe},
            DELV_CONT = #{delvCont},
            DELV_ISSU = #{delvIssu},
            DELV_ITEM = #{delvItem},
        <if test='delvCnt != null and !"".equals(delvCnt)'>
            DELV_CNT = #{delvCnt},
        </if>
            DELV_UNIT = #{delvUnit},
            DELV_LOC = #{delvLoc},
            DELV_AMT = #{delvAmt},
            DELV_DEPT = #{delvDept},
            PM_EMP_SEQ = #{pmEmpSeq},
            PM_EMP_NM = #{pmEmpNm},
            PJT_STR_DT = #{pjtStrDt},
            PJT_END_DT = #{pjtEndDt},
            DELV_PAY = #{delvPay},
            <!-- PJT_AMT = #{delvAmt},
            STR_DT = #{estDe},
            END_EXP_DT = #{delvDe},
            PM = #{pmEmpNm},
            PM_EMP_SEQ = #{pmEmpSeq},-->
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            DELV_SN = #{delvSn}
    </update>

    <insert id="insDevInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DEV
        (
        PJT_SN,
        INV_AMT,
        DEP_OBJ,
        ETC,
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        #{invAmt},
        #{depObj},
        #{etc},
        #{regEmpSeq}
        )
        <selectKey keyProperty="devSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DEV'
        </selectKey>
    </insert>

    <update id="updDevInfo" parameterType="map">
        /*updDevInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            INV_AMT = #{invAmt},
            DEP_OBJ = #{depObj},
            ETC = #{etc},
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updDevInfoAmt" parameterType="map">
        /*updDevInfoAmt*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            INV_AMT = IFNULL((SELECT SUM(EST_TOT_AMT) FROM CAM_PJT_MNG.DJ_PJT_INV WHERE DEV_SN = #{devSn}), 0)
        WHERE
            DEV_SN = #{devSn}
    </update>

    <delete id="setDevInfoDel" parameterType="map">
        /*setDevInfoDel*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            DEV_SN = #{devSn}
    </delete>

    <update id="updProjectTmpCode" parameterType="map">
        /*updProjectTmpCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_TMP_CD = #{pjtTmpCd}
        <if test='regEmpName != null and !"".equals(regEmpName)'>
            , DELV_APPROVE_EMP_NAME = #{regEmpName}
        </if>
        <if test='"100".equals(status)'>
            , DELV_STAT = 'Y'
        </if>
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updDelvApproveStat" parameterType="map">
        /*updDelvApproveStat*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DELV_APPROVE_STAT = #{stat}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateProjectCode" parameterType="map">
        /*updateProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = PJT_TMP_CD
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updInv" parameterType="map">
        /*updInv*/
        UPDATE CAM_PJT_MNG.DJ_PJT_INV
        SET
            DEV_SN = #{devSn}
        WHERE
            PJT_SN = #{pjtSn} AND DEV_SN IS NULL
    </update>

    <update id="updPs" parameterType="map">
        /*updPs*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PS
        SET
            DEV_SN = #{devSn}
        WHERE
            PJT_SN = #{pjtSn} AND DEV_SN IS NULL
    </update>

    <select id="getDevData" parameterType="map" resultType="map">
        /*getDevData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            PJT_SN = #{pjtSn}
        <if test='"Y".equals(lastCk)'>
            AND STATUS IN (100, 101)
        </if>
        ORDER BY DEV_SN DESC LIMIT 1
    </select>

    <update id="stopProject" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STOP = "Y",
            PJT_STOP_RS = #{pjtStopRs}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPsPrepInfo" parameterType="map" resultType="map">
        /*getPsPrepInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_PS_FILE
        WHERE
            PJT_SN = #{pjtSn}
        AND DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1)
    </select>

    <insert id="insPsPrepInfo" parameterType="map">
        /*insPsPrepInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PS_FILE
            (
                PJT_SN,
                DEV_SN,
                FILE_ETC1,
                FILE_ETC2,
                FILE_ETC3,
                FILE_ETC4,
                FILE_ETC5,
                FILE_ETC6
            )
        VALUES
            (
                #{pjtSn},
                (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1),
                #{fileEtc1},
                #{fileEtc2},
                #{fileEtc3},
                #{fileEtc4},
                #{fileEtc5},
                #{fileEtc6}
            )
        <selectKey keyProperty="psFileSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_PS_FILE'
        </selectKey>
    </insert>

    <insert id="updPsPrepInfo" parameterType="map">
        /*updPsPrepInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PS_FILE
        SET
            FILE_ETC1 = #{fileEtc1},
            FILE_ETC2 = #{fileEtc2},
            FILE_ETC3 = #{fileEtc3},
            FILE_ETC4 = #{fileEtc4},
            FILE_ETC5 = #{fileEtc5},
            FILE_ETC6 = #{fileEtc6}
        WHERE
            PS_FILE_SN = #{psFileSn}
        AND DEV_SN = (SELECT SPD.DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = #{pjtSn} ORDER BY SPD.DEV_SN DESC LIMIT 1)
    </insert>

    <update id="updGoodInfo" parameterType="map">
        /*updGoodInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            <if test='delvDe != null and !"".equals(delvDe)'>
                DELV_DE = #{delvDe},
                GOODS_DT = #{delvDe},
            </if>
            GOODS_ISS = #{goodsIss}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getResultInfo" parameterType="map" resultType="map">
        /*getResultInfo*/
        SELECT
            A.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_PJT_MNG.DJ_PJT_RESULT A
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insResultInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_RESULT
        (
        PJT_SN,
        PROTOTYPE,
        SUP_CONT,
        RS_ISS,
        RS_ETC,
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            DELV_PREP_A,
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            DELV_PREP_B,
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            DELV_PREP_C,
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            INV_PREP_A,
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            INV_PREP_B,
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            INV_PREP_C,
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            PREP_A,
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            PREP_B,
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            PREP_C,
        </if>
        RS_STR_DT,
        RS_END_DT,
        RS_ACT_EQUIP,
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        #{prototype},
        #{supCont},
        #{rsIss},
        #{rsEtc},
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            #{delvPrepA},
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            #{delvPrepB},
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            #{delvPrepC},
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            #{invPrepA},
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            #{invPrepB},
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            #{invPrepC},
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            #{prepA},
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            #{prepB},
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            #{prepC},
        </if>
        #{rsStrDt},
        #{rsEndDt},
        #{rsActEquip},
        #{empSeq}
        )
        <selectKey keyProperty="rsSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_RESULT'
        </selectKey>
    </insert>

    <insert id="insPerformanceInfo" parameterType="map">
        INSERT INTO CAM_PJT_MNG.DJ_PJT_RESULT
        (
        PJT_SN,
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            DELV_PREP_A,
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            DELV_PREP_B,
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            DELV_PREP_C,
        </if>
        <if test='delvPrepD != null and !"".equals(delvPrepD)'>
            DELV_PREP_D,
        </if>
        <if test='delvPrepE != null and !"".equals(delvPrepE)'>
            DELV_PREP_E,
        </if>
        <if test='delvPrepF != null and !"".equals(delvPrepF)'>
            DELV_PREP_F,
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            INV_PREP_A,
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            INV_PREP_B,
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            INV_PREP_C,
        </if>
        <if test='invPrepD != null and !"".equals(invPrepD)'>
            INV_PREP_D,
        </if>
        <if test='invPrepE != null and !"".equals(invPrepE)'>
            INV_PREP_E,
        </if>
        <if test='invPrepF != null and !"".equals(invPrepF)'>
            INV_PREP_F,
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            PREP_A,
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            PREP_B,
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            PREP_C,
        </if>
        <if test='prepD != null and !"".equals(prepD)'>
            PREP_D,
        </if>
        <if test='prepE != null and !"".equals(prepE)'>
            PREP_E,
        </if>
        <if test='prepF != null and !"".equals(prepF)'>
            PREP_F,
        </if>
        REG_EMP_SEQ
        )
        VALUES
        (
        #{pjtSn},
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            #{delvPrepA},
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            #{delvPrepB},
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            #{delvPrepC},
        </if>
        <if test='delvPrepD != null and !"".equals(delvPrepD)'>
            #{delvPrepD},
        </if>
        <if test='delvPrepE != null and !"".equals(delvPrepE)'>
            #{delvPrepE},
        </if>
        <if test='delvPrepF != null and !"".equals(delvPrepF)'>
            #{delvPrepF},
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            #{invPrepA},
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            #{invPrepB},
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            #{invPrepC},
        </if>
        <if test='invPrepD != null and !"".equals(invPrepD)'>
            #{invPrepD},
        </if>
        <if test='invPrepE != null and !"".equals(invPrepE)'>
            #{invPrepE},
        </if>
        <if test='invPrepF != null and !"".equals(invPrepF)'>
            #{invPrepF},
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            #{prepA},
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            #{prepB},
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            #{prepC},
        </if>
        <if test='prepD != null and !"".equals(prepD)'>
            #{prepD},
        </if>
        <if test='prepE != null and !"".equals(prepE)'>
            #{prepE},
        </if>
        <if test='prepF != null and !"".equals(prepF)'>
            #{prepF},
        </if>
        #{empSeq}
        )
        <selectKey keyProperty="rsSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_RESULT'
        </selectKey>
    </insert>

    <update id="updResultInfo" parameterType="map">
        /*updResultInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
        PROTOTYPE = #{prototype},
        SUP_CONT = #{supCont},
        RS_ISS = #{rsIss},
        RS_ETC = #{rsEtc},
        RS_STR_DT = #{rsStrDt},
        RS_END_DT = #{rsEndDt},
        RS_ACT_EQUIP = #{rsActEquip},
        MOD_EMP_SEQ = #{empSeq}
        WHERE
        RS_SN = #{rsSn}
    </update>

    <update id="setPerformanceInfo" parameterType="map">
        /*setPerformanceInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
        <if test='delvPrepA != null and !"".equals(delvPrepA)'>
            DELV_PREP_A = #{delvPrepA},
        </if>
        <if test='delvPrepB != null and !"".equals(delvPrepB)'>
            DELV_PREP_B = #{delvPrepB},
        </if>
        <if test='delvPrepC != null and !"".equals(delvPrepC)'>
            DELV_PREP_C = #{delvPrepC},
        </if>
        <if test='delvPrepD != null and !"".equals(delvPrepD)'>
            DELV_PREP_D = #{delvPrepD},
        </if>
        <if test='delvPrepE != null and !"".equals(delvPrepE)'>
            DELV_PREP_E = #{delvPrepE},
        </if>
        <if test='delvPrepF != null and !"".equals(delvPrepF)'>
            DELV_PREP_F = #{delvPrepF},
        </if>
        <if test='invPrepA != null and !"".equals(invPrepA)'>
            INV_PREP_A = #{invPrepA},
        </if>
        <if test='invPrepB != null and !"".equals(invPrepB)'>
            INV_PREP_B = #{invPrepB},
        </if>
        <if test='invPrepC != null and !"".equals(invPrepC)'>
            INV_PREP_C = #{invPrepC},
        </if>
        <if test='invPrepD != null and !"".equals(invPrepD)'>
            INV_PREP_D = #{invPrepD},
        </if>
        <if test='invPrepE != null and !"".equals(invPrepE)'>
            INV_PREP_E = #{invPrepE},
        </if>
        <if test='invPrepF != null and !"".equals(invPrepF)'>
            INV_PREP_F = #{invPrepF},
        </if>
        <if test='prepA != null and !"".equals(prepA)'>
            PREP_A = #{prepA},
        </if>
        <if test='prepB != null and !"".equals(prepB)'>
            PREP_B = #{prepB},
        </if>
        <if test='prepC != null and !"".equals(prepC)'>
            PREP_C = #{prepC},
        </if>
        <if test='prepD != null and !"".equals(prepD)'>
            PREP_D = #{prepD},
        </if>
        <if test='prepE != null and !"".equals(prepE)'>
            PREP_E = #{prepE},
        </if>
        <if test='prepF != null and !"".equals(prepF)'>
            PREP_F = #{prepF},
        </if>
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <update id="updResultDevFile" parameterType="map">
        /*updResultDevFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            DEV_FILE_SN = #{file_no}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <update id="updResultDesignFile" parameterType="map">
        /*updResultDesignFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            DSGN_FILE_SN = #{file_no}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <update id="updResultProdFile" parameterType="map">
        /*updResultProdFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            PROD_FILE_SN = #{file_no}
        WHERE
            RS_SN = #{rsSn}
    </update>

    <select id="getGoodsFile" parameterType="map" resultType="map">
        /*getGoodsFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DEV_FILE_SN}
    </select>

    <select id="getDesignFile" parameterType="map" resultType="map">
        /*getDesignFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{DSGN_FILE_SN}
    </select>

    <select id="getProdFile" parameterType="map" resultType="map">
        /*getProdFile*/
        SELECT
            *
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE
            FILE_NO = #{PROD_FILE_SN}
    </select>

    <update id="updDelvFile" parameterType="map">
        /*updDelvFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            DELV_FILE_SN = #{file_no}
        WHERE
            DELV_SN = #{delvSn}
    </update>

    <update id="updDevFile" parameterType="map">
        /*updDevFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            DEV_FILE_SN = #{file_no}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="updDevEstFile" parameterType="map">
        /*updDevEstFile*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            EST_FILE_SN = #{file_no}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <update id="setFileDocNm" parameterType="map">
        /* setFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
    </update>

    <update id="setDelvFileDocNm" parameterType="map">
        /* setDelvFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
          AND file_cd = 'delvFile'
    </update>

    <insert id="setFileCopy" parameterType="map">
        /* setFileCopy */
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            DOC_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            #{docId},
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE FILE_NO = #{fileNo}
    </insert>

    <insert id="setDelvFileCopy" parameterType="map">
        /* setDelvFileCopy */
        INSERT INTO CAM_COMMON.DJ_FILE_INFO
        (
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            DOC_ID,
            FR_KEY,
            REG_EMP_SEQ
        )
        SELECT
            FILE_CD,
            FILE_UUID,
            FILE_ORG_NAME,
            FILE_PATH,
            FILE_DOWN_PATH,
            FILE_SIZE,
            FILE_EXT,
            EMP_SEQ,
            CONTENT_ID,
            #{docId},
            FR_KEY,
            REG_EMP_SEQ
        FROM
            CAM_COMMON.DJ_FILE_INFO
        WHERE FILE_NO = #{fileNo}
          AND FILE_CD = 'delvFile'
    </insert>

    <update id="setDevFileDocNm" parameterType="map">
        /* setDevFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no in (${fileNo})
          AND file_cd in ('devEstFile', 'devFile')
    </update>

    <update id="setPsFileDocNm" parameterType="map">
        /* setPsFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{file_no}
          AND file_cd = #{file_cd}
    </update>

    <update id="setResultFileDocNm" parameterType="map">
        /* setResultFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
          AND file_cd = 'engnRsFile'
    </update>

    <update id="setPurcFileDocNm" parameterType="map">
        /* setPurcFileDocNm */
        UPDATE CAM_COMMON.DJ_FILE_INFO
        SET
            DOC_ID = #{docId}
        WHERE
            file_no = #{fileNo}
          AND file_cd = 'manage'
    </update>

    <insert id="insTeamInfo" parameterType="map">
        /*insTeamInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_TEAM
            (
                PJT_SN,
                TM_DEPT_SEQ,
                TM_TEAM_SEQ,
                TM_PM_SEQ,
            <if test='tmCrmSn != null and !"".equals(tmCrmSn)'>
                TM_CRM_SN,
            </if>
                TM_AMT,
                TM_BALANCE,
                TM_EXPT_PROFIT,
                TM_EXPT_PER,
                TM_EXPT_COST
            )
        VALUES
            (
                #{pjtSn},
                #{tmDeptSeq},
                #{tmTeamSeq},
                #{tmPMSeq},
            <if test='tmCrmSn != null and !"".equals(tmCrmSn)'>
                #{tmCrmSn},
            </if>
                #{tmAmt},
                #{tmBalance},
                #{tmExptProfit},
                #{tmExptPer},
                #{tmExptCost}
            )

        <selectKey keyProperty="tmSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_TEAM'
        </selectKey>
    </insert>

    <update id="updTeamProject" parameterType="map">
        /*updTeamProject*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            TM_SN = #{tmSn},
            EMP_SEQ = #{tmPMSeq},
            EMP_NAME = (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = #{tmPMSeq}),
            DEPT_SEQ = #{tmTeamSeq},
            DEPT_NAME = (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = #{tmTeamSeq})
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <insert id="insTeamProject" parameterType="map">
        /*insTeamProject*/
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
            (
                EMP_SEQ,
                EMP_NAME,
                DEPT_SEQ,
                DEPT_NAME,
                BUSN_CLASS,
                BUSN_NM,
                TEAM_STAT,
                PNT_PJT_SN,
                SBJ_CLASS,
                SBJ_CHAR,
                SBJ_DEP,
                SBJ_DEP_SUB,
                SBJ_SEP,
                SBJ_STAT_YN,
                PJT_CON_YEAR,
                PJT_CD,
                PJT_TMP_CD,
                BS_TITLE,
                PJT_NM,
                PJT_STEP,
                PJT_STEP_NM,
                CRM_SN,
                CRM_MEM_SN,
                CRM_MEM_TEMP_NM,
                CRM_CON_SN,
                CRM_PART_SN,
                PM_EMP_SEQ,
                PM,
                PJT_AMT,
                PJT_EXP_AMT,
                CONSULT_DT,
                STR_DT,
                ACTIVE,
                REG_EMP_SEQ,
                REG_DT
            )
            (SELECT
                EMP_SEQ,
                EMP_NAME,
                DEPT_SEQ,
                DEPT_NAME,
                BUSN_CLASS,
                BUSN_NM,
                "Y" AS TEAM_STAT,
                #{pjtSn} AS PNT_PJT_SN,
                SBJ_CLASS,
                SBJ_CHAR,
                SBJ_DEP,
                SBJ_DEP_SUB,
                SBJ_SEP,
                SBJ_STAT_YN,
                PJT_CON_YEAR,
                PJT_CD,
                PJT_TMP_CD,
                BS_TITLE,
                CONCAT("[협업] ", PJT_NM) AS PJT_NM,
                PJT_STEP,
                PJT_STEP_NM,
                CRM_SN,
                CRM_MEM_SN,
                CRM_MEM_TEMP_NM,
                CRM_CON_SN,
                CRM_PART_SN,
                #{tmPMSeq} AS TM_PM_SEQ,
                IFNULL((SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = #{tmPMSeq}), '') AS TM_EMP_NAME,
                #{tmAmt},
                #{tmAmt},
                CONSULT_DT,
                NOW(),
                ACTIVE,
                REG_EMP_SEQ,
                REG_DT
            FROM CAM_PJT_MNG.DJ_PROJECT
            WHERE PJT_SN = #{pjtSn})
        <selectKey keyProperty="PJT_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
        </selectKey>
    </insert>

    <select id="getTeamList" parameterType="map" resultType="map">
        SELECT
            A.*,
            B.*,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE HDI.PARENT_DEPT_SEQ = DI.DEPT_SEQ) ELSE HEI.DEPT_NAME END AS DEPT_NAME,
            CASE WHEN HDI.DEPT_LEVEL = 2 THEN HEI.DEPT_NAME ELSE "" END AS TEAM_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.TM_PM_SEQ) AS EMP_NAME,
            (SELECT CRM_NM FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.TM_CRM_SN) AS CRM_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_TEAM A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B ON A.PJT_SN = B.PJT_SN
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI ON A.TM_PM_SEQ = HEI.EMP_SEQ
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO HDI ON HEI.DEPT_SEQ = HDI.DEPT_SEQ
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getBustResInfo" parameterType="map" resultType="map">
        SELECT
            (SELECT COUNT(-1) FROM CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT WHERE PJT_SN = #{pjtSn}) AS COUNT,
            IFNULL(SUM(REPLACE(TOT_COST, ',', '')), 0) AS BUSTRIP_EXNP_SUM
        FROM
            CAM_INSIDE.DJ_HR_BIZ_REQ_RESULT BRR
        LEFT JOIN CAM_INSIDE.DJ_HR_BIZ_EXNP BE ON BRR.HR_BIZ_REQ_RESULT_ID = BE.HR_BIZ_REQ_RESULT_ID
        WHERE PJT_SN = #{pjtSn}
        AND BRR.STATUS = '100'

    </select>

    <select id="getTeamInfo" parameterType="map" resultType="map">
        SELECT
            A.*,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.TM_DEPT_SEQ) AS DEPT_NAME,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.TM_TEAM_SEQ) AS TEAM_NAME,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.TM_PM_SEQ) AS EMP_NAME,
            (SELECT CRM_NM FROM CAM_CRM.DJ_CRM_INFO WHERE CRM_SN = A.TM_CRM_SN) AS CRM_NM,
            (SELECT PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PNT_PJT_SN = A.PJT_SN limit 1) AS PNT_PJT_SN
        FROM
            CAM_PJT_MNG.DJ_PJT_TEAM A
        WHERE
            A.PJT_SN = #{pjtSn}
        ORDER BY A.TM_SN DESC LIMIT 1
    </select>

    <select id="getCostData" parameterType="map" resultType="map">
        /*getCostData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_COST
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <insert id="insCostInfo" parameterType="map">
        /*insCostInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_COST
        (
            PJT_SN,
            PREP_A_TIME,
            PREP_B_TIME,
            PREP_C_TIME,
            PREP_D_TIME,
            COST_ETC,
            REG_EMP_SEQ
        )
        VALUES
            (
                #{pjtSn},
                #{prepATime},
                #{prepBTime},
                #{prepCTime},
                #{prepDTime},
                #{costEtc},
                #{empSeq}
            )
    </insert>

    <update id="updCostInfo" parameterType="map">
        /*updCostInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_COST
        SET
            PREP_A_TIME = #{prepATime},
            PREP_B_TIME = #{prepBTime},
            PREP_C_TIME = #{prepCTime},
            PREP_D_TIME = #{prepDTime},
            COST_ETC = #{costEtc},
            MOD_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getProjectDocInfo" parameterType="map" resultType="map">
        SELECT
            A.*,
            IFNULL(DELV.DOC_ID, '') AS DELV_DOC_ID,
            DELVDI.APPRO_KEY AS DELV_APPRO_KEY,
            DELVDI.DOC_MENU_CD AS DELV_DOC_MENU_CD,

            IFNULL(DELVRND.DOC_ID, '') AS DELV_RND_DOC_ID,
            DELVRNDDI.APPRO_KEY AS DELV_RND_APPRO_KEY,
            DELVRNDDI.DOC_MENU_CD AS DELV_RND_DOC_MENU_CD,

            IFNULL(DELVUNRND.DOC_ID, '') AS DELV_UNRND_DOC_ID,
            DELVUNRNDDI.APPRO_KEY AS DELV_UNRND_APPRO_KEY,
            DELVUNRNDDI.DOC_MENU_CD AS DELV_UNRND_DOC_MENU_CD,

            IFNULL(DEV.DOC_ID, '') AS DEV_DOC_ID,
            DEVDI.APPRO_KEY AS DEV_APPRO_KEY,
            DEVDI.DOC_MENU_CD AS DEV_DOC_MENU_CD,

            IFNULL(RESULT.DOC_ID, '') AS RESULT_DOC_ID,
            RESULTDI.APPRO_KEY AS RESULT_APPRO_KEY,
            RESULTDI.DOC_MENU_CD AS RESULT_DOC_MENU_CD,

            IFNULL(COST.DOC_ID, '') AS COST_DOC_ID,
            COSTDI.APPRO_KEY AS COST_APPRO_KEY,
            COSTDI.DOC_MENU_CD AS COST_DOC_MENU_CD

        FROM CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN B ON A.PJT_SN = B.PJT_SN AND B.ACTIVE = "Y"

        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DELV DELV ON A.PJT_SN = DELV.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RND DELVRND ON A.PJT_SN = DELVRND.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_UNRND DELVUNRND ON A.PJT_SN = DELVUNRND.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_DEV DEV ON A.PJT_SN = DEV.PJT_SN AND DEV_SN = (SELECT DEV_SN FROM CAM_PJT_MNG.DJ_PJT_DEV SPD WHERE SPD.PJT_SN = A.PJT_SN AND SPD.STATUS = '100' ORDER BY SPD.DEV_SN DESC LIMIT 1)
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT RESULT ON A.PJT_SN = RESULT.PJT_SN
        LEFT JOIN CAM_PJT_MNG.DJ_PJT_COST COST ON A.PJT_SN = COST.PJT_SN

        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DELVDI ON DELV.DOC_ID = DELVDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DELVRNDDI ON DELVRND.DOC_ID = DELVRNDDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DELVUNRNDDI ON DELVUNRND.DOC_ID = DELVUNRNDDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO DEVDI ON DEV.DOC_ID = DEVDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO RESULTDI ON RESULT.DOC_ID = RESULTDI.DOC_ID
        LEFT JOIN DJ_CAMTIC.A_DOC_INFO COSTDI ON COST.DOC_ID = COSTDI.DOC_ID

        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="addDevVersion" parameterType="map">
        /*addDevVersion*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_DEV
        (
            PJT_SN,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{empSeq}
        )
        <selectKey keyProperty="devSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_DEV'
        </selectKey>
    </insert>

    <update id="setDevTeamApp" parameterType="map">
        /*setDevTeamApp*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DEV_TEAM_CK = #{stat}
        WHERE
            PJT_SN = #{pjtSn} OR PJT_SN = (SELECT PNT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
    </update>

    <update id="setPjtTeamApp" parameterType="map">
        /*setPjtTeamApp*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_TEAM_CK = 'Y'
        WHERE
            PJT_SN = #{pjtSn} OR PJT_SN = (SELECT PNT_PJT_SN FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
    </update>

    <update id="updPjtDevTotAmt" parameterType="map">
        /*updPjtDevTotAmt*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DEV
        SET
            INV_AMT = #{totAmt}
        WHERE
            DEV_SN = #{devSn}
    </update>

    <select id="getPartRateVersionList" parameterType="map" resultType="map">
        /*getPartRateVersionList*/
        SELECT
            A.*,
            B.YEAR_CLASS,
            B.PJT_NM,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS STR_DT,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DT,
            DATE_FORMAT(A.REQ_DATE, '%Y-%m-%d') AS REQ_DT,
            (SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN) AS NOW_STR_DE_RND,
            (SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN) AS NOW_END_DE_RND,
            (SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN) AS NOW_STR_DE_UNRND,
            (SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN) AS NOW_END_DE_UNRND,
            B.BUSN_NM,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
        WHERE
            1 = 1
        <if test='busnClass != null and !"".equals(busnClass)'>
            AND
                B.BUSN_CLASS = #{busnClass}
        </if>
        <if test='status != null and !"".equals(status)'>
            AND
                A.MNG_STAT = #{status}
        </if>
        <if test='pjtNm != null and !"".equals(pjtNm)'>
            AND
                PJT_NM LIKE CONCAT('%', #{pjtNm}, '%')
        </if>
            AND B.ACTIVE = 'Y' AND B.PJT_STOP = 'N'
        ORDER BY PART_RATE_VER_SN DESC
    </select>

    <select id="getPartRateVer" parameterType="map" resultType="map">
        /*getPartRateVer*/
        SELECT
            A.*,
            B.YEAR_CLASS,
            B.PJT_NM,
            (SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN) AS NOW_STR_DE_RND,
            (SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_RND WHERE PJT_SN = A.PJT_SN) AS NOW_END_DE_RND,
            (SELECT NOW_STR_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN) AS NOW_STR_DE_UNRND,
            (SELECT NOW_END_DE FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN) AS NOW_END_DE_UNRND,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS STR_DT,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DT,
            DATE_FORMAT(A.REQ_DATE, '%Y-%m-%d') AS REQ_DT,
            (SELECT LG_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" LIMIT 1) AS SBJ_DEP_NM,
            (SELECT PJT_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" AND PJT_CD = B.SBJ_DEP_SUB) AS SBJ_DEP_SUB_NM,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 37 AND CM_CODE = B.SBJ_CHAR) AS SBJ_CHAR_NM,
            B.BUSN_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        WHERE 1=1
        <choose>
            <when test='partRateVerSn != null and !"".equals(partRateVerSn)'>
                AND PART_RATE_VER_SN = #{partRateVerSn}
            </when>
            <otherwise>
                AND A.PJT_SN = #{pjtSn}
                AND A.MNG_STAT = CASE WHEN (select mng_stat from cam_pjt_mng.dj_pjt_part_rate_ver where PJT_SN = #{pjtSn} order by part_rate_ver_sn desc limit 1) = 'S' THEN 'S'
                WHEN (select mng_stat from cam_pjt_mng.dj_pjt_part_rate_ver where PJT_SN = #{pjtSn} order by part_rate_ver_sn desc limit 1) = 'C' THEN 'C'
                ELSE 'R'
                END
                ORDER BY PART_RATE_VER_SN DESC
                LIMIT 1
            </otherwise>
        </choose>
    </select>

    <select id="getPartRateBefVer" parameterType="map" resultType="map">
        /*getPartRateBefVer*/
        SELECT
            A.*,
            B.PJT_NM,
            DATE_FORMAT(B.STR_DT, '%Y-%m-%d') AS STR_DT,
            DATE_FORMAT(B.END_DT, '%Y-%m-%d') AS END_DT,
            DATE_FORMAT(A.REQ_DATE, '%Y-%m-%d') AS REQ_DT,
            (SELECT LG_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" LIMIT 1) AS SBJ_DEP_NM,
            (SELECT PJT_CD_NM FROM CAM_PJT_MNG.DJ_PJT_CD WHERE LG_CD = B.SBJ_DEP AND GRP_SN = "SUP_DEP" AND PJT_CD = B.SBJ_DEP_SUB) AS SBJ_DEP_SUB_NM,
            (SELECT CM_CODE_NM FROM CAM_COMMON.DJ_COM_CODE WHERE CM_GROUP_CODE_ID = 37 AND CM_CODE = B.SBJ_CHAR) AS SBJ_CHAR_NM,
            B.BUSN_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
            LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT B
        ON
            A.PJT_SN = B.PJT_SN
        WHERE
            A.PJT_SN = (SELECT PJT_SN AS PART_RATE_VER FROM CAM_PJT_MNG.DJ_PJT_PART_RATE_VER WHERE PART_RATE_VER_SN = #{partRateVerSn})
        AND A.PART_RATE_VER = (SELECT PART_RATE_VER-1 AS PART_RATE_VER FROM CAM_PJT_MNG.DJ_PJT_PART_RATE_VER WHERE PART_RATE_VER_SN = #{partRateVerSn})
    </select>

    <select id="getProjectManagerInfo" parameterType="map" resultType="map"><![CDATA[
        /*getProjectManagerInfo*/
        SELECT
            A.*,
            B.*,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            D.CHNG_SAL,
            D.PART_DET_STR_DT,
            D.PART_DET_END_DT,
            D.PART_EMP_NM,
            D.PART_EMP_SEQ,
            D.PAY_RATE,
            D.ITEM_RATE,
            D.MON_SAL,
            D.MON_DIFF,
            D.TOT_PAY_BUDG,
            D.TOT_ITEM_BUDG,
            D.TOT_RATE,
            D.PAY_TOTAL
        FROM
            CAM_PJT_MNG.DJ_PJT_RND A
        LEFT JOIN
            (SELECT
                *
            FROM
                CAM_INSIDE.DJ_SALARY_MANAGE
            WHERE
                (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN}) BETWEEN DATE(START_DT) AND IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31'))
            ) B
        ON
            A.MNG_EMP_SEQ = B.EMP_SEQ
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PART_RATE_DET D
        ON
            D.PART_RATE_VER_SN = #{PART_RATE_VER_SN} AND D.PART_EMP_SEQ = A.MNG_EMP_SEQ AND D.PJT_SN = #{PJT_SN}
        WHERE A.PJT_SN = #{PJT_SN}
        limit 1
        ]]>
    </select>

    <select id="getProjectUnRndManagerInfo" parameterType="map" resultType="map"><![CDATA[
        /*getProjectUnRndManagerInfo*/
        SELECT
            A.*,
            B.*,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            D.CHNG_SAL,
            D.PART_DET_STR_DT,
            D.PART_DET_END_DT,
            D.PART_EMP_NM,
            D.PART_EMP_SEQ,
            D.PAY_RATE,
            D.ITEM_RATE,
            D.MON_SAL,
            D.MON_DIFF,
            D.TOT_PAY_BUDG,
            D.TOT_ITEM_BUDG,
            D.TOT_RATE,
            D.PAY_TOTAL
        FROM
            CAM_PJT_MNG.DJ_PJT_UNRND A
        LEFT JOIN
            (SELECT
                 *
             FROM
                 CAM_INSIDE.DJ_SALARY_MANAGE
             WHERE
                (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN}) BETWEEN DATE(START_DT) AND IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31'))
            ) B
        ON
            A.MNG_EMP_SEQ = B.EMP_SEQ
            LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
            ON
            A.PJT_SN = C.PJT_SN
            LEFT JOIN
            CAM_PJT_MNG.DJ_PART_RATE_DET D
            ON
            D.PART_RATE_VER_SN = #{PART_RATE_VER_SN} AND D.PART_EMP_SEQ = A.MNG_EMP_SEQ AND D.PJT_SN = #{PJT_SN}
        WHERE A.PJT_SN = #{PJT_SN}
            limit 1
        ]]>
    </select>

    <select id="getProjectMemberInfo" parameterType="map" resultType="map">
        /*getProjectMemberInfo*/
        SELECT
            A.*,
            B.*,
            HEI.JOIN_DAY,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            D.CHNG_SAL,
            D.PART_DET_STR_DT,
            D.PART_DET_END_DT,
            D.PART_EMP_NM,
            D.PART_EMP_SEQ,
            CASE WHEN HEI.DUTY_NAME IS NULL THEN HEI.POSITION_NAME ELSE HEI.DUTY_NAME END AS POSITION_NAME,
            D.PAY_RATE,
            D.ITEM_RATE,
            D.MON_SAL,
            D.MON_DIFF,
            D.TOT_PAY_BUDG,
            D.TOT_ITEM_BUDG,
            D.TOT_RATE,
            D.PAY_TOTAL,
            D.GUBUN,
            D.PART_RATE_DET
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
        LEFT JOIN
            (SELECT
                 SM.*,
                 RS.NATIONAL_PENSION,
                 RS.LIMIT_AMT,
                 RS.HEALTH_INSURANCE,
                 RS.LONG_CARE_INSURANCE,
                 RS.EMPLOY_INSURANCE,
                 RS.ACCIDENT_INSURANCE
             FROM
                 CAM_INSIDE.DJ_SALARY_MANAGE SM
             JOIN
                 CAM_INSIDE.DJ_SOCIAL_RATE RS
             ON
                 SM.SOCIAL_RATE_SN = RS.SOCIAL_RATE_SN
             WHERE
                 IF((SELECT REPLACE(STR_DT , "-", "") FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN}) BETWEEN DATE(REPLACE(SM.START_DT , "-", "")) AND IFNULL(IF(DATE(REPLACE(SM.END_DT , "-", "")) = "", null, DATE(REPLACE(SM.END_DT , "-", ""))), DATE('9999-12-31')) = "",
                  (SM.EMP_SEQ = #{MEMBER_SEQ}) AND SM.SALARY_SN = ((SELECT SALARY_SN FROM CAM_INSIDE.DJ_SALARY_MANAGE WHERE EMP_SEQ = SM.EMP_SEQ ORDER BY DATE(SM.END_DT) DESC LIMIT 1)),
                    (SELECT REPLACE(STR_DT , "-", "") FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN}) BETWEEN DATE(REPLACE(SM.START_DT , "-", "")) AND IFNULL(IF(DATE(REPLACE(SM.END_DT , "-", "")) = "", null, DATE(REPLACE(SM.END_DT , "-", ""))), DATE('9999-12-31'))
                 )
            ) B
        ON
            B.EMP_SEQ = #{MEMBER_SEQ}
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PART_RATE_DET D
        ON
            A.PART_RATE_VER_SN = D.PART_RATE_VER_SN AND D.PART_EMP_SEQ = #{MEMBER_SEQ} AND D.PJT_SN = #{PJT_SN}
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO HEI
        ON HEI.EMP_SEQ = #{MEMBER_SEQ}
        WHERE A.PJT_SN = #{PJT_SN} AND A.PART_RATE_VER = #{PART_RATE_VER}

    </select>

    <select id="getProjectMemberTemp" parameterType="map" resultType="map">
        <![CDATA[
        /*getProjectMemberTemp*/
        SELECT
            A.*,
            B.*,
            DATE_FORMAT(C.STR_DT, '%Y-%m-%d') AS PJT_STR_DT,
            DATE_FORMAT(C.END_DT, '%Y-%m-%d') AS PJT_END_DT
        FROM
            CAM_PJT_MNG.DJ_PJT_PART_RATE_VER A
                LEFT JOIN
            (SELECT
                 SM.*,
                 RS.NATIONAL_PENSION,
                 RS.LIMIT_AMT,
                 RS.HEALTH_INSURANCE,
                 RS.LONG_CARE_INSURANCE,
                 RS.EMPLOY_INSURANCE,
                 RS.ACCIDENT_INSURANCE
             FROM
                 CAM_INSIDE.DJ_SALARY_MANAGE SM
                     JOIN
                 CAM_INSIDE.DJ_SOCIAL_RATE RS
                 ON
                     SM.SOCIAL_RATE_SN = RS.SOCIAL_RATE_SN
             WHERE
                     (SELECT STR_DT FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{PJT_SN}) BETWEEN DATE(START_DT) AND IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31'))
            ) B
        ON
            B.EMP_SEQ = #{MEMBER_SEQ}
        LEFT JOIN
            CAM_PJT_MNG.DJ_PROJECT C
        ON
            A.PJT_SN = C.PJT_SN
        WHERE A.PJT_SN = #{PJT_SN} AND A.PART_RATE_VER = #{PART_RATE_VER}
        ]]>
    </select>

    <update id="updTmpProjectCode" parameterType="map">
        /*updTmpProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_TMP_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updProjectCode" parameterType="map">
        /*updProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD = #{pjtCd}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updEngnProjectCode" parameterType="map">
        /*updEngnProjectCode*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_CD =
                (SELECT
                    CASE
                        WHEN MAX(REPLACE(PJT_CD, #{PJT_TMP_CD}, '')) = "" THEN CONCAT(#{PJT_TMP_CD}, '01')
                        ELSE CONCAT(#{PJT_TMP_CD}, LPAD(SUBSTR(MAX(PJT_CD), 8) + 1, '2', '0'))
                        END AS tt
                FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_CD like CONCAT(#{PJT_TMP_CD}, '%')),
            PJT_AMT = (SELECT DELV_AMT FROM CAM_PJT_MNG.DJ_PJT_DELV WHERE PJT_SN = #{PJT_SN}),
            STR_DT = (SELECT PJT_STR_DT FROM CAM_PJT_MNG.DJ_PJT_DELV WHERE PJT_SN = #{PJT_SN}),
            END_DT = (SELECT PJT_END_DT FROM CAM_PJT_MNG.DJ_PJT_DELV WHERE PJT_SN = #{PJT_SN}),
            PM_EMP_SEQ = (SELECT PM_EMP_SEQ FROM CAM_PJT_MNG.DJ_PJT_DELV WHERE PJT_SN = #{PJT_SN}),
            PM = (SELECT PM_EMP_NM FROM CAM_PJT_MNG.DJ_PJT_DELV WHERE PJT_SN = #{PJT_SN})
        WHERE
            PJT_SN = #{PJT_SN}
    </update>

    <!-- 커스텀예산 시작-->
    <insert id="insCustomBudget" parameterType="map">
        /* insCustomBudget */
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CB
        (
            PJT_SN,
            ACCOUNT,
            CB_CODE_ID_1,
            CB_CODE_NAME_1,
            CB_CODE_ID_2,
            CB_CODE_NAME_2,
            CB_CODE_ID_3,
            CB_CODE_NAME_3,
            CB_BUDGET,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{account},
            #{cbCodeId1},
            #{cbCodeName1},
            #{cbCodeId2},
            #{cbCodeName2},
            #{cbCodeId3},
            #{cbCodeName3},
            #{cbBudget},
            #{regEmpSeq}
        )
    </insert>

    <delete id="delCustomBudget" parameterType="map">
        /* delCustomBudget */
        DELETE FROM CAM_PJT_MNG.DJ_PJT_CB WHERE PJT_SN = #{pjtSn}
    </delete>

    <select id="getProjectBudgetList" parameterType="map" resultType="map">
        /* getProjectBudgetList */
        SELECT * FROM CAM_PJT_MNG.DJ_PJT_CB
        WHERE PJT_SN = #{pjtSn}
        <if test='account != null and !"".equals(account)'>
            AND ACCOUNT = #{account}
        </if>
    </select>

    <select id="getProjectBudgetTotal" parameterType="map" resultType="map">
        /* getProjectBudgetTotal */
        SELECT IFNULL(SUM(CB_BUDGET), 0) AS TOTAL_AMT FROM CAM_PJT_MNG.DJ_PJT_CB
        WHERE PJT_SN = #{pjtSn}
          AND CB_CODE_ID_1 IN (SELECT IS_TYPE FROM CAM_PJT_MNG.DJ_PJT_ACCOUNT WHERE PJT_SN = #{pjtSn})
    </select>

    <select id="getProjectBudgetListSum" parameterType="map" resultType="map">
        /* getProjectBudgetListSum */
        SELECT MAX(CB_CODE_NAME_1) AS CB_CODE_NAME_1, SUM(CB_BUDGET) AS CB_BUDGET FROM CAM_PJT_MNG.DJ_PJT_CB
        WHERE PJT_SN = #{pjtSn}
        GROUP BY CB_CODE_ID_1
    </select>

    <!-- 커스텀예산 끝 -->

    <select id="getProjectTotalData" parameterType="map" resultType="map">
        /* getProjectTotalData */
        WITH RECURSIVE PROJECT AS (
            SELECT
                #{busnClass} AS BUSN_CLASS
        )
        SELECT
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE PJT_STEP IN ('E', 'E0', 'E1', 'E2') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_EXPECT_COUNT,
            (SELECT IFNULL(SUM(SE.EXP_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN SE ON SP.PJT_SN = SE.PJT_SN WHERE PJT_STEP IN ('E', 'E1', 'E2') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_EXPECT_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E3', 'E4', 'E5', 'E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_PROGRESS_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E3', 'E4', 'E5', 'E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_PROGRESS_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_COMPLETE_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'D' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS ENGN_COMPLETE_SUM,

            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE PJT_STEP IN ('Y', 'E', 'E0', 'E1', 'E2', 'R', 'S') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_EXPECT_COUNT,
            (SELECT IFNULL(SUM(SE.EXP_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_ENGN SE ON SP.PJT_SN = SE.PJT_SN WHERE PJT_STEP IN ('E', 'E1', 'E2') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_EXPECT_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E3', 'E4', 'E5', 'E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_PROGRESS_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E3', 'E4', 'E5', 'E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_PROGRESS_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_COMPLETE_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('E6', 'E7') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND BUSN_CLASS = 'V' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS V_COMPLETE_SUM,

            (SELECT COUNT(-1) FROM (SELECT IFNULL(PARENT_PJT_SN, PJT_SN) AS PARENT_PJT_SN2 FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE PJT_STEP IN ('R') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' <if test='pjtYear != null and pjtYear != ""'>AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> GROUP BY PARENT_PJT_SN2)A) AS RND_EXPECT_COUNT,
            (SELECT IFNULL(SUM(PJT_EXP_AMT), 0) FROM (SELECT IFNULL(SP.PJT_EXP_AMT, 0) AS PJT_EXP_AMT FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE SP.PJT_STEP IN ('R') AND SP.PJT_STOP = 'N' AND SP.TEAM_STAT = 'N' <if test='pjtYear != null and pjtYear != ""'>AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> GROUP BY IFNULL(PARENT_PJT_SN, PJT_SN))A) AS RND_EXPECT_SUM,

            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('R2', 'R3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS RND_PROGRESS_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('R2', 'R3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS RND_PROGRESS_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('R3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS RND_COMPLETE_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('R3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS RND_COMPLETE_SUM,


            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE PJT_STEP IN ('S') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS URND_EXPECT_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_EXP_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP WHERE PJT_STEP IN ('S') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if>) AS URND_EXPECT_SUM,


            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('S2', 'S3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS URND_PROGRESS_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('S2', 'S3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND (SPR.STATUS != '100' OR SPR.STATUS IS NULL) <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS URND_PROGRESS_SUM,
            (SELECT COUNT(-1) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('S3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS URND_COMPLETE_COUNT,
            (SELECT IFNULL(SUM(SP.PJT_AMT), 0) FROM CAM_PJT_MNG.DJ_PROJECT SP LEFT JOIN CAM_PJT_MNG.DJ_PJT_RESULT SPR ON SP.PJT_SN = SPR.PJT_SN WHERE PJT_STEP IN ('S3') AND SP.PJT_STOP = 'N' AND TEAM_STAT = 'N' AND SPR.STATUS = '100' <if test='pjtYear != null and pjtYear != ""'> AND DATE_FORMAT(SP.STR_DT, '%Y') = #{pjtYear}</if> AND PARENT_PJT_SN IS NULL) AS URND_COMPLETE_SUM
        FROM
            PROJECT P
    </select>

    <delete id="delTeamProject" parameterType="map">
        /*delTeamProject*/
        DELETE FROM CAM_PJT_MNG.DJ_PROJECT WHERE TM_SN = #{tmSn} AND PNT_PJT_SN = #{pjtSn}
    </delete>

    <delete id="delTeamProjectData" parameterType="map">
        /*delTeamProjectData*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_TEAM WHERE TM_SN = #{tmSn}
    </delete>

    <select id="getTeamProjectList" parameterType="map" resultType="map">
        /*getTeamProjectList*/
        SELECT
            A.*
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_TEAM B ON A.PNT_PJT_SN = B.PJT_SN AND B.TM_TYPE = '1'
        WHERE A.PNT_PJT_SN = #{pjtSn}
          AND B.TEAM_VERSION_SN = (SELECT TEAM_VERSION_SN FROM CAM_PJT_MNG.DJ_PJT_TEAM_VERSION WHERE PJT_SN = #{pjtSn} AND ACTIVE = 'Y' ORDER BY TEAM_VERSION_SN DESC LIMIT 1)
          AND A.PJT_STOP = 'N'
        GROUP BY TM_SN
    </select>

    <select id="partRateEmpInfo" parameterType="map" resultType="map">
        /*partRateEmpInfo*/
        SELECT
            A.EMP_SEQ,
            A.EMP_NAME_KR,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = (SELECT PARENT_DEPT_SEQ FROM CAM_HR.DJ_DEPT_INFO WHERE DEPT_SEQ = A.DEPT_SEQ)) AS DEPT_NAME,
            (SELECT DEPT_NAME FROM CAM_HR.DJ_DEPT_INFO DI WHERE DEPT_SEQ = A.DEPT_SEQ) AS DEPT_TEAM_NAME,
            A.POSITION_NAME,
            A.JOIN_DAY,
            scp.dec_b64('KEY1', A.RES_REGIS_NUM) AS RES_REGIS_NUM,
            scp.dec_b64('KEY1', A.EMAIL_ADDR) AS EMAIL_ADDR,
            scp.dec_b64('KEY1', A.MOBILE_TEL_NUM) AS MOBILE_TEL_NUM,
            (SELECT SCHOOL_NAME FROM CAM_HR.DJ_EMP_EDUCATIONAL WHERE EMP_SEQ = A.EMP_SEQ ORDER BY EDUCATIONAL_ID DESC LIMIT 1) AS SCHOOL,
            (SELECT YEAR(GRADUATION_DAY) FROM CAM_HR.DJ_EMP_EDUCATIONAL WHERE EMP_SEQ = A.EMP_SEQ ORDER BY EDUCATIONAL_ID DESC LIMIT 1) AS GRADE,
            (SELECT HR_DT_CODE_NM FROM CAM_HR.DJ_HR_CODE WHERE (SELECT GUBUN_CODE FROM CAM_HR.DJ_EMP_EDUCATIONAL WHERE EMP_SEQ = A.EMP_SEQ ORDER BY EDUCATIONAL_ID DESC LIMIT 1) = CONCAT(HR_MC_CODE, HR_MD_CODE, HR_DT_CODE)) as GUBUN_CODE_NM,
            (SELECT HR_DT_CODE_NM FROM CAM_HR.DJ_HR_CODE WHERE (SELECT DEGREE_CODE FROM CAM_HR.DJ_EMP_EDUCATIONAL WHERE EMP_SEQ = A.EMP_SEQ ORDER BY EDUCATIONAL_ID DESC LIMIT 1) = CONCAT(HR_MC_CODE, HR_MD_CODE, HR_DT_CODE)) as DEGREE_CODE_NM,
            (SELECT HR_DT_CODE_NM FROM CAM_HR.DJ_HR_CODE WHERE (SELECT GRADUATION_CODE FROM CAM_HR.DJ_EMP_EDUCATIONAL WHERE EMP_SEQ = A.EMP_SEQ ORDER BY EDUCATIONAL_ID DESC LIMIT 1) = CONCAT(HR_MC_CODE, HR_MD_CODE, HR_DT_CODE)) as GRADUATION_CODE_NM,
            A.SCIENCE_NO
        FROM
            CAM_HR.DJ_EMP_INFO A
        WHERE
        A.EMP_SEQ IN
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY REG_DATE DESC
    </select>

    <select id="partRateEmpInfoTest" parameterType="map" resultType="map">
        /*partRateEmpInfoTest*/
        SELECT
            A.EMP_NAME_KR,
            A.DEPT_NAME,
            A.DEPT_TEAM_NAME,
            A.POSITION_NAME,
            A.JOIN_DAY,
            A.RES_REGIS_NUM,
            A.EMAIL_ADDR,
            A.MOBILE_TEL_NUM,
            B.SCHOOL_NAME AS SCHOOL,
            YEAR(B.GRADUATION_DAY) AS GRADE,
            C.HR_DT_CODE_NM AS GUBUN_CODE_NM,
            C2.HR_DT_CODE_NM AS DEGREE_CODE_NM,
            C3.HR_DT_CODE_NM AS GRADUATION_CODE_NM,
            A.SCIENCE_NO
        FROM
            CAM_HR.DJ_EMP_INFO A
        JOIN
            CAM_HR.DJ_EMP_EDUCATIONAL B
        ON A.EMP_SEQ = B.EMP_SEQ
        JOIN
            CAM_HR.DJ_HR_CODE C
        ON B.GUBUN_CODE = CONCAT(C.HR_MC_CODE, C.HR_MD_CODE, C.HR_DT_CODE)
        JOIN
            CAM_HR.DJ_HR_CODE C2
        ON B.DEGREE_CODE = CONCAT(C2.HR_MC_CODE, C2.HR_MD_CODE, C2.HR_DT_CODE)
        JOIN
            CAM_HR.DJ_HR_CODE C3
        ON B.GRADUATION_CODE = CONCAT(C3.HR_MC_CODE, C3.HR_MD_CODE, C3.HR_DT_CODE)
        WHERE
            A.EMP_SEQ IN
        <foreach item="item" index="index" collection="array"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY B.EMP_SEQ
        ORDER BY B.REG_DATE DESC
    </select>

    <update id="confirmPartRate" parameterType="map">
        /*confirmPartRate*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PART_RATE_VER
        SET
            MNG_STAT = 'C',
            BEF_VER_CHECK = 'Y',
            CONF_DATE = now()
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </update>

    <update id="updPartRateBefVersionStatus" parameterType="map">
        /*updPartRateBefVersionStatus*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PART_RATE_VER
        SET
            BEF_VER_CHECK = 'N'
        WHERE
            PJT_SN = #{pjtSn}
        AND
            PART_RATE_VER_SN != #{partRateVerSn}
    </update>

    <update id="updPMInfo" parameterType="map">
        /*updPMInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PM = #{mngEmpName},
            PM_EMP_SEQ = #{mngEmpSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPartRateDet" parameterType="map" resultType="map">
        /*getPartRateDet*/
        SELECT *
        FROM
            CAM_PJT_MNG.DJ_PART_RATE_DET
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </select>

    <insert id="insPartRateMonth" parameterType="map">
        /*insPartRateMonth*/
        INSERT INTO CAM_PJT_MNG.DJ_PART_RATE_MON
            (
                PJT_SN,
                BS_YEAR,
                EMP_SEQ,
                BS_SAL,
                MON_SAL,
                MON_PAY_01,
                MON_PAY_02,
                MON_PAY_03,
                MON_PAY_04,
                MON_PAY_05,
                MON_PAY_06,
                MON_PAY_07,
                MON_PAY_08,
                MON_PAY_09,
                MON_PAY_10,
                MON_PAY_11,
                MON_PAY_12,
                MON_ITEM_01,
                MON_ITEM_02,
                MON_ITEM_03,
                MON_ITEM_04,
                MON_ITEM_05,
                MON_ITEM_06,
                MON_ITEM_07,
                MON_ITEM_08,
                MON_ITEM_09,
                MON_ITEM_10,
                MON_ITEM_11,
                MON_ITEM_12
            )
        VALUES
            (
                #{PJT_SN},
                #{BS_YEAR},
                #{EMP_SEQ},
                #{BS_SAL},
                #{MON_SAL},
                #{MON_PAY_01},
                #{MON_PAY_02},
                #{MON_PAY_03},
                #{MON_PAY_04},
                #{MON_PAY_05},
                #{MON_PAY_06},
                #{MON_PAY_07},
                #{MON_PAY_08},
                #{MON_PAY_09},
                #{MON_PAY_10},
                #{MON_PAY_11},
                #{MON_PAY_12},
                #{MON_ITEM_01},
                #{MON_ITEM_02},
                #{MON_ITEM_03},
                #{MON_ITEM_04},
                #{MON_ITEM_05},
                #{MON_ITEM_06},
                #{MON_ITEM_07},
                #{MON_ITEM_08},
                #{MON_ITEM_09},
                #{MON_ITEM_10},
                #{MON_ITEM_11},
                #{MON_ITEM_12}
            )
    </insert>

    <delete id="delPartRateMonthData" parameterType="map">
        /*delPartRateMonthData*/
        DELETE FROM CAM_PJT_MNG.DJ_PART_RATE_MON
        WHERE
            PJT_SN = #{pjtSn}
    </delete>

    <update id="updJoinMember" parameterType="map">
        /*updJoinMember*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PART_RATE_VER
        SET
            JOIN_MEM_SN = CONCAT(IF(JOIN_MEM_SN = "", "", CONCAT(JOIN_MEM_SN, ",")), #{joinMemSn})
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </update>

    <update id="delUpdJoinMember" parameterType="map">
        /*delUpdJoinMember*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PART_RATE_VER
        SET
            JOIN_MEM_SN = #{joinMemSn}
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </update>

    <select id="getProjectByPjtCd" parameterType="map" resultType="map">
        /*getProjectByPjtCd*/
        SELECT
            *,
            DATE_FORMAT(STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(END_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            PJT_CD = #{pjtCd}
        AND
            TEAM_STAT = 'N'
        AND
            PARENT_PJT_SN IS NULL
    </select>

    <select id="getProjectByPjtCd2" parameterType="map" resultType="map">
        /*getProjectByPjtCd2*/
        SELECT
            *,
            DATE_FORMAT(STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(END_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            LEFT(PJT_CD, 9)  = LEFT(#{pjtCd}, 9)
        AND
            TEAM_STAT = 'N'
        ORDER BY PJT_SN DESC LIMIT 1
    </select>

    <select id="getProjectByDocId" parameterType="map" resultType="map">
        /*getProjectByDocId*/
        SELECT
            A.*,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_RND B ON A.PJT_SN = B.PJT_SN
        WHERE
            B.DOC_ID = #{docId}
          AND
            A.TEAM_STAT = 'N';
    </select>

    <select id="getProjectByDocId2" parameterType="map" resultType="map">
        /*getProjectByDocId2*/
        SELECT
            A.*,
            DATE_FORMAT(A.STR_DT, '%Y-%m-%d') AS PJT_START_DT,
            DATE_FORMAT(A.END_DT, '%Y-%m-%d') AS PJT_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS PJT_EXP_END_DT,
            DATE_FORMAT(A.END_EXP_DT, '%Y-%m-%d') AS END_EXP_DT_FORMAT
        FROM
            CAM_PJT_MNG.DJ_PROJECT A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_UNRND B ON A.PJT_SN = B.PJT_SN
        WHERE
            B.DOC_ID = #{docId}
          AND
            A.TEAM_STAT = 'N';
    </select>

    <select id="getDepositList" parameterType="map" resultType="map">
        /*getDepositList*/
        SELECT
            A.*,
            B.PJT_NM,
            B.DOC_ID,
            B.DOC_STATUS,
            B.PAY_EXNP_DE,
            (SELECT DOC_NO FROM dj_camtic.a_doc_info where DOC_ID = B.DOC_ID) AS DOC_NO,
            (SELECT RE_APP_DE FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y' ORDER BY PAY_INCP_RE_SN DESC LIMIT 1) RE_APP_DE,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN) TOT_AMT,
            (SELECT MAX(TR_DE) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN) LAST_DT,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_DET WHERE PAY_INCP_SN = A.PAY_INCP_SN) TOT_DET_AMT,
            (SELECT SUM(TOT_COST) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y') RE_TOT_COST,
            (SELECT COUNT(PAY_INCP_RE_SN) FROM CAM_MNG.DJ_PAY_INCP_RE WHERE PAY_INCP_SN = A.PAY_INCP_SN AND RE_STAT = 'Y') RE_CNT
        FROM
            CAM_MNG.DJ_PAY_DEPO A
        LEFT JOIN
            CAM_MNG.DJ_PAY_INCP B
        ON A.PAY_INCP_SN = B.PAY_INCP_SN
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <select id="getProjectCodeData" parameterType="map" resultType="map">
        /*getProjectCodeData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PROJECT
        WHERE
            LEFT(PJT_CD, 9) = LEFT(#{PJT_CD}, 9)
        AND
            TEAM_STAT = 'N'
        limit 1
    </select>

    <select id="getCbAmtByAccount" parameterType="map" resultType="map">
        /*getCbAmtByAccount*/
        SELECT IFNULL(SUM(CB_BUDGET), 0) AS BUDGET_AMT FROM cam_pjt_mng.dj_pjt_cb WHERE PJT_SN = #{pjtSn} AND ACCOUNT = RIGHT(#{PJT_CD}, 1);
    </select>

    <select id="getDevMap" parameterType="map" resultType="map">
        /*getDevMap*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_DEV
        WHERE
            STATUS = 100
        AND
            PJT_SN = #{pjtSn}
        ORDER BY
            DEV_SN DESC
        LIMIT 1
    </select>

    <select id="getPartStartBs" parameterType="map" resultType="map">
        /* getPartStartBs */
        SELECT
            *
        FROM
            CAM_INSIDE.DJ_SALARY_MANAGE SM
        JOIN
            CAM_INSIDE.DJ_SOCIAL_RATE RS
        ON SM.SOCIAL_RATE_SN = RS.SOCIAL_RATE_SN
        JOIN
            CAM_HR.DJ_EMP_INFO EI
        ON SM.EMP_SEQ = EI.EMP_SEQ
        WHERE
            SM.EMP_SEQ = #{empSeq}
        AND
            DATE_FORMAT(#{startDt}, '%Y-%m-%d') BETWEEN DATE_FORMAT(START_DT, '%Y-%m-%d') AND IFNULL(IF(END_DT = "", null, END_DT), DATE('9999-12-31'))
        ORDER BY
            ABS(TIMESTAMPDIFF(SECOND, START_DT, #{startDt})) LIMIT 1
    </select>

    <delete id="delJoinMember" parameterType="map">
        /*delJoinMember*/
        DELETE FROM CAM_PJT_MNG.DJ_PART_RATE_DET
        WHERE
            PART_RATE_DET = #{partRateDet}
    </delete>

    <select id="getFinalPartRateChangeDocList" parameterType="map" resultType="map">
        /*getFinalPartRateChangeDocList*/
        SELECT
            DI.DOC_ID,
            DI.FORM_ID,
            DI.APPRO_KEY,
            DI.AIKEYCODE,
            DI.DOC_BOX_SN,
            DI.DOC_GBN_SN,
            IFNULL(DI.DOC_NO, '') AS DOC_NO,
            DI.DOC_TITLE,
            DI.DRAFT_EMP_NAME,
            DI.DRAFT_DEPT_NAME,
            DI.DRAFT_DUTY_NAME,
            DI.APPROVE_STAT_CODE_DESC,
            DI.APPROVE_STAT_CODE,
            DATE_FORMAT(DI.DRAFT_DT,'%Y-%m-%d') AS DRAFT_DT,
            DATE_FORMAT(DI.LAST_APPROVE_DT,'%Y-%m-%d') AS LAST_APPROVE_DT,
            DO.SECURITY_TYPE,
            DO.REG_EMP_SEQ
        FROM
            DJ_CAMTIC.A_DOC_INFO DI
        LEFT JOIN
            DJ_CAMTIC.A_DOC_OPT DO
        ON DI.DOC_ID = DO.DOC_ID
        WHERE 1=1
        AND
            (
                DI.APPROVE_STAT_CODE = 100 OR
                DI.APPROVE_STAT_CODE = 101
            )
            <if test="empSeq != null and empSeq != ''">
                AND
                    DI.DRAFT_EMP_SEQ = #{empSeq}
            </if>
            <if test="deptSeq != null and deptSeq != ''">
                AND
                    DI.DRAFT_DEPT_SEQ = #{deptSeq}
            </if>
            <if test='startDay != null and !"".equals(startDay)'>
                <![CDATA[
                    AND
                        DATE_FORMAT(#{startDay}, '%Y%m%d') <= DATE_FORMAT(DI.DRAFT_DT, '%Y%m%d')
                    AND
                        DATE_FORMAT(#{endDay}, '%Y%m%d') >= DATE_FORMAT(DI.LAST_APPROVE_DT, '%Y%m%d')
                ]]>
            </if>
            <if test="docTitle != null and docTitle != ''">
                AND
                    DI.DOC_TITLE LIKE CONCAT('%', #{docTitle}, '%')
            </if>
        AND
            DI.FORM_ID = '157'
        ORDER BY DI.DOC_ID DESC
    </select>

    <update id="setReferencesAdd" parameterType="map">
        /*setReferencesAdd*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PART_RATE_VER
        SET
            DOC_ID = #{docId},
            STATUS = #{status},
            APPROVAL_EMP_SEQ = #{approvalEmpSeq},
            APPROVAL_DATE = #{approvalDate}
        WHERE
            PART_RATE_VER_SN = #{partRateVerSn}
    </update>

    <select id="getPsListByDevSn" parameterType="map" resultType="map">
        /*getPsListByDevSn*/
        SELECT * FROM CAM_PJT_MNG.DJ_PJT_PS
        WHERE DEV_SN = #{devSn}
    </select>

    <update id="modProcessData" parameterType="map">
        /*modProcessData*/
        UPDATE CAM_PJT_MNG.DJ_PJT_PS
        SET
            PS_PREP = #{psPrep},
            PS_PREP_NM = #{psPrepNm},
            PS_NM = #{psNm},
            PS_STR_DE = #{psStrDe},
            PS_END_DE = #{psEndDe},
            PS_EMP_SEQ = #{psEmpSeq},
            PS_EMP_NM = #{psEmpNm}
        WHERE
            PS_SN = #{psSn}
    </update>

    <update id="updInvestData" parameterType="map">
        /*updInvestData*/
        UPDATE CAM_PJT_MNG.DJ_PJT_INV
        SET
            DIV_CD = #{divCd},
            DIV_NM = #{divNm},
            INV_NM = #{invNm},
            INV_CNT = #{invCnt},
            INV_UNIT = #{invUnit},
            INV_UNIT_PRICE = #{invUnitPrice},
            EST_TOT_AMT = #{estTotAmt},
            EST_OFC = #{estOfc},
            INV_ETC = #{invEtc}
        WHERE
            INV_SN = #{invSn}
    </update>

    <select id="getPartRateMemberList" parameterType="map" resultType="map">
        /*getPartRateMemberList*/
        SELECT * FROM CAM_PJT_MNG.DJ_PART_RATE_DET
        WHERE PART_RATE_VER_SN =
              (SELECT PART_RATE_VER_SN FROM CAM_PJT_MNG.DJ_PJT_PART_RATE_VER WHERE MNG_STAT IN ('R', 'C', 'S') AND PJT_SN = #{pjtSn} ORDER BY PART_RATE_VER_SN DESC LIMIT 1)
    </select>

    <select id="getPsMemberList" parameterType="map" resultType="map">
        /*getPsMemberList*/
        SELECT * FROM CAM_PJT_MNG.DJ_PJT_PS
        WHERE PJT_SN = #{pjtSn}
    </select>

    <select id="getAceMemberList" parameterType="map" resultType="map">
        /*getAceMemberList*/
        SELECT
            MAG.AUTHORITY_GRANT_ID,
            MAG.AUTHORITY_GROUP_ID,
            MAG.EMP_SEQ,
            MAG.EMP_NAME,
            MAG.LOGIN_ID,
            CONCAT(MAG.EMP_NAME, '(', MAG.LOGIN_ID, ')') AS EMP_NAME_ID,
            MAG.DEPT_SEQ,
            MAG.DEPT_NAME,
            MAG.DUTY_NAME,
            MAG.POSITION_NAME,
            MAG.AUTHORITY_DATE
        FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT MAG
        WHERE
            MAG.AUTHORITY_GROUP_ID = '46'
    </select>

    <select id="getPartRateAdminList" parameterType="map" resultType="map">
        /*getPartRateAdminList*/
        SELECT
            MAG.AUTHORITY_GRANT_ID,
            MAG.AUTHORITY_GROUP_ID,
            MAG.EMP_SEQ,
            MAG.EMP_NAME,
            MAG.LOGIN_ID,
            CONCAT(MAG.EMP_NAME, '(', MAG.LOGIN_ID, ')') AS EMP_NAME_ID,
            MAG.DEPT_SEQ,
            MAG.DEPT_NAME,
            MAG.DUTY_NAME,
            MAG.POSITION_NAME,
            MAG.AUTHORITY_DATE
        FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT MAG
        WHERE
            MAG.AUTHORITY_GROUP_ID = '32'
    </select>

    <select id="getTeamReaderList" parameterType="map" resultType="map">
        /*getTeamReaderList*/
        SELECT
            C.*
        FROM CAM_HR.DJ_EMP_INFO A
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO B
          ON A.DEPT_SEQ = B.DEPT_SEQ
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO C
          ON C.DEPT_SEQ = B.DEPT_SEQ
        WHERE
            A.EMP_SEQ = (SELECT IFNULL(PM_EMP_SEQ, EMP_SEQ) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
          AND C.DUTY_CODE IN (2,5,4,3,7)
          AND C.DIVISION != 9999
        UNION
        SELECT
            C.*
        FROM CAM_HR.DJ_EMP_INFO A
        LEFT JOIN
            CAM_HR.DJ_DEPT_INFO B
          ON A.DEPT_SEQ = B.DEPT_SEQ
        LEFT JOIN
            CAM_HR.DJ_EMP_INFO C
          ON C.DEPT_SEQ = B.PARENT_DEPT_SEQ
        WHERE
            A.EMP_SEQ = (SELECT IFNULL(PM_EMP_SEQ, EMP_SEQ) FROM CAM_PJT_MNG.DJ_PROJECT WHERE PJT_SN = #{pjtSn})
          AND C.DUTY_CODE IN (2,5,4,3,7)
          AND C.DIVISION != 9999
    </select>

    <select id="getPjtYear" parameterType="map" resultType="map">
        /*getPjtYear*/
        SELECT
            DATE_FORMAT(STR_DT, '%Y') AS YEAR,
            CONCAT(DATE_FORMAT(STR_DT, '%Y'), '년') AS TEXT
        FROM CAM_PJT_MNG.DJ_PROJECT WHERE STR_DT IS NOT NULL GROUP BY DATE_FORMAT(STR_DT, '%Y') ORDER BY STR_DT DESC
    </select>

    <select id="payAppChooseList" parameterType="map" resultType="map">
        /*payAppChooseList*/
        SELECT AA.* FROM (
        SELECT
            A.*,
            B.DOC_NO,
            C.TOT_COST,
            C.ITEM_COUNT,
            C.CRM_NM,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO HR WHERE HR.EMP_SEQ = A.REG_EMP_SEQ) AS EMP_NAME
        FROM
        CAM_MNG.DJ_PAY_APP A

        LEFT JOIN
        DJ_CAMTIC.A_DOC_INFO B
        ON
        A.DOC_ID = B.DOC_ID

        LEFT JOIN
        (SELECT
        PAY_APP_SN,
        SUM(TOT_COST) AS TOT_COST,
        GROUP_CONCAT(CRM_NM) AS CRM_NM,
        COUNT(*) AS ITEM_COUNT
        FROM CAM_MNG.DJ_PAY_APP_DET
        WHERE TOT_COST != 0
        GROUP BY PAY_APP_SN) C
        ON
        A.PAY_APP_SN = C.PAY_APP_SN

        WHERE
        1=1
        <if test='payAppType == "1" or "1".equals(payAppType)'>
            AND PAY_APP_TYPE = 1
        </if>
        <if test='payAppType == "2" or "2".equals(payAppType)'>
            AND PAY_APP_TYPE = 2
        </if>
        <if test='payAppType == "3" or "3".equals(payAppType)'>
            AND PAY_APP_TYPE = 3
        </if>
        <if test='payAppType == "4" or "4".equals(payAppType)'>
            AND PAY_APP_TYPE = 4
        </if>
        <if test='pjtCd != null and !"".equals(pjtCd)'>
            AND A.PJT_CD = #{pjtCd}
        </if>
        <if test='regEmpSeq != null and !"".equals(regEmpSeq)'>
            AND A.REG_EMP_SEQ = #{regEmpSeq}
        </if>

        ) AA
        WHERE
            AA.DOC_STATUS IN (100, 101)
            AND (PJT_NM LIKE '%년]법인운영%' OR PJT_NM LIKE '%년]기타%')
        <choose>
            <when test='"2".equals(searchDate)'>
                AND AA.REQ_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <when test='"3".equals(searchDate)'>
                AND AA.PAY_EXNP_DE BETWEEN #{strDe} AND #{endDe}
            </when>
            <otherwise>
                AND AA.APP_DE BETWEEN #{strDe} AND #{endDe}
            </otherwise>
        </choose>
        <if test='searchValue != "" and !"".equals(searchValue)'>
            <choose>
                <when test='"A".equals(searchKeyword)'>
                    AND
                    AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"B".equals(searchKeyword)'>
                    AND
                    AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"C".equals(searchKeyword)'>
                    AND
                    AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <when test='"D".equals(searchKeyword)'>
                    AND
                    AA.CRM_NM REGEXP #{searchValue}
                </when>
                <when test='"E".equals(searchKeyword)'>
                    AND
                    AA.EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
                </when>
                <otherwise>
                    AND
                    (
                        AA.DOC_NO LIKE CONCAT('%', #{searchValue},'%')
                        OR AA.APP_TITLE LIKE CONCAT('%', #{searchValue},'%')
                        OR AA.PJT_NM LIKE CONCAT('%', #{searchValue},'%')
                        OR AA.CRM_NM REGEXP #{searchValue}
                        OR AA.EMP_NAME LIKE CONCAT('%', #{searchValue},'%')
                    )
                </otherwise>
            </choose>
        </if>
        AND (AA.PJT_SN = '' OR AA.PJT_SN IS NULL)
        ORDER BY AA.PAY_APP_SN DESC
    </select>

    <update id="updPayAppChoose" parameterType="map">
        /* updPayAppChoose */
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            PJT_SN = #{pjtSn}
        WHERE PAY_APP_SN IN (${payAppSnList})
    </update>

    <update id="updPayAppPjtNull" parameterType="map">
        /*updPayAppPjtNull*/
        UPDATE CAM_MNG.DJ_PAY_APP
        SET
            PJT_SN = ''
        WHERE PAY_APP_SN = #{payAppSn}
    </update>

    <insert id="setPjtAmt" parameterType="map">
        /* setPjtAmt */
        INSERT INTO CAM_PJT_MNG.DJ_AMT_SET
        (
            PJT_SN,
            REQ_TYPE,
            REQ_DATE,
            REQ_AMT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{amtType},
            #{reqDate},
            #{reqAmt},
            #{regEmpSeq}
        )
        <selectKey keyProperty="AMT_SET_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_AMT_SET'
        </selectKey>
    </insert>

    <insert id="setPjtDelvDe" parameterType="map">
        /* setPjtDelvDe */
        INSERT INTO CAM_PJT_MNG.DJ_DELV_DE_SET
            (
                PJT_SN,
                GOODS_SN,
                DELV_DE,
                SET_ISS,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtSn},
                #{goodsSn},
                #{delvDe},
                #{setIss},
                #{regEmpSeq}
            )
        <selectKey keyProperty="DELV_DE_SET_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_DELV_DE_SET'
        </selectKey>
    </insert>

    <update id="setDelvDe" parameterType="map">
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            DELV_DE = #{delvDe},
            GOODS_DT = #{delvDe}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPjtAmtSetList" parameterType="map" resultType="map">
        /*getPjtAmtSetList*/
        SELECT
            *
        FROM CAM_PJT_MNG.DJ_AMT_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND ACTIVE = 'Y'
    </select>

    <select id="getPjtDelvDeSetList" parameterType="map" resultType="map">
        /*getPjtDelvDeSetList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_DELV_DE_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND
            GOODS_SN = #{goodsSn}
        AND
            ACTIVE = 'Y'
    </select>

    <select id="getPjtAmtSetData" parameterType="map" resultType="map">
        /*getPjtAmtSetData*/
        SELECT
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_PJT_MNG.DJ_AMT_SET WHERE PJT_SN = #{pjtSn} AND ACTIVE = 'Y' AND REQ_TYPE = '0' AND YEAR(REQ_DATE) = #{reqYear}), 0) AS AMT0,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_PJT_MNG.DJ_AMT_SET WHERE PJT_SN = #{pjtSn} AND ACTIVE = 'Y' AND REQ_TYPE = '1' AND YEAR(REQ_DATE) = #{reqYear}), 0) AS AMT1,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_PJT_MNG.DJ_AMT_SET WHERE PJT_SN = #{pjtSn} AND ACTIVE = 'Y' AND REQ_TYPE = '2' AND YEAR(REQ_DATE) = #{reqYear}), 0) AS AMT2,
            IFNULL((SELECT SUM(REQ_AMT) FROM CAM_PJT_MNG.DJ_AMT_SET WHERE PJT_SN = #{pjtSn} AND ACTIVE = 'Y' AND REQ_TYPE = '3' AND YEAR(REQ_DATE) = #{reqYear}), 0) AS AMT3
        FROM DUAL
    </select>

    <update id="setPjtAmtDel" parameterType="map">
        /* setPjtAmtDel */
        UPDATE CAM_PJT_MNG.DJ_AMT_SET
        SET
            ACTIVE = 'N'
        WHERE AMT_SET_SN = #{amtSetSn}
    </update>

    <update id="setCostInfoClose" parameterType="map">
        /*setCostInfoClose*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            COST_CLOSE_CK = 'Y',
            COST_CLOSE_DT = DATE_FORMAT(NOW(), '%Y-%m-%d')
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <insert id="setPjtGoodsInfo" parameterType="map">
        /*setPjtGoodsInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_GOODS
            (
                PJT_SN,
                PJT_CD,
                DELV_DE,
                GOODS_NM,
                GOODS_ISS,
                GOODS_TOT_AMT,
                REG_EMP_SEQ,
                REG_DT
            )
        VALUES
            (
                #{pjtSn},
                #{pjtCd},
                #{delvDe},
                #{goodsNm},
                #{goodsIss},
                #{goodsTotAmt},
                #{loginEmpSeq},
                NOW()
            )

        <selectKey keyProperty="GOODS_SN" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_GOODS'
        </selectKey>
    </insert>

    <update id="updPjtGoodsInfo" parameterType="map">
        /*updPjtGoodsInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_GOODS
        SET
            GOODS_NM = #{goodsNm},
            GOODS_ISS = #{goodsIss},
            GOODS_TOT_AMT = #{goodsTotAmt},
            MOD_EMP_SEQ = #{loginEmpSeq},
            MOD_DT = NOW()
        WHERE
            GOODS_SN = #{goodsSn}
    </update>

    <insert id="setGoodsSubInfo" parameterType="map">
        /*setGoodsSubInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_GOODS_SUB
            (
                GOODS_SN,
                PROD_NM,
                PROD_CNT,
                UNIT,
                UNIT_AMT,
                SUP_AMT,
                ETC
            )
        VALUES
            (
                #{goodsSn},
                #{prodNm},
                #{prodCnt},
                #{unit},
                #{unitAmt},
                #{supAmt},
                #{etc}
            )
    </insert>

    <select id="getPjtGoodsList" parameterType="map" resultType="map">
        /*getPjtGoodsList*/
        SELECT
            ROW_NUMBER() OVER (PARTITION BY A.PJT_SN ORDER BY A.GOODS_SN ASC ) AS ROW_NUM,
            A.*,
            IFNULL((SELECT DELV_DE FROM CAM_PJT_MNG.DJ_DELV_DE_SET WHERE GOODS_SN = A.GOODS_SN ORDER BY DELV_DE_SET_SN DESC LIMIT 1), A.DELV_DE) AS CNG_DELV_DE,
            IF(A.GOODS_STAT = 'Y', '확정', '미확정') AS GOODS_STAT_TXT,
            (SELECT EMP_NAME_KR FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = A.REG_EMP_SEQ) AS REG_EMP_NAME,
            DATE_FORMAT(A.REG_DT,'%Y-%m-%d') AS REG_DATE
        FROM CAM_PJT_MNG.DJ_PJT_GOODS A
        WHERE
            A.PJT_SN = #{pjtSn}
        ORDER BY A.GOODS_SN ASC
    </select>

    <select id="getPjtGoodsInfo" parameterType="map" resultType="map">
        /*getPjtGoodsInfo*/
        SELECT
            A.*,
            IFNULL((SELECT DELV_DE FROM CAM_PJT_MNG.DJ_DELV_DE_SET WHERE GOODS_SN = A.GOODS_SN ORDER BY DELV_DE_SET_SN DESC LIMIT 1), A.DELV_DE) AS CNG_DELV_DE
        FROM
            CAM_PJT_MNG.DJ_PJT_GOODS A
        WHERE
            A.GOODS_SN = #{goodsSn}
    </select>

    <select id="getPjtGoodsSubList" parameterType="map" resultType="map">
        /*getPjtGoodsSubList*/
        SELECT
            A.*
        FROM
            CAM_PJT_MNG.DJ_PJT_GOODS_SUB A
        WHERE
            A.GOODS_SN = #{goodsSn}
    </select>

    <delete id="delPjtGoodsSubInfo" parameterType="map">
        /*delPjtGoodsSubInfo*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_GOODS_SUB WHERE GOODS_SN = #{goodsSn}
    </delete>

    <update id="setGoodsConfirm" parameterType="map">
        /*setGoodsConfirm*/
        UPDATE CAM_PJT_MNG.DJ_PJT_GOODS SET GOODS_STAT = 'Y' WHERE GOODS_SN = #{goodsSn}
    </update>

    <select id="getPaySetNow" parameterType="map" resultType="map">
        /* getPaySetNow */
        SELECT
            *
        FROM CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{reqYear}
    </select>

    <select id="getPaySetNext" parameterType="map" resultType="map">
        /* getPaySetNext */
        SELECT
            *
        FROM CAM_PJT_MNG.DJ_PJT_PAY_SET
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{nextYear}
    </select>

    <insert id="setPaySetNowIns" parameterType="map">
        /* setPaySetNowIns */
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PAY_SET
        (
            PJT_SN,
            YEAR,
            BEF_EXP_SALE_AMT,
            BEF_EXP_PROFIT_AMT,
            AFT_SALE_AMT,
            AFT_PROFIT_AMT,
            DEADLINE_YN,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{reqYear},
            0,
            0,
            #{nextSaleAmt},
            #{nextProfitAmt},
            'Y',
            #{regEmpSeq}
        )
    </insert>

    <update id="setPaySetNowUpd" parameterType="map">
        /* setPaySetNowUpd */
        UPDATE CAM_PJT_MNG.DJ_PJT_PAY_SET
        SET
            DEADLINE_YN = 'Y',
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{reqYear}
    </update>

    <insert id="setPaySetNextIns" parameterType="map">
        /* setPaySetNextIns */
        INSERT INTO CAM_PJT_MNG.DJ_PJT_PAY_SET
        (
            PJT_SN,
            YEAR,
            BEF_EXP_SALE_AMT,
            BEF_EXP_PROFIT_AMT,
            AFT_SALE_AMT,
            AFT_PROFIT_AMT,
            DEADLINE_YN,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{pjtSn},
            #{nextYear},
            #{nowSaleAmt},
            #{nowProfitAmt},
            0,
            0,
            'N',
            #{regEmpSeq}
        )
    </insert>

    <update id="setPaySetNextUpd" parameterType="map">
        /* setPaySetNextUpd */
        UPDATE CAM_PJT_MNG.DJ_PJT_PAY_SET
        SET
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            PJT_SN = #{pjtSn}
        AND YEAR = #{nextYear}
    </update>

    <update id="updDelvNowYear" parameterType="map">
        /*updDelvNowYear*/
        UPDATE CAM_PJT_MNG.DJ_PJT_DELV
        SET
            DELV_DE = #{nowEndDe}
        WHERE
            PJT_SN = #{pjtSn}
    </update>
</mapper>