<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="unRnd">

    <insert id="insSubjectInfo" parameterType="map">
        /* insSubjectInfo */
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
        (
            BUSN_CLASS,
            BUSN_NM,
            PJT_STEP,
            PJT_STEP_NM,
            BS_TITLE,
            SBJ_CHAR,
            SBJ_DEP,
            SBJ_DEP_SUB,
            SBJ_SEP,
            PJT_CON_YEAR,
            STR_DT,
            END_DT,
            EMP_SEQ,
            EMP_NAME,
            DEPT_SEQ,
            DEPT_NAME,
            PJT_NM,
            PJT_SUB_NM,
            CRM_SN,
            CRM_CON_SN,
            CRM_PART_SN,
            PJT_EXP_AMT,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{busnClass},
            #{busnNm},
            #{pjtStep},
            #{pjtStepNm},
            #{bsTitle},
            #{sbjChar},
            #{sbjDep},
            #{sbjDepSub},
            #{sbjSep},
            #{pjtConYear},
            #{strDt},
            #{endDt},
            #{empSeq},
            #{empName},
            #{deptSeq},
            #{deptName},
            #{pjtNm},
            #{pjtSubNm},
            #{crmSn},
            #{crmConSn},
            #{crmPartSn},
            #{pjtExpAmt},
            #{regEmpSeq}
        )

        <selectKey keyProperty="pjtSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
        </selectKey>
    </insert>

    <update id="updSubjectInfo" parameterType="map">
        /*updSubjectInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            BS_TITLE = #{bsTitle},
            SBJ_CHAR = #{sbjChar},
            SBJ_DEP = #{sbjDep},
            SBJ_DEP_SUB = #{sbjDepSub},
            SBJ_SEP = #{sbjSep},
            PJT_CON_YEAR = #{pjtConYear},
            STR_DT = #{strDt},
            END_DT = #{endDt},
            EMP_SEQ = #{empSeq},
            EMP_NAME = #{empName},
            DEPT_SEQ = #{deptSeq},
            DEPT_NAME = #{deptName},
            PJT_NM = #{pjtNm},
            PJT_SUB_NM = #{pjtSubNm},
            CRM_SN = #{crmSn},
            CRM_CON_SN = #{crmConSn},
            CRM_PART_SN = #{crmPartSn},
            PJT_EXP_AMT = #{pjtExpAmt}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getUnRndDetail" parameterType="map" resultType="map">
        /*getUnRndDetail*/
        SELECT
            A.*, B.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_PJT_MNG.DJ_PJT_UNRND A
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO B
        ON
            A.UN_RND_FILE_SN = B.file_no
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI
        ON
            A.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insUnRndDetail" parameterType="map">
        /*insUnRndDetail*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_UNRND
            (
                PJT_SN,
                MNG_DEPT_SEQ,
                MNG_DEPT_NAME,
                MNG_EMP_SEQ,
                MNG_EMP_NAME,
                UN_RND_OBJ,
                UN_RND_CONT
            )
        VALUE
            (
                #{pjtSn},
                #{mngDeptSeq},
                #{mngDeptName},
                #{mngEmpSeq},
                #{mngEmpName},
                #{unRndObj},
                #{unRndCont}
            )
        <selectKey keyProperty="unRndSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_UNRND'
        </selectKey>
    </insert>

    <update id="updUnRndDetail" parameterType="map">
        /*updUnRndDetail*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            MNG_DEPT_SEQ = #{mngDeptSeq},
            MNG_DEPT_NAME = #{mngDeptName},
            MNG_EMP_SEQ = #{mngEmpSeq},
            MNG_EMP_NAME = #{mngEmpName},
            UN_RND_OBJ = #{unRndObj},
            UN_RND_CONT = #{unRndCont}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updUnRndFileSn" parameterType="map">
        /*updUnRndFileSn*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            UN_RND_FILE_SN = #{file_no}
        WHERE
            UN_RND_SN = #{unRndSn}
    </update>

    <update id="setDelvApprove" parameterType="map">
        /*setDelvApprove*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = 100
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updUnRndProjectInfo" parameterType="map">
        /*updUnRndProjectInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = "S2",
            PJT_STEP_NM = "수주보고",
            PJT_AMT = PJT_EXP_AMT
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPersonList" parameterType="map" resultType="map">
        /*getPersonList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        WHERE 1=1
        <if test='notIn != null and !"".equals(notIn)'>
            AND PERSON_SN NOT IN (
                SELECT
                    PERSON_SN
                FROM
                    CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
                WHERE
                    LEC_SN = #{notIn}
                AND ACTIVE = 'Y'
            )
        </if>
        <if test="sEmpName != null and sEmpName != ''">
            AND NAME LIKE CONCAT('%', #{sEmpName}, '%')
        </if>
        ORDER BY NAME
    </select>

    <select id="getPersonData" parameterType="map" resultType="map">
        /*getPersonData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        WHERE PERSON_SN = #{personSn}
    </select>

    <select id="getLectureTeacherList" parameterType="map" resultType="map">
        /*getLectureTeacherList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        WHERE 1=1
        <if test='notIn != null and !"".equals(notIn)'>
            AND TEACHER_SN NOT IN (
                SELECT
                    TEACHER_SN
                FROM
                    CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
                WHERE
                    LEC_SN = #{notIn}
            )
        </if>
        ORDER BY NAME
    </select>

    <select id="getLectureTeacherReqList" parameterType="map" resultType="map">
        /*getLectureTeacherReqList*/
        SELECT
            A.*,
            B.NAME
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER B ON A.TEACHER_SN = B.TEACHER_SN
        WHERE
            LEC_SN = #{pk}
        ORDER BY NAME
    </select>

    <select id="getLecturePersonReqList" parameterType="map" resultType="map">
        /*getLecturePersonReqList*/
        SELECT
            A.*,
            DATE_FORMAT(A.REG_DT, '%Y-%m-%d') AS REG_DATE,
            B.*,
            C.LEC_COST
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON B ON A.PERSON_SN = B.PERSON_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE C ON A.LEC_SN = C.LEC_SN
        WHERE
            A.LEC_SN = #{pk}
        AND A.ACTIVE = 'Y'
        <if test='personList != null and !"".equals(personList)'>
            AND A.PERSON_SN IN (${personList})
        </if>
        ORDER BY NAME
    </select>

    <select id="getLectureList" parameterType="map" resultType="map">
        /*getLectureList*/
        SELECT
            PL.*,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN) AS TOT_B,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'H') AS TOT_C,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'Y') AS TOT_D,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'N') AS TOT_E,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'O') AS TOT_F
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE PL
        WHERE PJT_SN = #{pjtSn}
        ORDER BY LEC_SN DESC
    </select>

    <select id="getLectureInfo" parameterType="map" resultType="map">
        /*getLectureInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE
        WHERE
            LEC_SN = #{pk}
    </select>

    <insert id="insLectureTeacherInfo" parameterType="map">
        /*insLectureTeacherInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
            (
                LEC_SN,
                TEACHER_SN
            )
        VALUES
        <foreach collection="teacherList" item="item" separator=" , ">
            (
                #{pk},
                #{item.value}
            )
        </foreach>
    </insert>

    <insert id="insLecturePersonInfo" parameterType="map">
        /*insLecturePersonInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
            (
                LEC_SN,
                PERSON_SN
            )
        VALUES
        <foreach collection="personList" item="item" separator=" , ">
            (
                #{pk},
                #{item.value}
            )
        </foreach>
    </insert>

    <insert id="insPersonData" parameterType="map">
        /*insPersonData*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
            (
                ID,
                PASSWORD,
                NAME,
                BIRTH,
                GENDER,
                CO_NAME,
                PART,
                PLACE,
                TEL_NUM,
                HP_NUM,
                FAX_NUM,
                REG_EMP_SEQ
            )
        VALUE
            (
                #{id},
                #{password},
                #{name},
                #{birth},
                #{gender},
                #{coName},
                #{part},
                #{place},
                #{telNum},
                #{hpNum},
                #{faxNum},
                #{regEmpSeq}
            )
        <selectKey keyProperty="personSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE_PERSON'
        </selectKey>
    </insert>

    <update id="updPersonData" parameterType="map">
        /*updPersonData*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        SET
            ID = #{id},
            PASSWORD = #{password},
            NAME = #{name},
            BIRTH = #{birth},
            GENDER = #{gender},
            CO_NAME = #{coName},
            PART = #{part},
            PLACE = #{place},
            TEL_NUM = #{telNum},
            HP_NUM = #{hpNum},
            FAX_NUM = #{faxNum},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            LEC_SN = #{pk}
    </update>

    <insert id="insLectureInfo" parameterType="map">
        /*insLectureInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE
            (
                PJT_SN,

                LEC_BUSN_CLASS,
                LEC_BUSN_CLASS_NAME,
                LEC_FIELD,
                LEC_FIELD_NAME,

                LEC_SBJ_CD,
                LEC_SBJ_CD_NAME,
                LEC_PS_CD,
                LEC_PS_CD_NAME,

                LEC_TITLE_BS,
                LEC_TITLE_PR,
                LEC_TOPIC,
                LEC_PS_GUIDE_A,
                LEC_PS_GUIDE_B,

                LEC_STR_DE,
                LEC_END_DE,
                RECR_STR_DE,
                RECR_END_DE,

                RECR_MEM_CNT,
                LEC_TIME,
                LEC_TIME_RNG,

                LEC_ADDR,
                LEC_STATUS,
                LEC_STATUS_NAME,

                LEC_OBJ,
                LEC_SUMR,
                LEC_TARG,
                LEC_SCH,
                LEC_INQ,
                LEC_MAT,

                LEC_COST,
                LEC_COST_EX,
                LEC_OPER,

                LEC_CERT,

                LEC_OPEN_BD,
                LEC_OPEN_BD_NAME,

                REG_EMP_SEQ
            )
        VALUE
            (
                #{pjtSn},

                #{projectType},
                #{projectTypeName},
                #{fieldType},
                #{fieldTypeName},

                #{curriculumType},
                #{curriculumTypeName},
                #{courseType},
                #{courseTypeName},

                #{lectureName},
                #{lectureNameEx},
                #{title},
                #{content1},
                #{content2},

                #{eduStartDt},
                #{eduEndDt},
                #{recruitStartDt},
                #{recruitEndDt},

                #{recruitNum},
                #{eduTime},
                #{eduTimeEx},

                #{area},
                #{status},
                #{statusName},

                #{goal},
                #{intro},
                #{targetUser},
                #{scheduleHtml},
                #{prospectus},
                #{materials},

                #{textbookFee},
                #{textbookFeeEx},
                #{methodType},

                #{certType},

                #{mainType},
                #{mainTypeName},

                #{regEmpSeq}
            )
        <selectKey keyProperty="lecSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE'
        </selectKey>
    </insert>

    <update id="updLectureInfo" parameterType="map">
        /*updLectureInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE
        SET
            LEC_BUSN_CLASS = #{projectType},
            LEC_BUSN_CLASS_NAME = #{projectTypeName},
            LEC_FIELD = #{fieldType},
            LEC_FIELD_NAME = #{fieldTypeName},
            LEC_SBJ_CD = #{curriculumType},
            LEC_SBJ_CD_NAME = #{curriculumTypeName},
            LEC_PS_CD = #{courseType},
            LEC_PS_CD_NAME = #{courseTypeName},
            LEC_TITLE_BS = #{lectureName},
            LEC_TITLE_PR = #{lectureNameEx},
            LEC_TOPIC = #{title},
            LEC_PS_GUIDE_A = #{content1},
            LEC_PS_GUIDE_B = #{content2},
            LEC_STR_DE = #{eduStartDt},
            LEC_END_DE = #{eduEndDt},
            RECR_STR_DE = #{recruitStartDt},
            RECR_END_DE = #{recruitEndDt},
            RECR_MEM_CNT = #{recruitNum},
            LEC_TIME = #{eduTime},
            LEC_TIME_RNG = #{eduTimeEx},
            LEC_ADDR = #{area},
            LEC_STATUS = #{status},
            LEC_STATUS_NAME = #{statusName},
            LEC_OBJ = #{goal},
            LEC_SUMR = #{intro},
            LEC_TARG = #{targetUser},
            LEC_SCH = #{scheduleHtml},
            LEC_INQ = #{prospectus},
            LEC_MAT = #{materials},
            LEC_COST = #{textbookFee},
            LEC_COST_EX = #{textbookFeeEx},
            LEC_OPER = #{methodType},
            LEC_CERT = #{certType},
            LEC_OPEN_BD = #{mainType},
            LEC_OPEN_BD_NAME = #{mainTypeName},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            LEC_SN = #{pk}
    </update>

    <update id="updPersonApp" parameterType="map">
        /*updPersonApp*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            REQ_STATUS = #{stat},
            REQ_STATUS_NAME = #{statText}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonPartic" parameterType="map">
        /*updPersonPartic*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            PARTIC_YN = #{stat}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonAudit" parameterType="map">
        /*updPersonAudit*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            AUDIT_YN = 'Y'
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonRefund" parameterType="map">
        /*updPersonRefund*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            REFUND_TYPE = #{stat}
            <if test='"R".equals(stat)'>
                , COST_YN = #{stat}
            </if>
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonPay" parameterType="map">
        /*updPersonPay*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            PAY_TYPE = #{payType},
            BILL_TYPE = #{billType},
            PAY_DT = #{payDt},
            COST_YN = 'Y',
            PAY_AMT = #{payAmt}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="delLecturePersonInfo" parameterType="map">
        /*delLecturePersonInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            ACTIVE = 'N'
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <delete id="delLectureTeacherInfo" parameterType="map">
        /*delLectureTeacherInfo*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        WHERE
            TEACHER_REQ_SN IN (${teacherList})
    </delete>

    <update id="updUnRndProjectInfoRes" parameterType="map">
        /*updUnRndProjectInfoRes*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = "S3",
            PJT_STEP_NM = "결과보고"
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndDelvApprStat" parameterType="map">
        /* updateUnRndDelvApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndDelvFinalApprStat" parameterType="map">
        /* updateUnRndDelvFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndResApprStat" parameterType="map">
        /* updateUnRndResApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndResFinalApprStat" parameterType="map">
        /* updateUnRndResFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>
</mapper>