<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="unRnd">

    <insert id="insSubjectInfo" parameterType="map">
        /* insSubjectInfo */
        INSERT INTO CAM_PJT_MNG.DJ_PROJECT
        (
            BUSN_CLASS,
            BUSN_NM,
            PJT_STEP,
            PJT_STEP_NM,
            BS_TITLE,
            YEAR_CLASS,
            SBJ_CLASS,
            SBJ_CHAR,
            SBJ_DEP,
            SBJ_DEP_SUB,
            SBJ_STAT_YN,
            PJT_CON_YEAR,
            STR_DT,
            END_DT,
            EMP_SEQ,
            EMP_NAME,
            DEPT_SEQ,
            DEPT_NAME,
            PJT_NM,
            CRM_SN,
            CRM_CON_SN,
            CRM_PART_SN,
            PJT_EXP_AMT,
            ALL_BUSN_COST,
            SECURITY,
            REG_EMP_SEQ
        )
        VALUES
        (
            #{busnClass},
            #{busnNm},
            #{pjtStep},
            #{pjtStepNm},
            #{bsTitle},
            #{yearClass},
            #{sbjClass},
            #{sbjChar},
            #{sbjDep},
            #{sbjDepSub},
            #{sbjStatYn},
            #{pjtConYear},
            #{strDt},
            #{endDt},
            #{empSeq},
            #{empName},
            #{deptSeq},
            #{deptName},
            #{pjtNm},
            #{crmSn},
            #{crmConSn},
            #{crmPartSn},
            #{pjtExpAmt},
            #{allBusnCost},
            #{security},
            #{regEmpSeq}
        )

        <selectKey keyProperty="pjtSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PROJECT'
        </selectKey>
    </insert>

    <update id="updSubjectInfo" parameterType="map">
        /*updSubjectInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            BS_TITLE = #{bsTitle},
            YEAR_CLASS = #{yearClass},
            SBJ_CLASS = #{sbjClass},
            SBJ_CHAR = #{sbjChar},
            SBJ_DEP = #{sbjDep},
            SBJ_DEP_SUB = #{sbjDepSub},
            SBJ_STAT_YN = #{sbjStatYn},
            PJT_CON_YEAR = #{pjtConYear},
            STR_DT = #{strDt},
            END_DT = #{endDt},
            EMP_SEQ = #{empSeq},
            EMP_NAME = #{empName},
            DEPT_SEQ = #{deptSeq},
            DEPT_NAME = #{deptName},
            PJT_NM = #{pjtNm},
            CRM_SN = #{crmSn},
            CRM_CON_SN = #{crmConSn},
            CRM_PART_SN = #{crmPartSn},
            ALL_BUSN_COST = #{allBusnCost},
            SECURITY = #{security},
            PJT_EXP_AMT = #{pjtExpAmt}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getUnRndDetail" parameterType="map" resultType="map">
        /*getUnRndDetail*/
        SELECT
            A.*, B.*,
            DI.APPRO_KEY,
            DI.DOC_MENU_CD
        FROM
            CAM_PJT_MNG.DJ_PJT_UNRND A
        LEFT JOIN
            CAM_COMMON.DJ_FILE_INFO B ON A.UN_RND_FILE_SN = B.file_no
        LEFT JOIN
            DJ_CAMTIC.A_DOC_INFO DI ON A.DOC_ID = DI.DOC_ID
        WHERE
            A.PJT_SN = #{pjtSn}
    </select>

    <insert id="insUnRndDetail" parameterType="map">
        /*insUnRndDetail*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_UNRND
            (
                PJT_SN,
                MNG_DEPT_SEQ,
                MNG_DEPT_NAME,
                MNG_EMP_SEQ,
                MNG_EMP_NAME,
                ALL_RES_COST,
                ALL_BUSN_COST,
                PEO_RES_COST,
                PEO_RES_ITEM,
                TOT_RES_COST,
                UN_RND_OBJ,
                UN_RND_ETC,
                NOW_STR_DE,
                NOW_END_DE,
                UN_RND_CONT
            )
        VALUE
            (
                #{pjtSn},
                #{mngDeptSeq},
                #{mngDeptName},
                #{mngEmpSeq},
                #{mngEmpName},
                #{allResCost},
                #{allBusnCost},
                #{peoResCost},
                #{peoResItem},
                #{totResCost},
                #{unRndObj},
                #{unRndEtc},
                #{nowStrDe},
                #{nowEndDe},
                #{unRndCont}
            )
        <selectKey keyProperty="unRndSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_UNRND'
        </selectKey>
    </insert>

    <insert id="insUnRndDetail2" parameterType="map">
        /*insUnRndDetail2*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_UNRND
            (
                PJT_SN,
                MNG_DEPT_SEQ,
                MNG_DEPT_NAME,
                MNG_EMP_SEQ,
                MNG_EMP_NAME
            )
        VALUE
            (
                #{pjtSn},
                #{mngDeptSeq},
                #{mngDeptName},
                #{mngEmpSeq},
                #{mngEmpName}
            )
        <selectKey keyProperty="unRndSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_UNRND'
        </selectKey>
    </insert>

    <update id="updUnRndDetail" parameterType="map">
        /*updUnRndDetail*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            MNG_DEPT_SEQ = #{mngDeptSeq},
            MNG_DEPT_NAME = #{mngDeptName},
            MNG_EMP_SEQ = #{mngEmpSeq},
            MNG_EMP_NAME = #{mngEmpName},
            ALL_BUSN_COST = #{allBusnCost},
            ALL_RES_COST = #{allResCost},
            PEO_RES_COST = #{peoResCost},
            PEO_RES_ITEM = #{peoResItem},
            TOT_RES_COST = #{totResCost},
            UN_RND_OBJ = #{unRndObj},
            UN_RND_ETC = #{unRndEtc},
            NOW_STR_DE = #{nowStrDe},
            NOW_END_DE = #{nowEndDe},
            UN_RND_CONT = #{unRndCont}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updUnRndDetail2" parameterType="map">
        /*updUnRndDetail2*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            MNG_DEPT_SEQ = #{mngDeptSeq},
            MNG_DEPT_NAME = #{mngDeptName},
            MNG_EMP_SEQ = #{mngEmpSeq},
            MNG_EMP_NAME = #{mngEmpName}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updUnRndFileSn" parameterType="map">
        /*updUnRndFileSn*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            UN_RND_FILE_SN = #{file_no}
        WHERE
            UN_RND_SN = #{unRndSn}
    </update>

    <update id="updUnRndTotResCost" parameterType="map">
        /*updUnRndTotResCost*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            TOT_RES_COST = (SELECT IFNULL(SUM(CB_BUDGET), 0) AS TOTAL_AMT FROM CAM_PJT_MNG.DJ_PJT_CB
                            WHERE PJT_SN = #{pjtSn}
                              AND
                                ( ACCOUNT IN (SELECT IS_TYPE FROM CAM_PJT_MNG.DJ_PJT_ACCOUNT SSA WHERE PJT_SN = #{pjtSn})
                                    OR ACCOUNT = CASE WHEN (SELECT COUNT(IS_TYPE) FROM CAM_PJT_MNG.DJ_PJT_ACCOUNT SSA WHERE PJT_SN = #{pjtSn} AND IS_TYPE = '9') = 1 THEN '6' ELSE NULL END)),

            PEO_RES_COST = (SELECT IFNULL(SUM(CB_BUDGET), 0) AS TOTAL_AMT FROM CAM_PJT_MNG.DJ_PJT_CB
                            WHERE PJT_SN = #{pjtSn}
                              AND
                                ( ACCOUNT IN (SELECT IS_TYPE FROM CAM_PJT_MNG.DJ_PJT_ACCOUNT SSA WHERE PJT_SN = #{pjtSn})
                                    OR ACCOUNT = CASE WHEN (SELECT COUNT(IS_TYPE) FROM CAM_PJT_MNG.DJ_PJT_ACCOUNT SSA WHERE PJT_SN = #{pjtSn} AND IS_TYPE = '9') = 1 THEN '6' ELSE NULL END))
        WHERE
            UN_RND_SN = #{unRndSn}
    </update>

    <update id="updUnRndTotResCost2" parameterType="map">
        /*updUnRndTotResCost2*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            TOT_RES_COST = (SELECT IFNULL(SUM(CB_BUDGET), 0) AS TOTAL_AMT FROM CAM_PJT_MNG.DJ_PJT_CB
                            WHERE PJT_SN = #{pjtSn}
                              AND ACCOUNT = '0'),

            PEO_RES_COST = (SELECT IFNULL(SUM(CB_BUDGET), 0) AS TOTAL_AMT FROM CAM_PJT_MNG.DJ_PJT_CB
                            WHERE PJT_SN = #{pjtSn}
                              AND ACCOUNT = '0')
        WHERE
            UN_RND_SN = #{unRndSn}
    </update>

    <update id="setDelvApprove" parameterType="map">
        /*setDelvApprove*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = 100
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updUnRndProjectInfo" parameterType="map">
        /*updUnRndProjectInfo*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = "S2",
            PJT_STEP_NM = "수주보고",
            PJT_AMT = IFNULL((SELECT IF(DDS.TAX_GUBUN = 1, SUBSTRING_INDEX((SELECT TOT_RES_COST FROM CAM_PJT_MNG.DJ_PJT_UNRND WHERE PJT_SN = A.PJT_SN) / 1.1, '.', 1), (SELECT TOT_RES_COST FROM CAM_PJT_MNG.updUnRndProjectInfo WHERE PJT_SN = A.PJT_SN)) FROM CAM_PJT_MNG.DJ_PROJECT A
                       LEFT JOIN CAM_MNG.DJ_DEPO_SETTING DDS ON A.PJT_SN = DDS.FR_PJT_SN
                       WHERE A.PJT_SN = #{pjtSn}), 0)
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPersonList" parameterType="map" resultType="map">
        /*getPersonList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        WHERE 1=1
        <if test='notIn != null and !"".equals(notIn)'>
            AND PERSON_SN NOT IN (
                SELECT
                    PERSON_SN
                FROM
                    CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
                WHERE
                    LEC_SN = #{notIn}
                AND ACTIVE = 'Y'
            )
        </if>
        <if test="sEmpName != null and sEmpName != ''">
            AND NAME LIKE CONCAT('%', #{sEmpName}, '%')
        </if>
        <if test="lectureType == 'newLecture' and lectureType != null and lectureType != ''">
            AND EXISTING_YN = 'N'
        </if>
        <if test="lectureType == 'existingLecture' and lectureType != null and lectureType != ''">
            AND EXISTING_YN = 'Y'
        </if>

        AND ACTIVE = 'Y'
        ORDER BY NAME
    </select>

    <select id="getPersonReqData" parameterType="map" resultType="map">
        /*getPersonReqData*/
        SELECT
            A.PERSON_REQ_SN,
            B.*
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON B ON A.PERSON_SN = B.PERSON_SN
        WHERE A.PERSON_REQ_SN = #{personReqSn}
        GROUP BY B.PERSON_SN
    </select>

    <select id="getPersonData" parameterType="map" resultType="map">
        /*getPersonData*/
        SELECT
            A.*,
            B.CRM_NM
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON A
        LEFT JOIN
            CAM_CRM.DJ_CRM_INFO B ON A.CRM_SN = B.CRM_SN
        WHERE PERSON_SN = #{personSn}
    </select>

    <select id="getTeacherData" parameterType="map" resultType="map">
        /*getTeacherData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        WHERE TEACHER_SN = #{teacherSn}
    </select>

    <select id="getLectureTeacherList" parameterType="map" resultType="map">
        /*getLectureTeacherList*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        WHERE 1=1
        <if test='notIn != null and !"".equals(notIn)'>
            AND TEACHER_SN NOT IN (
                SELECT
                    TEACHER_SN
                FROM
                    CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
                WHERE
                    LEC_SN = #{notIn}
            )
        </if>
        <if test="sEmpName != null and sEmpName != ''">
            AND NAME LIKE CONCAT('%', #{sEmpName}, '%')
        </if>
        <if test="teacherType == 'newTeacher' and teacherType != null and teacherType != ''">
            AND PERSON_SN != '0'
        </if>
        <if test="teacherType == 'existingTeacher' and teacherType != null and teacherType != ''">
            AND PERSON_SN = '0'
        </if>
        AND ACTIVE = 'Y'
        ORDER BY NAME
    </select>

    <select id="getConTeacherList" parameterType="map" resultType="map">
        /*getConTeacherList*/
        SELECT
        *
        FROM
        CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        WHERE 1=1
        <if test='notIn != null and !"".equals(notIn)'>
            AND TEACHER_SN NOT IN (
            SELECT
            TEACHER_SN
            FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
            WHERE
            CON_SN = #{notIn}
            )
        </if>
        <if test="sEmpName != null and sEmpName != ''">
            AND NAME LIKE CONCAT('%', #{sEmpName}, '%')
        </if>
        <if test="teacherType == 'newTeacher' and teacherType != null and teacherType != ''">
            AND PERSON_SN != '0'
        </if>
        <if test="teacherType == 'existingTeacher' and teacherType != null and teacherType != ''">
            AND PERSON_SN = '0'
        </if>
        AND ACTIVE = 'Y'
        ORDER BY NAME
    </select>

    <select id="getLectureTeacherReqList" parameterType="map" resultType="map">
        /*getLectureTeacherReqList*/
        SELECT
            A.*,
            B.NAME,
            B.PERSON_SN,
            IFNULL(A.TEACH_TIME, '') AS teachTime
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER B ON A.TEACHER_SN = B.TEACHER_SN
        WHERE
            LEC_SN = #{pk}
        ORDER BY NAME
    </select>

    <select id="getConTeacherReqList" parameterType="map" resultType="map">
        /*getConTeacherReqList*/
        SELECT
            A.*,
            B.NAME,
            B.PERSON_SN,
            IFNULL(A.TEACH_TIME, '') AS teachTime
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ A
                LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER B ON A.TEACHER_SN = B.TEACHER_SN
        WHERE
            CON_SN = #{pk}
        ORDER BY NAME
    </select>

    <select id="getLecturePersonReqList" parameterType="map" resultType="map">
        /*getLecturePersonReqList*/
        SELECT
            A.*,
            DATE_FORMAT(A.REG_DT, '%Y-%m-%d') AS REG_DATE,
            B.*,
            C.LEC_COST
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON B ON A.PERSON_SN = B.PERSON_SN
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE C ON A.LEC_SN = C.LEC_SN
        WHERE
            A.LEC_SN = #{pk}
        AND A.ACTIVE = 'Y'
        <if test='personList != null and !"".equals(personList)'>
            AND A.PERSON_SN IN (${personList})
        </if>
        ORDER BY NAME
    </select>

    <select id="getLecturePersonDupleCk" parameterType="map" resultType="map">
        /*getLecturePersonDupleCk*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        WHERE
            ID = #{id}
    </select>

    <select id="getLectureList" parameterType="map" resultType="map">
        /*getLectureList*/
        SELECT
            PL.*,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN) AS TOT_B,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'H') AS TOT_C,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'Y') AS TOT_D,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'N') AS TOT_E,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.LEC_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'O') AS TOT_F
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE PL
        WHERE PJT_SN = #{pjtSn}
        AND ACTIVE = 'Y'
        ORDER BY LEC_SN DESC
    </select>

    <select id="getConsultingList" parameterType="map" resultType="map">
        /*getConsultingList*/
        SELECT
            PL.*,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.CON_SN = SLP.LEC_SN) AS TOT_B,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.CON_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'H') AS TOT_C,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.CON_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'Y') AS TOT_D,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.CON_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'N') AS TOT_E,
            (SELECT IFNULL(COUNT(-1), 0) FROM CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ SLP WHERE PL.CON_SN = SLP.LEC_SN AND SLP.REQ_STATUS = 'O') AS TOT_F
        FROM
            CAM_PJT_MNG.DJ_PJT_CONSULTING PL
        WHERE PJT_SN = #{pjtSn}
        AND ACTIVE = 'Y'
        ORDER BY CON_SN DESC
    </select>

    <select id="getLectureInfo" parameterType="map" resultType="map">
        /*getLectureInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE
        WHERE
            LEC_SN = #{pk}
    </select>

    <select id="getLectureTeacherInfo" parameterType="map" resultType="map">
        /*getLectureTeacherInfo*/
        SELECT
            A.*,
            B.*,
            IFNULL(A.TEACH_TIME, 0) AS teachTime
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ A
                LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER B ON A.TEACHER_SN = B.TEACHER_SN
        WHERE
            LEC_SN = #{pk}

    </select>

    <select id="getConsultingInfo" parameterType="map" resultType="map">
        /*getConsultingInfo*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_CONSULTING
        WHERE
            CON_SN = #{pk}
    </select>

    <select id="getConsultingTeacherInfo" parameterType="map" resultType="map">
        /*getConsultingTeacherInfo*/
        SELECT
            A.*,
            B.*,
            IFNULL(A.TEACH_TIME, 0) AS teachTime
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ A
        LEFT JOIN
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER B ON A.TEACHER_SN = B.TEACHER_SN
        WHERE
            CON_SN = #{pk}

    </select>

    <insert id="insLectureTeacherInfo" parameterType="map">
        /*insLectureTeacherInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
            (
                LEC_SN,
                TEACHER_SN
            )
        VALUES
        <foreach collection="teacherList" item="item" separator=" , ">
            (
                #{pk},
                #{item.value}
            )
        </foreach>
    </insert>

    <insert id="insConTeacherInfo" parameterType="map">
        /*insConTeacherInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        (
        CON_SN,
        TEACHER_SN
        )
        VALUES
        <foreach collection="teacherList" item="item" separator=" , ">
            (
            #{pk},
            #{item.value}
            )
        </foreach>
    </insert>

    <update id="updConTeacherInfo" parameterType="map">
        /*updConTeacherInfo*/
        <foreach collection="teacherList" item="item" separator=" ; ">
            UPDATE
                CAM_PJT_MNG.DJ_PJT_CONSULTING
            SET
                CON_TC_SN = #{item.value}
            WHERE
                CON_SN = #{pk}
        </foreach>
    </update>

    <insert id="insLecturePersonInfo" parameterType="map">
        /*insLecturePersonInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
            (
                LEC_SN,
                PERSON_SN
            )
        VALUES
        <foreach collection="personList" item="item" separator=" , ">
            (
                #{pk},
                #{item.value}
            )
        </foreach>
    </insert>

    <insert id="insPersonData" parameterType="map">
        /*insPersonData*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        (
            PASSWORD,
            NAME,
            BIRTH,
            GENDER,
            ZIP_CODE,
            ADDRESS,
            ADDRESS_DETAIL,
            TEL_NUM,
            HP_NUM,
            EMAIL,
            MAIL_YN,
            CRM_SN,
            USER_TYPE,
            SCHOOL_MAJOR,
            REG_EMP_SEQ,
            REG_DT
        )
        VALUE
        (
            #{password},
            #{name},
            #{birth},
            #{gender},
            #{zipCode},
            #{address},
            #{addressDetail},
            #{telNum},
            #{hpNum},
            #{email},
            #{mailSv},
            #{crmSn},
            #{joinType},
            #{schoolMajor},
            #{regEmpSeq},
            NOW()
        )
        <selectKey keyProperty="personSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE_PERSON'
        </selectKey>
    </insert>

    <update id="updPersonData" parameterType="map">
        /*updPersonData*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        SET
            PASSWORD = #{password},
            NAME = #{name},
            BIRTH = #{birth},
            GENDER = #{gender},
            ZIP_CODE = #{zipCode},
            ADDRESS = #{address},
            ADDRESS_DETAIL = #{addressDetail},
            TEL_NUM = #{telNum},
            HP_NUM = #{hpNum},
            EMAIL = #{email},
            MAIL_YN = #{mailSv},
            CRM_SN = #{crmSn},
            USER_TYPE = #{joinType},
            SCHOOL_MAJOR = #{schoolMajor},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            PERSON_SN = #{personSn}
    </update>

    <insert id="insTeacherData" parameterType="map">
        /*insTeacherData*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
            (
                NAME,
                BIRTH,
                GENDER,
                BELONG,
                PART,
                PLACE,
                TEL_NUM,
                HP_NUM,
                FAX_NUM,
                EMAIL,
                BANK_NAME,
                BANK_ACCOUNT,
                BANK_USER,
                REG_EMP_SEQ
            )
        VALUE
            (
                #{name},
                #{birth},
                #{gender},
                #{coName},
                #{part},
                #{place},
                #{telNum},
                #{hpNum},
                #{faxNum},
                #{email},
                #{bankName},
                #{bankAccount},
                #{bankUser},
                #{regEmpSeq}
            )
        <selectKey keyProperty="teacherSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE_TEACHER'
        </selectKey>
    </insert>

    <update id="updTeacherData" parameterType="map">
        /*updTeacherData*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        SET
            NAME = #{name},
            BIRTH = #{birth},
            GENDER = #{gender},
            BELONG = #{coName},
            PART = #{part},
            PLACE = #{place},
            TEL_NUM = #{telNum},
            HP_NUM = #{hpNum},
            FAX_NUM = #{faxNum},
            PLACE = #{place},
            EMAIL = #{email},
            BANK_NAME = #{bankName},
            BANK_USER = #{bankUser},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            TEACHER_SN = #{teacherSn}
    </update>

    <update id="delPersonData" parameterType="map">
        /*delPersonData*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        SET
            ACTIVE = 'N'
        WHERE
            PERSON_SN = #{personSn}
    </update>

    <update id="delTeacherData" parameterType="map">
        /*delTeacherData*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER
        SET
            ACTIVE = 'N'
        WHERE
            TEACHER_SN = #{teacherSn}
    </update>

    <insert id="insLectureInfo" parameterType="map">
        /*insLectureInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE
            (
                PJT_SN,
                LEC_BUSN_CLASS,
                LEC_BUSN_CLASS_NAME,
                LEC_FIELD,
                LEC_FIELD_NAME,
                LEC_FIELD1,
                LEC_FIELD_NAME1,
                LEC_SBJ_CD,
                LEC_SBJ_CD_NAME,
                LEC_PS_CD,
                LEC_PS_CD_NAME,
                LEC_TITLE_BS,
                LEC_TITLE_PR,
                LEC_TOPIC,
                LEC_PS_GUIDE_A,
                LEC_PS_GUIDE_B,
                LEC_STR_DE,
                LEC_END_DE,
                RECR_STR_DE,
                RECR_END_DE,
                RECR_MEM_CNT,
                LEC_TIME,
                LEC_TIME_RNG,
                LEC_ADDR,
                LEC_STATUS,
                LEC_STATUS_NAME,
                LEC_OBJ,
                LEC_SUMR,
                LEC_TARG,
                LEC_SCH,
                LEC_INQ,
                LEC_MAT,
                LEC_COST_EX,
                LEC_OPER_TYPE_N,
                LEC_OPER_TYPE_C,
                LEC_OPER_TYPE_S,
                LEC_OPER_TYPE_H,
                LEC_OPER_PR,
                LEC_CERT,
                LEC_OPEN_BD,
                LEC_OPEN_BD_NAME,
                REG_EMP_SEQ,
                LEC_BOOK_IMG_SN,
                LEC_APPL_SN,
                LEC_MAIN_IMG_SN
            )
        VALUE
            (
                #{pjtSn},

                #{projectType},
                #{projectTypeName},
                #{fieldType},
                #{fieldTypeName},
                #{fieldType1},
                #{fieldTypeName1},

                #{curriculumType},
                #{curriculumTypeName},
                #{courseType},
                #{courseTypeName},

                #{lectureName},
                #{lectureNameEx},
                #{title},
                #{content1},
                #{content2},

                #{eduStartDt},
                #{eduEndDt},
                #{recruitStartDt},
                #{recruitEndDt},

                #{recruitNum},
                #{eduTime},
                #{eduTimeEx},

                #{area},
                #{status},
                #{statusName},

                #{goal},
                #{intro},
                #{targetUser},
                #{scheduleHtml},
                #{prospectus},
                #{materials},

                #{textbookFeeEx},
                #{typeN},
                #{typeC},
                #{typeS},
                #{typeH},
                #{methodTypePr},

                #{certType},

                #{mainType},
                #{mainTypeName},

                #{regEmpSeq},
                #{lecBookImgSn},
                #{lecApplSn},
                #{lecMainImgSn}
            )
        <selectKey keyProperty="lecSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE'
        </selectKey>
    </insert>

    <insert id="insConsultingInfo" parameterType="map">
        /*insConsultingInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_CONSULTING
        (
            PJT_SN,
            CON_TC_SN,
            CON_BUSN_CLASS,
            CON_BUSN_CLASS_NAME,

            CON_FIELD,
            CON_FIELD_NAME,
            CON_FIELD1,
            CON_FIELD_NAME1,
            CON_FIELD_NAME2,

            CON_TITLE_PR,
            CON_TOPIC,
            CON_STR_DE,
            CON_END_DE,

            CON_TIME,
            RECR_MEM_CNT,
            CON_ADDR,
            CON_COST,
            CON_PER,

            CON_OPEN_BD,
            CON_OPEN_BD_NAME,
            REG_DT,
            REG_EMP_SEQ
        )
        VALUE
        (
            #{pjtSn},
            #{teacherSn},
            #{projectType},
            #{projectTypeName},

            #{fieldType},
            #{fieldTypeName},
            #{fieldType1},
            #{fieldTypeName1},
            #{fieldTypeName2},

            #{conTitle},
            #{conDetailTitle},
            #{agmStartDt},
            #{agmEndDt},

            #{conTime},
            #{conNum},
            #{conArea},
            #{conCost},
            #{conPerson},

            #{mainType},
            #{mainTypeName},
            NOW(),
            #{regEmpSeq}
        )
        <selectKey keyProperty="conSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_CONSULTING'
        </selectKey>
    </insert>

    <update id="updLectureInfo" parameterType="map">
        /*updLectureInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE
        SET
            LEC_BUSN_CLASS = #{projectType},
            LEC_BUSN_CLASS_NAME = #{projectTypeName},
            LEC_FIELD = #{fieldType},
            LEC_FIELD_NAME = #{fieldTypeName},
            LEC_FIELD1 = #{fieldType1},
            LEC_FIELD_NAME1 = #{fieldTypeName1},
            LEC_SBJ_CD = #{curriculumType},
            LEC_SBJ_CD_NAME = #{curriculumTypeName},
            LEC_PS_CD = #{courseType},
            LEC_PS_CD_NAME = #{courseTypeName},
            LEC_TITLE_BS = #{lectureName},
            LEC_TITLE_PR = #{lectureNameEx},
            LEC_TOPIC = #{title},
            LEC_PS_GUIDE_A = #{content1},
            LEC_PS_GUIDE_B = #{content2},
            LEC_STR_DE = #{eduStartDt},
            LEC_END_DE = #{eduEndDt},
            RECR_STR_DE = #{recruitStartDt},
            RECR_END_DE = #{recruitEndDt},
            RECR_MEM_CNT = #{recruitNum},
            LEC_TIME = #{eduTime},
            LEC_TIME_RNG = #{eduTimeEx},
            LEC_ADDR = #{area},
            LEC_STATUS = #{status},
            LEC_STATUS_NAME = #{statusName},
            LEC_OBJ = #{goal},
            LEC_SUMR = #{intro},
            LEC_TARG = #{targetUser},
            LEC_SCH = #{scheduleHtml},
            LEC_INQ = #{prospectus},
            LEC_MAT = #{materials},
            LEC_COST_EX = #{textbookFeeEx},
            LEC_OPER_TYPE_N = #{typeN},
            LEC_OPER_TYPE_C = #{typeC},
            LEC_OPER_TYPE_S = #{typeS},
            LEC_OPER_TYPE_H = #{typeH},
            LEC_OPER_PR = #{methodTypePr},
            LEC_CERT = #{certType},
            LEC_OPEN_BD = #{mainType},
            LEC_OPEN_BD_NAME = #{mainTypeName},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW(),
            LEC_BOOK_IMG_SN = #{lecBookImgSn},
            LEC_APPL_SN = #{lecApplSn},
            LEC_MAIN_IMG_SN = #{lecMainImgSn}
        WHERE
            LEC_SN = #{pk}
    </update>

    <update id="updLectureInfo2" parameterType="map">
        /*updLectureInfo2*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE
        SET
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW(),
            LEC_APPL_SN = #{lecApplSn}
        WHERE
            LEC_SN = #{pk}
    </update>

    <update id="updLectureTime" parameterType="map">
        /*updLectureInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE
        SET
            LEC_TIME = #{eduTime}
        WHERE
            LEC_SN = #{pk}
    </update>

    <update id="updConsultingInfo" parameterType="map">
        /*updConsultingInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_CONSULTING
        SET
            CON_BUSN_CLASS = #{projectType},
            CON_BUSN_CLASS_NAME = #{projectTypeName},
            CON_FIELD = #{fieldType},
            CON_FIELD_NAME = #{fieldTypeName},
            CON_FIELD1 = #{fieldType1},
            CON_FIELD_NAME1 = #{fieldTypeName1},
            CON_FIELD_NAME2 = #{fieldTypeName2},
            CON_TITLE_PR = #{conTitle},
            CON_TOPIC = #{conDetailTitle},
            CON_STR_DE = #{agmStartDt},
            CON_END_DE = #{agmEndDt},
            CON_TIME = #{conTime},
            RECR_MEM_CNT = #{conNum},
            CON_ADDR = #{conArea},
            CON_COST = #{conCost},
            CON_PER = #{conPerson},
            CON_OPEN_BD = #{mainType},
            CON_OPEN_BD_NAME = #{mainTypeName},
            MOD_EMP_SEQ = #{regEmpSeq},
            MOD_DT = NOW()
        WHERE
            CON_SN = #{pk}
    </update>

    <update id="updConsultingTime" parameterType="map">
        /*updConsultingTime*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_CONSULTING
        SET
            CON_TIME = #{conTime}
        WHERE
            CON_SN = #{pk}
    </update>

    <update id="updPersonApp" parameterType="map">
        /*updPersonApp*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            REQ_STATUS = #{stat},
            REQ_STATUS_NAME = #{statText}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonPartic" parameterType="map">
        /*updPersonPartic*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            PARTIC_YN = #{stat}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonAudit" parameterType="map">
        /*updPersonAudit*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            AUDIT_YN = 'Y'
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonRefund" parameterType="map">
        /*updPersonRefund*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            REFUND_TYPE = #{stat}
            <if test='"R".equals(stat)'>
                , COST_YN = #{stat}
            </if>
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="updPersonPay" parameterType="map">
        /*updPersonPay*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            PAY_TYPE = #{payType},
            BILL_TYPE = #{billType},
            PAY_DT = #{payDt},
            COST_YN = 'Y',
            PAY_AMT = #{payAmt}
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <update id="delLecturePersonInfo" parameterType="map">
        /*delLecturePersonInfo*/
        UPDATE
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON_REQ
        SET
            ACTIVE = 'N'
        WHERE
            LEC_SN = #{pk}
        AND PERSON_SN IN (${personList})
        AND ACTIVE = 'Y'
    </update>

    <delete id="delLectureTeacherInfo" parameterType="map">
        /*delLectureTeacherInfo*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        WHERE
            TEACHER_REQ_SN IN (${teacherList})
    </delete>

    <delete id="delConTeacherInfo" parameterType="map">
        /*delConTeacherInfo*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        WHERE
            TEACHER_REQ_SN IN (${teacherList})
    </delete>

    <update id="insConTeacherTimeInfo" parameterType="map">
        /*updUnRndProjectInfoRes*/
        UPDATE CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        SET
            TEACH_TIME = #{teachTime}
        WHERE
            TEACHER_REQ_SN = #{teacherReqSn}
    </update>

    <update id="updUnRndProjectInfoRes" parameterType="map">
        /*updUnRndProjectInfoRes*/
        UPDATE CAM_PJT_MNG.DJ_PROJECT
        SET
            PJT_STEP = "S3",
            PJT_STEP_NM = "결과보고"
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndDelvApprStat" parameterType="map">
        /* updateUnRndDelvApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndDelvFinalApprStat" parameterType="map">
        /* updateUnRndDelvFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_UNRND
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndResApprStat" parameterType="map">
        /* updateUnRndResApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            DOC_ID = #{docId}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <update id="updateUnRndResFinalApprStat" parameterType="map">
        /* updateUnRndResFinalApprStat */
        UPDATE CAM_PJT_MNG.DJ_PJT_RESULT
        SET
            STATUS = #{approveStatCode},
            APPROVAL_DATE = DATE_FORMAT(NOW(), '%Y-%m-%d'),
            APPROVAL_EMP_SEQ = #{empSeq}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <insert id="insUnitBusnInfo" parameterType="map">
        /*insUnitBusnInfo*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_UNIT
            (
                PJT_SN,
                LEC_NM,
                STR_DT,
                END_DT,
                UNIT_OBJ,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtSn},
                #{lecNm},
                #{strDt},
                #{endDt},
                #{unitObj},
                #{regEmpSeq}
            )
        <selectKey keyProperty="pjtUnitSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_UNIT'
        </selectKey>
    </insert>

    <update id="updUnitBusnInfo" parameterType="map">
        /*updUnitBusnInfo*/
        UPDATE CAM_PJT_MNG.DJ_PJT_UNIT
        SET
            LEC_NM = #{lecNm},
            STR_DT = #{strDt},
            END_DT = #{endDt},
            UNIT_OBJ = #{unitObj}
        WHERE
            PJT_SN = #{pjtSn}
    </update>

    <select id="getPjtUnitData" parameterType="map" resultType="map">
        /*getPjtUnitData*/
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_UNIT
        WHERE
            PJT_UNIT_SN = #{pjtUnitSn}
    </select>

    <select id="getUnitBusnList" parameterType="map" resultType="map">
        /*getUnitBusnList*/
        SELECT
            A.*,
            (SELECT COUNT(*) FROM CAM_PJT_MNG.DJ_PJT_UNIT_DET WHERE PJT_UNIT_SN = A.PJT_UNIT_SN) CRM_CNT
        FROM
            CAM_PJT_MNG.DJ_PJT_UNIT A
        WHERE
            PJT_SN = #{pjtSn}
    </select>

    <delete id="delUnitBusn" parameterType="map">
        /*delUnitBusn*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_UNIT WHERE PJT_UNIT_SN = #{pjtUnitSn}
    </delete>

    <insert id="insUnitBusnItem" parameterType="map">
        /*insUnitBusnItem*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_UNIT_DET
            (
                PJT_UNIT_SN,
                CRM_SN,
                CRM_NM,
                BUSN_AMT,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{pjtUnitSn},
                #{crmSn},
                #{crmNm},
                #{busnAmt},
                #{regEmpSeq}
            )
    </insert>

    <delete id="delUnitBusnItem" parameterType="map">
        /*delUnitBusnItem*/
        DELETE FROM CAM_PJT_MNG.DJ_PJT_UNIT_DET WHERE PJT_UNIT_SN = #{pjtUnitSn}
    </delete>

    <select id="getPjtUnitCrmList" parameterType="map" resultType="map">
        /*getPjtUnitCrmList*/
        SELECT
            A.*,
            IFNULL((SELECT SUM(PURC_ITEM_AMT) FROM CAM_MNG.DJ_MNG_PURC_ITEM WHERE PURC_SN IN (SELECT PURC_SN FROM CAM_MNG.DJ_MNG_PURC WHERE PJT_UNIT_SN = A.PJT_UNIT_SN AND UNIT_CRM_SN = A.CRM_SN)),0) AS SUM_AMT
        FROM
            CAM_PJT_MNG.DJ_PJT_UNIT_DET A
        WHERE
            PJT_UNIT_SN = #{pjtUnitSn}
    </select>

    <update id="updPurcUnitCrm" parameterType="map">
        /*updPurcUnitCrm*/
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            UNIT_CRM_SN = #{crmSn},
            PJT_UNIT_SN = #{pjtUnitSn}
        WHERE
            PURC_SN = #{purcSn}
    </update>

    <update id="updPurcPjtUnitDetSn" parameterType="map">
        /*updPurcPjtUnitDetSn*/
        UPDATE CAM_MNG.DJ_MNG_PURC
        SET
            PJT_UNIT_SN = null,
            UNIT_CRM_SN = null
        WHERE
            PJT_UNIT_SN = #{pjtUnitSn} AND
            UNIT_CRM_SN = #{unitCrmSn}
    </update>

    <update id="delLecture" parameterType="map">
        /*delLecture*/
        UPDATE CAM_PJT_MNG.DJ_PJT_LECTURE
        SET
            ACTIVE = 'N'
        WHERE
            LEC_SN = #{pk}
    </update>

    <update id="delConsulting" parameterType="map">
        /*delConsulting*/
        UPDATE CAM_PJT_MNG.DJ_PJT_CONSULTING
        SET
            ACTIVE = 'N'
        WHERE
            CON_SN = #{pk}
    </update>

    <insert id="setLecCopyInsert" parameterType="map">
        /*setLecCopyInsert*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE (
            PJT_SN,
            LEC_BUSN_CLASS,
            LEC_BUSN_CLASS_NAME,
            LEC_FIELD,
            LEC_FIELD1,
            LEC_FIELD_NAME,
            LEC_FIELD_NAME1,
            LEC_SBJ_CD,
            LEC_SBJ_CD_NAME,
            LEC_PS_CD,
            LEC_PS_CD_NAME,
            LEC_TITLE_BS,
            LEC_TITLE_PR,
            LEC_TOPIC,
            LEC_PS_GUIDE_A,
            LEC_PS_GUIDE_B,
            LEC_STR_DE,
            LEC_END_DE,
            LEC_TIME,
            LEC_TIME_RNG,
            RECR_STR_DE,
            RECR_END_DE,
            RECR_MEM_CNT,
            LEC_ADDR,
            LEC_STATUS,
            LEC_STATUS_NAME,
            LEC_OBJ,
            LEC_SUMR,
            LEC_TARG,
            LEC_SCH,
            LEC_INQ,
            LEC_MAT,
            LEC_COST,
            LEC_COST_EX,
            LEC_OPER,
            LEC_OPER_TYPE_N,
            LEC_OPER_TYPE_C,
            LEC_OPER_TYPE_S,
            LEC_OPER_TYPE_H,
            LEC_OPER_PR,
            LEC_CERT,
            LEC_OPEN_BD,
            LEC_OPEN_BD_NAME,
            LEC_BOOK_IMG_SN,
            LEC_APPL_SN,
            LEC_MAIN_IMG_SN,
            MAIL_FILE_SN_A,
            MAIL_FILE_SN_B,
            REG_DT,
            REG_EMP_SEQ
        )
        SELECT
            PJT_SN,
            LEC_BUSN_CLASS,
            LEC_BUSN_CLASS_NAME,
            LEC_FIELD,
            LEC_FIELD1,
            LEC_FIELD_NAME,
            LEC_FIELD_NAME1,
            LEC_SBJ_CD,
            LEC_SBJ_CD_NAME,
            LEC_PS_CD,
            LEC_PS_CD_NAME,
            LEC_TITLE_BS,
            LEC_TITLE_PR,
            LEC_TOPIC,
            LEC_PS_GUIDE_A,
            LEC_PS_GUIDE_B,
            LEC_STR_DE,
            LEC_END_DE,
            LEC_TIME,
            LEC_TIME_RNG,
            RECR_STR_DE,
            RECR_END_DE,
            RECR_MEM_CNT,
            LEC_ADDR,
            LEC_STATUS,
            LEC_STATUS_NAME,
            LEC_OBJ,
            LEC_SUMR,
            LEC_TARG,
            LEC_SCH,
            LEC_INQ,
            LEC_MAT,
            LEC_COST,
            LEC_COST_EX,
            LEC_OPER,
            LEC_OPER_TYPE_N,
            LEC_OPER_TYPE_C,
            LEC_OPER_TYPE_S,
            LEC_OPER_TYPE_H,
            LEC_OPER_PR,
            LEC_CERT,
            LEC_OPEN_BD,
            LEC_OPEN_BD_NAME,
            LEC_BOOK_IMG_SN,
            LEC_APPL_SN,
            LEC_MAIN_IMG_SN,
            MAIL_FILE_SN_A,
            MAIL_FILE_SN_B,
            REG_DT,
            REG_EMP_SEQ
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE
        WHERE
        LEC_SN = #{pk}
        <selectKey keyProperty="lecSn" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_PJT_MNG' AND TABLE_NAME = 'DJ_PJT_LECTURE'
        </selectKey>
    </insert>

    <insert id="setLecTeacherCopyInsert" parameterType="map">
        /*setLecTeacherCopyInsert*/
        INSERT INTO CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ (
            LEC_SN,
            CON_SN,
            TEACHER_SN,
            TEACH_TIME
        )
        SELECT
            #{lecSn} AS LEC_SN,
            CON_SN,
            TEACHER_SN,
            TEACH_TIME
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_TEACHER_REQ
        WHERE
            LEC_SN = #{pk}
    </insert>

    <select id="getMemberIdCheck" parameterType="map" resultType="map">
        /* getIdCheck */
        SELECT
            *
        FROM
            CAM_PJT_MNG.DJ_PJT_LECTURE_PERSON
        WHERE
            NAME = #{name}
          AND
            HP_NUM = #{hpNum}
    </select>

    <select id="getPopCrmList" parameterType="map" resultType="map">
        /*getPopCrmList*/
        SELECT
        *
        FROM
        CAM_CRM.DJ_CRM_INFO
        WHERE
        1=1
        <choose>
            <when test='searchCategory != null and !"".equals(searchInput) and "3".equals(searchCategory)'>
                AND CRM_NO LIKE CONCAT('%', #{searchInput}, '%')
            </when>
            <when test='searchCategory != null and !"".equals(searchInput) and "2".equals(searchCategory)'>
                AND CRM_NM LIKE CONCAT('%', #{searchInput}, '%')
            </when>
            <when test="nameSearch != null and nameSearch != ''">
                AND CRM_NM LIKE CONCAT('%', #{nameSearch}, '%')
            </when>
            <!-- 추가된 조건: "전체"를 선택한 경우 -->
            <otherwise>
                AND (CRM_NO LIKE CONCAT('%', #{searchInput}, '%')
                OR CRM_NM LIKE CONCAT('%', #{searchInput}, '%'))
            </otherwise>
        </choose>
        ORDER BY MOD_DT DESC
    </select>

    <select id="getPopCrmOne" parameterType="map" resultType="map">
        SELECT
            *
        FROM
            CAM_CRM.DJ_CRM_INFO
        WHERE
            1=1
          AND  CRM_SN = #{crmSn}
    </select>

</mapper>