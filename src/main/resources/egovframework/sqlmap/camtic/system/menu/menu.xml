<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menu">
    <select id="getMainMenuList" resultType="map" parameterType="egovframework.com.devjitsu.gw.login.dto.LoginVO">
        /* getMainMenuList */
        SELECT
            M.MENU_ID,
            M.UPPER_MENU_ID,
            M.MENU_NAME,
            M.MENU_TYPE,
            M.SORT,
            M.MENU_DEPTH,
            M.MENU_PATH,
            M.ACTIVE,
            M.LANG,
            M.MENU_NAME TEXT,
            M.MENU_NAME_PATH,
            M.MENU_ID_PATH,
            M.MENU_CHILDREN_YN,
            M.MENU_FULL_PATH
        FROM
            CAM_COMMON.DJ_MENU_INFO M
        JOIN
        (
            SELECT
                MENU_ID
            FROM
                CAM_COMMON.DJ_MENU_AUTHORITY_GROUP MAG
            JOIN
                CAM_COMMON.DJ_MENU_ALLOW_ACCESS MAA
            ON MAA.AUTHORITY_GROUP_ID = MAG.AUTHORITY_GROUP_ID
            JOIN
                CAM_COMMON.DJ_MENU_AUTHORITY_GRANT MAGU
            ON MAG.AUTHORITY_GROUP_ID = MAGU.AUTHORITY_GROUP_ID AND EMP_SEQ = #{uniqId} AND MAGU.ACTIVE = 'Y'
        )MAGU
        on M.MENU_ID = MAGU.MENU_ID
        WHERE
            ACTIVE = 'Y'
        GROUP BY MENU_ID
        ORDER BY MENU_FULL_PATH
    </select>

    <select id="getMenuList" resultType="map" parameterType="map">
        /* getMenuList */
        SELECT
            MENU_ID,
            UPPER_MENU_ID,
            MENU_NAME,
            MENU_TYPE,
            SORT,
            MENU_DEPTH,
            MENU_PATH,
            ACTIVE,
            LANG,
            MENU_NAME TEXT,
            MENU_ID_PATH,
            MENU_CHILDREN_YN,
            MENU_FULL_PATH
        FROM
            CAM_COMMON.DJ_MENU_INFO
        WHERE
            1 = 1
        <if test='menuId != null and !"".equals(menuId)'>
            AND MENU_ID NOT IN (#{menuId})
        </if>
        <if test='menuDepth != null and !"".equals(menuDepth)'>
            AND MENU_DEPTH = #{menuDepth}
        </if>
        <if test='upperMenuId != null and !"".equals(upperMenuId)'>
            AND UPPER_MENU_ID = #{upperMenuId}
        </if>
        ORDER BY MENU_FULL_PATH
    </select>

    <update id="setMenuPathUpd" parameterType="map">
        /* setMenuPathUpd */
        UPDATE
            CAM_COMMON.DJ_MENU_INFO M,
            (
                WITH RECURSIVE CTE AS (
                    SELECT
                        MENU_ID,
                        MENU_NAME,
                        MENU_NAME AS MENU_NAME_PATH,
                        CAST(CONCAT(MENU_ID, '|') AS CHAR(100) CHARACTER SET UTF8) AS MENU_ID_PATH,
                        CAST(RIGHT(CONCAT('000', SORT, '|'), 5) AS CHAR(100) CHARACTER SET UTF8) AS MENU_FULL_PATH
                    FROM
                        CAM_COMMON.DJ_MENU_INFO
                    WHERE
                        UPPER_MENU_ID = 0
                    UNION ALL
                    SELECT
                        P.MENU_ID,
                        P.MENU_NAME,
                        CONCAT(C.MENU_NAME_PATH, ' > ', P.MENU_NAME) AS MENU_NAME_PATH,
                        CONCAT(C.MENU_ID_PATH, CONCAT(P.MENU_ID, '|')) AS MENU_ID_PATH,
                        CONCAT(C.MENU_FULL_PATH, RIGHT(CONCAT('000', P.SORT), 4), '|') AS MENU_FULL_PATH
                    FROM
                        CAM_COMMON.DJ_MENU_INFO P
                    INNER JOIN
                        CTE C
                    ON C.MENU_ID = P.UPPER_MENU_ID
                )
                SELECT
                    MENU_ID,
                    MENU_NAME_PATH,
                    MENU_ID_PATH,
                    MENU_FULL_PATH
                FROM CTE
            )b
        SET
            M.MENU_NAME_PATH = b.MENU_NAME_PATH,
            M.MENU_ID_PATH = b.MENU_ID_PATH,
            M.MENU_FULL_PATH = b.MENU_FULL_PATH
        WHERE
            M.MENU_ID = b.MENU_ID
    </update>

    <insert id="setMenu" parameterType="map">
        /* setMenu */
        INSERT INTO
            CAM_COMMON.DJ_MENU_INFO
            (
                UPPER_MENU_ID,
                MENU_NAME,
                MENU_TYPE,
                SORT,
                MENU_DEPTH,
                MENU_PATH,
                MENU_FULL_PATH,
                ACTIVE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{upperMenuId},
                #{menuName},
                #{menuType},
                #{sort},
                #{menuDepth},
                #{menuPath},
                (
                    SELECT
                        CONCAT(VM.MENU_FULL_PATH, RIGHT(CONCAT('000', #{sort}), 4), '|')
                    FROM
                        CAM_COMMON.DJ_MENU_INFO VM
                    WHERE
                        MENU_ID = #{upperMenuId}
                ),
                #{active},
                #{loginEmpSeq}
            )
    </insert>

    <select id="getMenuSortDuplicationList" parameterType="map" resultType="map">
        /* getMenuSortDuplicationList */
        SELECT
            MENU_ID,
            UPPER_MENU_ID,
            MENU_NAME,
            MENU_TYPE,
            SORT,
            MENU_DEPTH,
            MENU_PATH,
            ACTIVE,
            LANG,
            MENU_NAME TEXT,
            MENU_CHILDREN_YN,
            MENU_FULL_PATH
        FROM
            CAM_COMMON.DJ_MENU_INFO
        WHERE 1=1
        AND
            UPPER_MENU_ID = #{upperMenuId}
        AND
            SORT >= ${sort}
        ORDER BY MENU_FULL_PATH
    </select>

    <update id="setMenuSortDuplicationUpd" parameterType="map">
        /* setMenuSortDuplicationUpd */
        UPDATE
            CAM_COMMON.DJ_MENU_INFO
        SET
            SORT = ${SORT} + 1,
            MENU_FULL_PATH = (SELECT * FROM (
                SELECT
                    CONCAT(P.MENU_FULL_PATH, RIGHT(CONCAT('000', (C.SORT + 1)), 4), '|')
                FROM
                    CAM_COMMON.DJ_MENU_INFO C
                JOIN
                    CAM_COMMON.DJ_MENU_INFO P
                ON C.UPPER_MENU_ID = P.MENU_ID
                WHERE
                    C.MENU_ID = #{MENU_ID}
            )A)
        WHERE
            MENU_ID = #{MENU_ID}
    </update>

    <update id="setUpperMenuChildrenY" parameterType="map">
        /* setUpperMenuChildrenY */
        UPDATE
            CAM_COMMON.DJ_MENU_INFO
        SET
            MENU_CHILDREN_YN = 'Y'
        WHERE
            MENU_ID = #{upperMenuId}
    </update>

    <update id="setMenuUpd" parameterType="map">
        /* setMenuUpd */
        UPDATE
            CAM_COMMON.DJ_MENU_INFO
        SET
            UPPER_MENU_ID = #{upperMenuId},
            MENU_NAME = #{menuName},
            MENU_TYPE = #{menuType},
            SORT = #{sort},
            MENU_DEPTH = #{menuDepth},
            MENU_PATH = #{menuPath},
            ACTIVE = #{active},
            MOD_EMP_SEQ = #{loginEmpSeq}
        WHERE
            MENU_ID = #{menuId}
    </update>

    <delete id="setMenuDel" parameterType="map">
        /* setMenuDel */
        DELETE FROM CAM_COMMON.DJ_MENU_INFO WHERE MENU_ID = #{menuId}
    </delete>

    <select id="getMenuAuthorityGroupList" parameterType="map" resultType="map">
        /* getMenuAuthorityGroupList */
        SELECT
            MAR.AUTHORITY_GROUP_ID,
            MAR.AUTHORITY_GROUP_NAME,
            MAR.AUTHORITY_TYPE,
            CC.CM_CODE_NM,
            MAR.ACTIVE,
            DATE_FORMAT(MAR.REG_DATE, '%Y-%m-%d') AS REG_DT,
            IFNULL(DATE_FORMAT(MAR.MOD_DATE, '%Y-%m-%d'), '') AS MOD_DT
        FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GROUP MAR
        JOIN
            DJ_CAMTIC.V_COM_CODE CC
        ON CC.CM_CODE = MAR.AUTHORITY_TYPE AND CC.CM_GROUP_CODE_ID = 22
        WHERE 1=1
        <if test='searchContent != null and !"".equals(searchContent)'>
            AND AUTHORITY_GROUP_NAME LIKE CONCAT('%',#{searchContent},'%')
        </if>
    </select>

    <select id="getMenuAuthorityGroup" parameterType="map" resultType="map">
        /* getMenuAuthorityGroup */
        SELECT
            AUTHORITY_GROUP_ID,
            AUTHORITY_GROUP_NAME,
            AUTHORITY_TYPE,
            ACTIVE,
            DATE_FORMAT(REG_DATE, '%Y-%m-%d') AS REG_DT,
            IFNULL(DATE_FORMAT(MOD_DATE, '%Y-%m-%d'), '') AS MOD_DT
        FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GROUP
        WHERE
            AUTHORITY_GROUP_ID = #{authorityGroupId}
    </select>

    <select id="getAuthorityGroupAccessMenu" parameterType="map" resultType="map">
        /* getAuthorityGroupAccessMenu */
        SELECT
            *
        FROM
            CAM_COMMON.DJ_MENU_ALLOW_ACCESS
        WHERE
            AUTHORITY_GROUP_ID = #{authorityGroupId}
    </select>

    <insert id="setMenuAuthorityGroup" parameterType="map">
        /* setMenuAuthorityGroup */
        INSERT INTO
            CAM_COMMON.DJ_MENU_AUTHORITY_GROUP
            (
                AUTHORITY_GROUP_NAME,
                AUTHORITY_TYPE,
                ACTIVE,
                REG_EMP_SEQ
            )
        VALUES
            (
                #{authorityGroupName},
                #{authorityType},
                #{active},
                #{loginEmpSeq}
            )

        <selectKey keyProperty="authorityGroupId" resultType="Integer" order="BEFORE">
            SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'CAM_COMMON' AND TABLE_NAME = 'DJ_MENU_AUTHORITY_GROUP'
        </selectKey>
    </insert>

    <update id="setMenuAuthorityGroupUpd" parameterType="map">
        /* setMenuAuthorityGroupUpd */
        UPDATE
            CAM_COMMON.DJ_MENU_AUTHORITY_GROUP
        SET
            AUTHORITY_GROUP_NAME = #{authorityGroupName},
            AUTHORITY_TYPE = #{authorityType},
            ACTIVE = #{active},
            MOD_EMP_SEQ = #{loginEmpSeq}
        WHERE
            AUTHORITY_GROUP_ID = #{authorityGroupId}
    </update>

    <insert id="setAuthorityGroupAccessMenu" parameterType="list">
        /* setAuthorityGroupAccessMenu */
        INSERT INTO
            CAM_COMMON.DJ_MENU_ALLOW_ACCESS
            (
                AUTHORITY_GROUP_ID,
                MENU_ID,
                REG_EMP_SEQ
            )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.authorityGroupId},
                #{item.menuId},
                #{item.loginEmpSeq}
            )
        </foreach>
    </insert>

    <delete id="delAuthorityGroupAccessMenu" parameterType="map">
        /* delAuthorityGroupAccessMenu */
        DELETE FROM
            CAM_COMMON.DJ_MENU_ALLOW_ACCESS
        WHERE
            AUTHORITY_GROUP_ID = #{authorityGroupId}
    </delete>

    <delete id="setMenuAuthorityGroupDel" parameterType="java.util.List">
        DELETE FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GROUP
        WHERE
            AUTHORITY_GROUP_ID IN (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <delete id="setMenuAuthorityGroupInUserDel" parameterType="java.util.List">
        DELETE FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT
        WHERE
            AUTHORITY_GROUP_ID IN (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <select id="getAuthorityGroupUserList" parameterType="map" resultType="map">
        /* getAuthorityGroupUserList */
        SELECT
            MAG.AUTHORITY_GRANT_ID,
            MAG.AUTHORITY_GROUP_ID,
            MAG.EMP_SEQ,
            MAG.EMP_NAME,
            MAG.LOGIN_ID,
            CONCAT(MAG.EMP_NAME, '(', MAG.LOGIN_ID, ')') AS EMP_NAME_ID,
            MAG.DEPT_SEQ,
            MAG.DEPT_NAME,
            (SELECT DUTY_NAME FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = MAG.EMP_SEQ) AS DUTY_NAME,
            (SELECT POSITION_NAME FROM CAM_HR.DJ_EMP_INFO WHERE EMP_SEQ = MAG.EMP_SEQ) AS POSITION_NAME,
            MAG.AUTHORITY_DATE
        FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT MAG
        WHERE
            MAG.AUTHORITY_GROUP_ID = #{authorityGroupId}
        <if test='searchUserName != null and !"".equals(searchUserName)'>
        AND
            MAG.EMP_NAME LIKE CONCAT('%', #{searchUserName}, '%')
        </if>
    </select>

    <insert id="setAuthorityGroupUser" parameterType="map">
        INSERT INTO CAM_COMMON.DJ_MENU_AUTHORITY_GRANT
            (
                AUTHORITY_GROUP_ID,
                EMP_SEQ,
                EMP_NAME,
                LOGIN_ID,
                DEPT_SEQ,
                DEPT_NAME,
                DUTY_NAME,
                POSITION_NAME,
                AUTHORITY_DATE,
                REG_EMP_SEQ,
                ACTIVE
            )
        VALUES
            (
                #{authorityGroupId},
                #{empSeq},
                #{empName},
                #{loginId},
                #{deptSeq},
                #{deptName},
                #{dutyName},
                #{positionName},
                #{authorityDate},
                #{regEmpSeq},
                #{active}
            )
    </insert>

    <update id="setAuthorityGroupUserUpd" parameterType="map">
        UPDATE
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT
        SET
            AUTHORITY_DATE = #{authorityDate},
            ACTIVE = #{active},
            MOD_DATE = NOW(),
            MOD_EMP_SEQ = #{regEmpSeq}
        WHERE
            AUTHORITY_GRANT_ID = #{authorityGrantId}
    </update>

    <delete id="setAuthorityGroupUserDel" parameterType="java.util.List">
        DELETE FROM
            CAM_COMMON.DJ_MENU_AUTHORITY_GRANT
        WHERE
            AUTHORITY_GRANT_ID IN (
            <foreach collection="list" item="item" separator=",">
                #{item}
            </foreach>
            )
    </delete>
</mapper>